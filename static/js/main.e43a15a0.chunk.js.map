{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","config/constants/tokens.ts","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","components/Layout/Column.tsx","utils/formatBalance.ts","config/constants/index.ts","utils/index.ts","config/constants/types.ts","utils/contractHelpers.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Balance.tsx","utils/multicall.ts","state/pools/hooks.ts","hooks/Tokens.ts","state/user/hooks/index.tsx","utils/wrappedCurrency.ts","state/multicall/hooks.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","state/user/actions.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","config/index.ts","views/Pools/helpers.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","state/farms/hooks.ts","hooks/useToast.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/QuestionHelper/index.tsx","config/constants/pools.ts","utils/providers.ts","hooks/useTheme.ts","state/wallet/hooks.ts","components/Card/index.tsx","config/constants/endpoints.ts","components/ConnectWalletButton.tsx","hooks/useRefresh.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","config/localization/languages.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/usePairs.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","state/block/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","config/constants/nfts.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","components/Tags.tsx","utils/web3React.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","hooks/usePreviousValue.ts","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","config/constants/ifo.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","hooks/usePersistState.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getHVIAddress","hvi","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","shib","ample","skeleton","bvc","fps","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","Column","ColumnCenter","AutoColumn","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","ROUTER_ADDRESS","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getHVIContract","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","multicall","calls","multi","itf","utils","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","useFetchPublicPoolsData","dispatch","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","useSelector","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","reduce","newMap","token","tokenMap_","useAllTokens","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","useAudioModeManager","useDispatch","audioPlay","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlockNumber","useMultipleContractSingleData","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","removeSerializedPair","toggleTheme","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useToast","toastContext","ToastsContext","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","tokensymbol2","tokensymbol3","tokensymbol4","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","sortOrder","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTheme","theme","StyledThemeContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","RefreshContext","fast","slow","useAllTransactions","isTransactionRecent","allTransactions","code","languageList","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","lpSymbol1","lpAddresses","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","StyledLogo","uriLocations","isEvent","isCommunity","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","isZero","hexNumberString","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","external","href","isMetaMask","variant","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","CoreTag","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","gridGap","mb","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","paddingTop","pl","SettingsModal","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","setSingleHopOnly","onBack","maxWidth","prompt","checked","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","as","Link","BodyWrapper","AppBody","blockSlice","sample","parseENSAddress","ensAddress","ensPath","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","Dots","span","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","usePreviousValue","Footer","StyledNav","nav","Nav","location","activeIndex","xs","SubNav","flexGrow","setStateLastUpdated","previousLastUpdated","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","userSelect","disabled","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","endIcon","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","cardHeader","Label","ImageWrapper","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e43a15a0.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: 'LIMIT DEPOSIT',\n    withdrawtime4: '5.000',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: 'LIMIT DEPOSIT',\n    withdrawtime4: '10.000',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009722',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00000625',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000000347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '38000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '38000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '38000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.048',\n    sortOrder: 200,\n    isFinished: false,\n   },\n]\n\nexport default pools\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n  \n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: 'https://www.vizslaswap.com/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: 'https://www.vizslaswap.com/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n\n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n      <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text mb=\"4px\" color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : antiwhalepools\n  } \n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as=\"a\" width={50} height={35}  href=\"/pools\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as=\"a\"width={50} height={35}  href=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}