{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/swap/actions.ts","state/mint/actions.ts","config/constants/tokens.ts","components/Layout/Column.tsx","utils/addressHelpers.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/index.ts","utils/index.ts","config/constants/types.ts","config/constants/multicall/index.ts","hooks/useContract.ts","utils/contractHelpers.ts","state/multicall/hooks.ts","components/Balance.tsx","state/user/actions.ts","config/constants/index3.ts","state/user/hooks/index.tsx","utils/multicall.ts","hooks/Tokens.ts","utils/wrappedCurrency.ts","components/SearchModal/types.ts","state/pools/hooks.ts","utils/index3.ts","components/Logo/DoubleLogo.tsx","config/constants/contracts.ts","config/constants/lists.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","config/constants/tokens3.ts","hooks/useApproveCallback.ts","state/types.ts","config/index.ts","views/Pools/helpers.tsx","state/lists/hooks.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","components/Card/index.tsx","utils/addressHelpers2.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/prices.ts","config/constants/pools.ts","state/user/hooks/useUserAddedTokens3.ts","hooks/Tokens3.ts","utils/prices3.ts","state/multicall/actions.ts","state/farms/hooks.ts","hooks/useTheme.ts","hooks/useToast.ts","utils/providers.ts","state/transactions/hooks.tsx","state/predictions/helpers.ts","state/predictions/queries.ts","components/ConnectWalletButton.tsx","state/wallet/hooks.ts","config/constants/endpoints.ts","hooks/useRefresh.ts","config/constants/farms.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","state/transactions/actions.ts","state/lists/hooks3.ts","components/Logo/DoubleLogo2.tsx","hooks/usePairs.ts","config/localization/languages.ts","utils/wrappedCurrency3.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","hooks/useDebounce.ts","components/Logo/CurrencyLogo.tsx","utils/isZero.ts","state/swap/hooks.ts","utils/compoundApyHelpers.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","state/lottery/helpers.ts","utils/currencyId.ts","state/wallet/hooks3.ts","state/user/hooks/index3.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","components/Loader/CircleLoader.tsx","components/TransactionConfirmationModal/index.tsx","hooks/useTokenBalance.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","utils/trades.ts","hooks/Trades.ts","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","contexts/Localization/helpers.ts","config/index3.ts","state/block/hooks.ts","components/Loader/Dots.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","config/constants/ifo.ts","utils/wallet.ts","config/constants/nfts.ts","hooks/useAuth.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","utils/getRpcUrl.ts","config/abi/erc20.ts","components/UnsupportedCurrencyFooter.tsx","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/mint/hooks.ts","state/teams/index.tsx","state/transactions/hooks3.tsx","state/swap/hooks3.ts","config/constants/lottery.ts","state/profile/hooks.ts","hooks/usePreviousValue.ts","components/Tags.tsx","utils/web3React.ts","state/block/index.ts","hooks/useFetchListCallback.ts","utils/ENS/parseENSAddress.ts","components/Logo/Logo.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo2.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","utils/trades3.ts","hooks/Trades3.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","components/PositionCard/index.tsx","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","components/Logo/ListLogo.tsx","state/application/actions.ts","utils/getTokenList.ts","utils/contenthashToUri.ts","utils/ENS/resolveENSContentHash.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","hooks/useParsedQueryString.ts","components/Menu/Footer.tsx","hooks/useTokenAllowance.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","state/burn/actions.ts","hooks/usePersistState.ts","hooks/usePairs3.ts","utils/achievements.ts","utils/latinise.ts","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","hooks/useApproveCallback2.ts","config/constants/index2.ts","views/AddLiquidity2/ConfirmAddModalBottom.tsx","views/AddLiquidity2/PoolPriceBar.tsx","views/AddLiquidity2/index.tsx","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/App/AppBody.tsx","components/Loader/PageLoader.tsx","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","components/App/Settings/TransactionSettings.tsx","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases3.tsx","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","components/SearchModal/ImportToken3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","utils/maxAmountSpend3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","selectCurrency","createAction","switchCurrencies","typeInput","replaceSwapState","setRecipient","resetMintState","CAKE","ChainId","MAINNET","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","tokens","bnb","symbol","projectLink","cake","address","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","shib","ample","skeleton","hvi","bvc","ace","etc","hank","fps","Column","ColumnCenter","AutoColumn","getAddress","getCakeAddress","getHVIAddress","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","ROUTER_ADDRESS","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","getRouterContract2","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLotteryV2Contract","getLotteryV2Contract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useFarmAuctionContract","getFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","abi","signer","signerOrProvider","bep20Abi","erc721Abi","ifoV1Abi","ifoV2Abi","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","cakeAbi","getHVIContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","farmAuctionAbi","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","useSelector","multicall","dispatch","useDispatch","serializedCallKeys","JSON","stringify","filter","c","map","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","res","i","multicallv2","requireSuccess","tryAggregate","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","CurrencyModalView","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","ApprovalState","useApproveCallback","amountToApprove","spender","currentAllowance","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","activeListUrls","url","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","listUrl","requestId","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","allowance","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","tokensymbol2","tokensymbol3","tokensymbol4","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","sortOrder","serializedTokensMap","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","usePriceHVIBusd","useTheme","StyledThemeContext","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useAllTransactions","isTransactionRecent","allTransactions","some","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","RefreshContext","fast","slow","lpSymbol1","lpAddresses","isEvent","isCommunity","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","code","languageList","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","variant","mb","window","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","to","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","hexNumberString","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","owner","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","small","textAlign","TransactionSubmittedContent","currencyToAdd","external","isMetaMask","registerToken","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply2","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","Dots","span","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","image","tokenAdded","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","walletconnect","close","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","getNodeUrl","sample","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","uriToHttp","uri","ZERO","useMintState","useMintActionHandlers","onFieldAInput","onFieldBInput","CURRENCY_B","useDerivedMintInfo","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","parsedAmounts","price","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","poolTokenPercentage","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","useFetchProfile","hasProfile","usePreviousValue","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","resolveENSContentHash","sendDispatch","nanoid","getTokenList","parseENSAddress","ensAddress","ensPath","BAD_SRCS","src","onError","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","inactiveTokenList","isAdded","opacity","minWidth","ImportToken","handleCurrencySelect","setConfirmed","addToken","gridTemplateRows","gridGap","userSelect","disabled","maxAmountSpend","greaterThan","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","FixedHeightRow","MinimalPositionCard","showUnwrapped","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","Footer","SubNav","setStateLastUpdated","previousLastUpdated","StyledListLogo","ListLogo","tokenListValidator","Ajv","allErrors","compile","schema","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","parseArrays","ignoreQueryPrefix","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","height","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","handleInput","e","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","setSearchQuery","inputRef","checksummedInput","searchToken","removeToken","handleRemoveAll","isAddressValid","isWarning","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ConfirmAddModalBottom","onAdd","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","marginTop","AddLiquidity","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","BodyWrapper","AppBody","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","onBlur","isSuccess","pl","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","disable","CommonBases","onSelect","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","debouncedQuery","invertSearchOrder","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","focus","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","endIcon","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","PoolFinder","PoolFinder2","RemoveLiquidity","RemoveLiquidity2","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a51a9f3b.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { ChainId, Token } from '@pancakeswap2/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00000520833333335',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '4%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.00000520833333335',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '14',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009722',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00000625',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000000347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.048',\n    sortOrder: 200,\n    isFinished: false,\n   },\n]\n\nexport default pools\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB2 LP',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n  \n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/addapeliquidity`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool2`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index2'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenuItem, ButtonMenu } from '@pancakeswap/uikit'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback2'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n             <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem} from '@pancakeswap/uikit'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n       <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants/index3'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases3'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : antiwhalepools\n  } \n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as=\"a\" width={50} height={35}  href=\"/pools\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as=\"a\"width={50} height={35}  href=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon,ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n        <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon, ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n          <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport ApeSwap from './views/ApeSwap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}