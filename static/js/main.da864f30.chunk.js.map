{"version":3,"sources":["config/constants/types.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/index.ts","utils/index.ts","config/constants/index.ts","state/user/actions.ts","utils/contractHelpers.ts","components/Balance.tsx","hooks/useContract.ts","state/user/hooks/index.tsx","state/types.ts","utils/multicall.ts","state/pools/hooks.ts","utils/wrappedCurrency.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","components/QuestionHelper/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","config/constants/endpoints.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","utils/providers.ts","state/wallet/hooks.ts","hooks/usePairs.ts","state/predictions/config.ts","state/info/actions.ts","state/lottery/helpers.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","state/profile/helpers.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/transactions/hooks.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","hooks/useCallWithGasPrice.ts","hooks/useRefresh.ts","config/constants/nfts/pancakeBunnies.ts","config/constants/nfts/index.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","state/lottery/index.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/nfts/collections.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","components/Loader/CircleLoader.tsx","utils/getRpcUrl.ts","config/constants/nfts/types.ts","state/lottery/getUserLotteryData.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","utils/collectibles.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","state/profile/hooks.ts","components/Layout/Container.tsx","components/TokenImage/index.tsx","hooks/usePreviousValue.ts","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","state/lottery/getUserTicketsData.ts","routerHistory.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useAuth.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/hooks.ts","hooks/useLastUpdated.ts","components/Loader/PageLoader.tsx","hooks/useBUSDPrice.ts","utils/getTimePeriods.ts","hooks/useIntersectionObserver.ts","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","components/PageHeader/PageHeader.tsx","utils/apr.ts","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/Loading.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","getAddress","address","ChainId","MAINNET","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","tlos","stephero","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BASE_BSC_SCAN_URLS","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","isAddress","getBscScanLink","type","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserUsernameVisibility","userUsernameVisibility","usernameVisibility","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchUserPools","fastRefresh","fetchPoolsUserDataAsync","usePools","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","protocol","overview","chartData","transactions","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","default","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","includes","newTokens","x","poolsWatchlist","newPools","now","addTransaction","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getTotalWon","request","GRAPH_API_PREDICTION","gql","market","totalBNBTreasury","getBetHistory","where","first","skip","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","parseUnits","fast","instant","isMethodArg","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","useBlock","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","enableEmergencyWithdraw","COMMUNITY","useToast","toastContext","ToastsContext","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_PROFILE","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","description","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","useInitialBlock","initialBlock","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","ConnectWalletButton","useAuth","login","logout","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","images","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useAllTransactions","isTransactionRecent","allTransactions","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","RefreshContext","slow","Nfts","lg","md","ipfs","video","webm","mp4","identifier","blur","nfts","CollectionKey","PANCAKE","pancakeBunnies","getTokenLogoURL","StyledLogo","uriLocations","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","totalTickets","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","getGraphLotteryUser","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","isZero","hexNumberString","getItem","startLength","endLength","substring","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","collections","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","Container","PageMeta","pathname","cakePriceUsd","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","target","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","userSelect","prompt","GasSettings","setGasPrice","PancakeToggleWrapper","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","borderTop","TransactionSettings","GlobalSettings","useModal","onPresentSettingsModal","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","BodyWrapper","AppBody","blockSlice","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","sample","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","blankUser","userRes","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastError","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","getTokenUrl","tokenUri","getBunnyNftAddress","collectionKey","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","pancake","Dots","span","textColor","useTotalSupply","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","useFetchProfile","hasProfile","useGetProfileAvatar","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","usePreviousValue","BubbleWrapper","flexGrow","StyledNav","nav","Nav","location","xs","SubNav","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","history","createBrowserHistory","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","activate","deactivate","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","close","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","refresh","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","IDLE","newestRound","maxBy","futureRound","futureRounds","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","PageLoader","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","busdPrice","useBNBBusdPrice","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","Outer","Inner","PageHeader","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","Menu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","y","NftGiveawayModal","NO_CLAIM","canClaim","mintData","getLottieClaim","variationId","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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ACA,6CACA,GACA,OACA,cACA,wBAEFmC,IAAK,IAAIZ,IACPvB,EACA,6CACA,GACA,MACA,oBACA,2BAEFoC,IAAK,IAAIb,IACPvB,EACA,6CACA,GACA,MACA,6BACA,4BAEFqC,KAAM,IAAId,IACRvB,EACA,6CACA,GACA,OACA,uBACA,8BAEFsC,KAAM,IAAIf,IACRvB,EACA,6CACA,GACA,OACA,eACA,sBAEFuC,SAAU,IAAIhB,IACZvB,EACA,6CACA,GACA,WACA,iBACA,6BAEFwC,KAAM,IAAIjB,IACRvB,EACA,6CACA,GACA,OACA,aACA,yBAEFyC,MAAO,IAAIlB,IACTvB,EACA,6CACA,GACA,QACA,mBACA,2BAEF0C,IAAK,IAAInB,IACPvB,EACA,6CACA,GACA,MACA,cACA,yBAEF2C,MAAO,IAAIpB,IACTvB,EACA,6CACA,GACA,QACA,gBACA,4BAEF4C,OAAQ,IAAIrB,IACVvB,EACA,6CACA,GACA,SACA,eACA,8BAEF6C,IAAK,IAAItB,IACPvB,EACA,6CACA,GACA,MACA,cACA,2BAEF8C,MAAO,IAAIvB,IACTvB,EACA,6CACA,EACA,QACA,cACA,wBAEF+C,MAAO,IAAIxB,IACTvB,EACA,6CACA,EACA,QACA,cACA,0BAEFgD,MAAO,IAAIzB,IACTvB,EACA,6CACA,GACA,QACA,iBACA,gCAEFiD,IAAK,IAAI1B,IACPvB,EACA,6CACA,GACA,MACA,cACA,yBAEFkD,SAAU,IAAI3B,IACZvB,EACA,6CACA,GACA,WACA,kBACA,yBAEFmD,KAAM,IAAI5B,IACRvB,EACA,6CACA,GACA,OACA,gBACA,wBAEFoD,KAAM,IAAI7B,IACRvB,EACA,6CACA,GACA,OACA,iBACA,wBAEFqD,IAAK,IAAI9B,IACPvB,EACA,6CACA,GACA,MACA,0BACA,mBAEFsD,KAAM,IAAI/B,IACRvB,EACA,6CACA,GACA,OACA,oBACA,oCAEFuD,KAAM,IAAIhC,IACRvB,EACA,6CACA,GACA,OACA,aACA,+BAEFwD,MAAO,IAAIjC,IACTvB,EACA,6CACA,GACA,QACA,qBACA,gCAEFyD,GAAI,IAAIlC,IACNvB,EACA,6CACA,GACA,KACA,2BACA,+BAEF0D,IAAK,IAAInC,IACPvB,EACA,6CACA,GACA,MACA,sBACA,6BAEF2D,MAAO,IAAIpC,IACTvB,EACA,6CACA,GACA,QACA,cACA,0BAEF4D,MAAO,IAAIrC,IACTvB,EACA,6CACA,GACA,QACA,kBACA,yBAEF6D,QAAS,IAAItC,IACXvB,EACA,6CACA,GACA,MACA,oBACA,4BAEF8D,KAAM,IAAIvC,IAAMvB,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG+D,IAAK,IAAIxC,IACPvB,EACA,6CACA,GACA,MACA,wBACA,4BAEFgE,IAAK,IAAIzC,IACPvB,EACA,6CACA,GACA,MACA,qBACA,4BAEFiE,OAAQ,IAAI1C,IACVvB,EACA,6CACA,GACA,SACA,eACA,uBAEFkE,OAAQ,IAAI3C,IACVvB,EACA,6CACA,GACA,SACA,uBACA,iCAEFmE,KAAM,IAAI5C,IACRvB,EACA,6CACA,GACA,OACA,kBACA,yBAEFoE,IAAK,IAAI7C,IAAMvB,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FqE,KAAM,IAAI9C,IACRvB,EACA,6CACA,GACA,OACA,aACA,yBAEFsE,IAAK,IAAI/C,IACPvB,EACA,6CACA,GACA,MACA,kBACA,6BAEFuE,MAAO,IAAIhD,IACTvB,EACA,6CACA,GACA,QACA,qBACA,iCAEFwE,MAAO,IAAIjD,IACTvB,EACA,6CACA,EACA,QACA,0BACA,oCAEFyE,IAAK,IAAIlD,IACPvB,EACA,6CACA,GACA,MACA,gBACA,6BAEF0E,IAAK,IAAInD,IACPvB,EACA,6CACA,GACA,MACA,mBACA,kCAEF2E,KAAM,IAAIpD,IACRvB,EACA,6CACA,EACA,OACA,aACA,wBAEF4E,KAAM,IAAIrD,IACRvB,EACA,6CACA,GACA,OACA,kBACA,yBAEF6E,IAAK,IAAItD,IACPvB,EACA,6CACA,GACA,MACA,iBACA,qBAEF8E,KAAM,IAAIvD,IACRvB,EACA,6CACA,GACA,OACA,aACA,yBAEF+E,IAAK,IAAIxD,IACPvB,EACA,6CACA,GACA,MACA,uBACA,qBAEFgF,IAAK,IAAIzD,IACPvB,EACA,6CACA,EACA,MACA,oBACA,gCAEFiF,MAAO,IAAI1D,IACTvB,EACA,6CACA,EACA,QACA,2BACA,sCAEFkF,KAAM,IAAI3D,IACRvB,EACA,6CACA,GACA,OACA,mBACA,+BAEFmF,KAAM,IAAI5D,IACRvB,EACA,6CACA,GACA,OACA,kCACA,qBAEFoF,IAAK,IAAI7D,IACPvB,EACA,6CACA,GACA,MACA,kBACA,8BAEFqF,MAAO,IAAI9D,IACTvB,EACA,6CACA,GACA,QACA,wBACA,uBAEFsF,KAAM,IAAI/D,IACRvB,EACA,6CACA,GACA,OACA,aACA,sBAEFuF,QAAS,IAAIhE,IACXvB,EACA,6CACA,GACA,UACA,wBACA,4BAEFwF,IAAK,IAAIjE,IACPvB,EACA,6CACA,GACA,MACA,iBACA,wBAEFyF,KAAM,IAAIlE,IACRvB,EACA,6CACA,GACA,OACA,aACA,0BAEF0F,IAAK,IAAInE,IACPvB,EACA,6CACA,GACA,MACA,YACA,0BAEF2F,IAAK,IAAIpE,IACPvB,EACA,6CACA,GACA,MACA,gBACA,2BAEF4F,KAAM,IAAIrE,IACRvB,EACA,6CACA,GACA,OACA,uBACA,2BAEF6F,IAAK,IAAItE,IACPvB,EACA,6CACA,GACA,MACA,iBACA,6BAEF8F,KAAM,IAAIvE,IACRvB,EACA,6CACA,EACA,OACA,eACA,2BAEF+F,IAAK,IAAIxE,IACPvB,EACA,6CACA,GACA,MACA,gBACA,uBAEFgG,KAAM,IAAIzE,IACRvB,EACA,6CACA,GACA,OACA,eACA,uBAEFiG,MAAO,IAAI1E,IACTvB,EACA,6CACA,GACA,QACA,iBACA,yBAEFkG,MAAO,IAAI3E,IACTvB,EACA,6CACA,GACA,QACA,4BACA,uBAEFmG,KAAM,IAAI5E,IACRvB,EACA,6CACA,GACA,OACA,aACA,sBAEFoG,MAAO,IAAI7E,IACTvB,EACA,6CACA,GACA,QACA,sBACA,6BAEFqG,IAAK,IAAI9E,IACPvB,EACA,6CACA,EACA,MACA,gBACA,0BAEFsG,IAAK,IAAI/E,IACPvB,EACA,6CACA,EACA,MACA,yBACA,0BAEFuG,GAAI,IAAIhF,IACNvB,EACA,6CACA,EACA,KACA,gBACA,0BAEFwG,KAAM,IAAIjF,IACRvB,EACA,6CACA,GACA,OACA,qBACA,yBAEFyG,IAAK,IAAIlF,IACPvB,EACA,6CACA,EACA,MACA,iBACA,0BAEF0G,IAAK,IAAInF,IACPvB,EACA,6CACA,EACA,MACA,4BACA,0BAEF2G,IAAK,IAAIpF,IACPvB,EACA,6CACA,GACA,MACA,iBACA,8CAEF4G,KAAM,IAAIrF,IACRvB,EACA,6CACA,GACA,OACA,aACA,6BAEF6G,IAAK,IAAItF,IACPvB,EACA,6CACA,GACA,MACA,qBACA,4BAEF8G,KAAM,IAAIvF,IACRvB,EACA,6CACA,EACA,OACA,aACA,wBAEF+G,QAAS,IAAIxF,IACXvB,EACA,6CACA,GACA,UACA,eACA,sBAEFgH,KAAM,IAAIzF,IACRvB,EACA,6CACA,GACA,OACA,gBACA,4BAEFiH,IAAK,IAAI1F,IACPvB,EACA,6CACA,GACA,MACA,oBACA,4BAEFkH,IAAK,IAAI3F,IACPvB,EACA,6CACA,GACA,MACA,iBACA,yBAEFmH,IAAK,IAAI5F,IACPvB,EACA,6CACA,EACA,MACA,eACA,kCAEFoH,IAAK,IAAI7F,IACPvB,EACA,6CACA,GACA,MACA,2BACA,kCAEFqH,IAAK,IAAI9F,IAAMvB,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGsH,MAAO,IAAI/F,IACTvB,EACA,6CACA,GACA,QACA,sBACA,4BAEFuH,IAAK,IAAIhG,IAAMvB,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGwH,MAAO,IAAIjG,IACTvB,EACA,6CACA,GACA,QACA,yBACA,sBAEFyH,KAAM,IAAIlG,IACRvB,EACA,6CACA,GACA,OACA,yBACA,6BAEF0H,KAAM,IAAInG,IACRvB,EACA,6CACA,GACA,OACA,sBACA,0BAEF2H,KAAM,IAAIpG,IACRvB,EACA,6CACA,GACA,OACA,qBACA,yBAEF4H,KAAM,IAAIrG,IACRvB,EACA,6CACA,GACA,OACA,qBACA,8CAEF6H,MAAO,IAAItG,IACTvB,EACA,6CACA,GACA,QACA,4BACA,2BAEF8H,OAAQ,IAAIvG,IACVvB,EACA,6CACA,GACA,SACA,6BACA,2BAEF+H,MAAO,IAAIxG,IACTvB,EACA,6CACA,GACA,QACA,4BACA,2BAEFgI,MAAO,IAAIzG,IACTvB,EACA,6CACA,GACA,QACA,4BACA,2BAEFiI,IAAK,IAAI1G,IACPvB,EACA,6CACA,GACA,MACA,6BACA,yBAEFkI,IAAK,IAAI3G,IACPvB,EACA,6CACA,GACA,MACA,6BACA,4BAEFmI,KAAM,IAAI5G,IACRvB,EACA,6CACA,GACA,OACA,kCACA,6BAEFoI,IAAK,IAAI7G,IACPvB,EACA,6CACA,GACA,MACA,6BACA,6BAEFqI,IAAK,IAAI9G,IACPvB,EACA,6CACA,GACA,MACA,wBACA,mBAEFsI,KAAM,IAAI/G,IACRvB,EACA,6CACA,GACA,OACA,8BACA,uBAEFuI,IAAK,IAAIhH,IACPvB,EACA,6CACA,GACA,MACA,wBACA,2BAEFwI,KAAM,IAAIjH,IACRvB,EACA,6CACA,GACA,OACA,2BACA,2BAEFyI,KAAM,IAAIlH,IACRvB,EACA,6CACA,GACA,OACA,iCACA,wBAEF0I,IAAK,IAAInH,IACPvB,EACA,6CACA,GACA,MACA,0BACA,0BAEF2I,IAAK,IAAIpH,IACPvB,EACA,6CACA,GACA,MACA,iCACA,qBAEF4I,IAAK,IAAIrH,IACPvB,EACA,6CACA,GACA,MACA,kCACA,0BAEF6I,IAAK,IAAItH,IACPvB,EACA,6CACA,GACA,MACA,4BACA,wBAEF8I,IAAK,IAAIvH,IACPvB,EACA,6CACA,GACA,MACA,6BACA,wBAEF+I,KAAM,IAAIxH,IACRvB,EACA,6CACA,GACA,OACA,mBACA,+BAEFgJ,OAAQ,IAAIzH,IACVvB,EACA,6CACA,GACA,SACA,mBACA,2BAEFiJ,MAAO,IAAI1H,IACTvB,EACA,6CACA,GACA,QACA,yBACA,2BAEFkJ,QAAS,IAAI3H,IACXvB,EACA,6CACA,GACA,UACA,2BACA,2BAEFmJ,MAAO,IAAI5H,IACTvB,EACA,6CACA,GACA,QACA,iBACA,yBAEFoJ,IAAK,IAAI7H,IACPvB,EACA,6CACA,GACA,MACA,iBACA,uBAEFqJ,IAAK,IAAI9H,IACPvB,EACA,6CACA,GACA,MACA,wBACA,2BAEFsJ,KAAM,IAAI/H,IACRvB,EACA,6CACA,GACA,OACA,oBACA,uBAEFuJ,IAAK,IAAIhI,IACPvB,EACA,6CACA,GACA,MACA,oBACA,2BAEFwJ,KAAM,IAAIjI,IACRvB,EACA,6CACA,GACA,OACA,mBACA,kCAEFyJ,IAAK,IAAIlI,IACPvB,EACA,6CACA,GACA,MACA,gBACA,4BAEF0J,KAAM,IAAInI,IACRvB,EACA,6CACA,EACA,OACA,qBACA,yBAEF2J,KAAM,IAAIpI,IACRvB,EACA,6CACA,EACA,OACA,yBACA,6BAEF4J,IAAK,IAAIrI,IACPvB,EACA,6CACA,GACA,MACA,gBACA,gCAEF6J,IAAK,IAAItI,IACPvB,EACA,6CACA,GACA,MACA,sBACA,6BAEF8J,KAAM,IAAIvI,IACRvB,EACA,6CACA,GACA,OACA,qBACA,iCAEF+J,IAAK,IAAIxI,IACPvB,EACA,6CACA,GACA,MACA,sBACA,qBAEFgK,KAAM,IAAIzI,IACRvB,EACA,6CACA,GACA,OACA,aACA,2BAEFiK,KAAM,IAAI1I,IAAMvB,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGkK,IAAK,IAAI3I,IAAMvB,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FmK,KAAM,IAAI5I,IACRvB,EACA,6CACA,GACA,OACA,iBACA,wBAEFoK,OAAQ,IAAI7I,IACVvB,EACA,6CACA,GACA,SACA,eACA,+BAEFqK,IAAK,IAAI9I,IACPvB,EACA,6CACA,GACA,MACA,mBACA,+BAEFsK,KAAM,IAAI/I,IACRvB,EACA,6CACA,GACA,OACA,qBACA,yBAEFuK,KAAM,IAAIhJ,IACRvB,EACA,6CACA,GACA,OACA,kBACA,yBAEFwK,IAAK,IAAIjJ,IACPvB,EACA,6CACA,GACA,MACA,yBACA,6BAEFyK,IAAK,IAAIlJ,IACPvB,EACA,6CACA,GACA,MACA,wBACA,wBAEF0K,IAAK,IAAInJ,IACPvB,EACA,6CACA,EACA,MACA,6BACA,2BAEF2K,KAAM,IAAIpJ,IACRvB,EACA,6CACA,GACA,OACA,SACA,4BAEF4K,KAAM,IAAIrJ,IACRvB,EACA,6CACA,GACA,OACA,YACA,4BAEF6K,IAAK,IAAItJ,IACPvB,EACA,6CACA,GACA,MACA,yBACA,gCAEF8K,MAAO,IAAIvJ,IACTvB,EACA,6CACA,GACA,QACA,iBACA,+BAEF+K,IAAK,IAAIxJ,IACPvB,EACA,6CACA,GACA,MACA,oBACA,8BAEFgL,IAAK,IAAIzJ,IACPvB,EACA,6CACA,GACA,MACA,YACA,oCAEFiL,MAAO,IAAI1J,IACTvB,EACA,6CACA,GACA,QACA,cACA,0BAEFkL,IAAK,IAAI3J,IACPvB,EACA,6CACA,GACA,MACA,gBACA,4BAEFmL,YAAM,IAAI5J,IACRvB,EACA,6CACA,EACA,YACA,sBACA,8BAEFoL,OAAQ,IAAI7J,IACVvB,EACA,6CACA,GACA,SACA,cACA,kCAEFqL,IAAK,IAAI9J,IACPvB,EACA,6CACA,GACA,MACA,iBACA,yBAEFsL,IAAK,IAAI/J,IACPvB,EACA,6CACA,GACA,MACA,qBACA,yBAEFuL,IAAK,IAAIhK,IACPvB,EACA,6CACA,GACA,MACA,+BACA,+BAEFwL,IAAK,IAAIjK,IACPvB,EACA,6CACA,GACA,MACA,aACA,yBAEFyL,IAAK,IAAIlK,IACPvB,EACA,6CACA,GACA,MACA,YACA,yBAEF0L,MAAO,IAAInK,IACTvB,EACA,6CACA,GACA,QACA,4BACA,2BAEF2L,KAAM,IAAIpK,IACRvB,EACA,6CACA,GACA,OACA,aACA,2BAEF4L,IAAK,IAAIrK,IACPvB,EACA,6CACA,GACA,MACA,wBACA,0BAEF6L,IAAK,IAAItK,IACPvB,EACA,6CACA,GACA,MACA,gCACA,0BAEF8L,KAAM,IAAIvK,IACRvB,EACA,6CACA,GACA,OACA,aACA,uBAEF+L,IAAK,IAAIxK,IACPvB,EACA,6CACA,EACA,MACA,mBACA,wBAEFgM,KAAM,IAAIzK,IACRvB,EACA,6CACA,EACA,OACA,uBACA,yBAEFiM,KAAM,IAAI1K,IACRvB,EACA,6CACA,GACA,OACA,kBACA,0BAEFkM,IAAK,IAAI3K,IACPvB,EACA,6CACA,GACA,MACA,eACA,2BAEFmM,KAAM,IAAI5K,IACRvB,EACA,6CACA,GACA,OACA,iBACA,yBAEFoM,aAAO,IAAI7K,IACTvB,EACA,6CACA,EACA,aACA,iBACA,8BAEFqM,IAAK,IAAI9K,IACPvB,EACA,6CACA,GACA,MACA,eACA,2BAEFsM,KAAM,IAAI/K,IACRvB,EACA,6CACA,GACA,OACA,eACA,uBAEFuM,MAAO,IAAIhL,IACTvB,EACA,6CACA,EACA,QACA,qBACA,2BAEFwM,KAAM,IAAIjL,IACRvB,EACA,6CACA,GACA,OACA,aACA,8BAEFyM,KAAM,IAAIlL,IACRvB,EACA,6CACA,GACA,OACA,aACA,yBAEF0M,IAAK,IAAInL,IAAMvB,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F2M,IAAK,IAAIpL,IACPvB,EACA,6CACA,EACA,MACA,eACA,wBAEF4M,KAAM,IAAIrL,IACRvB,EACA,6CACA,GACA,OACA,aACA,gCAEF6M,KAAM,IAAItL,IACRvB,EACA,6CACA,GACA,OACA,gBACA,8BAEF8M,IAAK,IAAIvL,IACPvB,EACA,6CACA,GACA,MACA,kBACA,0BAEF+M,OAAQ,IAAIxL,IACVvB,EACA,6CACA,GACA,SACA,cACA,0BAEFgN,MAAO,IAAIzL,IACTvB,EACA,6CACA,GACA,QACA,wBACA,uBAEFiN,GAAI,IAAI1L,IACNvB,EACA,6CACA,GACA,KACA,gBACA,2BAEFkN,IAAK,IAAI3L,IACPvB,EACA,6CACA,GACA,MACA,qBACA,qBAEFmN,KAAM,IAAI5L,IACRvB,EACA,6CACA,GACA,OACA,4BACA,4BAEFoN,KAAM,IAAI7L,IACRvB,EACA,6CACA,GACA,OACA,qBACA,yBAEFqN,IAAK,IAAI9L,IACPvB,EACA,6CACA,GACA,MACA,gBACA,uBAEFsN,IAAK,IAAI/L,IACPvB,EACA,6CACA,GACA,MACA,mBACA,0BAEFuN,KAAM,IAAIhM,IACRvB,EACA,6CACA,GACA,OACA,oBACA,mCAEFwN,GAAI,IAAIjM,IAAMvB,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FyN,IAAK,IAAIlM,IACPvB,EACA,6CACA,GACA,MACA,iBACA,4BAEF0N,KAAM,IAAInM,IACRvB,EACA,6CACA,GACA,OACA,cACA,2BAEF2N,OAAQ,IAAIpM,IACVvB,EACA,6CACA,GACA,SACA,kBACA,8BAEF4N,MAAO,IAAIrM,IACTvB,EACA,6CACA,GACA,QACA,kBACA,yBAEF6N,KAAM,IAAItM,IACRvB,EACA,6CACA,EACA,OACA,aACA,+BAEF8N,GAAI,IAAIvM,IACNvB,EACA,6CACA,GACA,KACA,gBACA,uBAEF+N,IAAK,IAAIxM,IAAMvB,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGgO,IAAK,IAAIzM,IACPvB,EACA,6CACA,GACA,MACA,eACA,0BAEFiO,IAAK,IAAI1M,IACPvB,EACA,6CACA,GACA,MACA,yBACA,wBAEFkO,IAAK,IAAI3M,IACPvB,EACA,6CACA,GACA,MACA,wBACA,4BAEFmO,SAAU,IAAI5M,IACZvB,EACA,6CACA,EACA,WACA,iBACA,yBAEFoO,IAAK,IAAI7M,IACPvB,EACA,6CACA,GACA,MACA,qCACA,6BAEFqO,IAAK,IAAI9M,IACPvB,EACA,6CACA,GACA,MACA,eACA,uBAEFsO,KAAM,IAAI/M,IACRvB,EACA,6CACA,GACA,OACA,gBACA,wBAEFuO,IAAK,IAAIhN,IACPvB,EACA,6CACA,GACA,MACA,mBACA,oCAEFwO,KAAM,IAAIjN,IACRvB,EACA,6CACA,GACA,OACA,aACA,iCAEFyO,GAAI,IAAIlN,IACNvB,EACA,6CACA,GACA,KACA,kBACA,8BAEF0O,MAAO,IAAInN,IACTvB,EACA,6CACA,GACA,QACA,qBACA,yBAEF2O,KAAM,IAAI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Y,EAAwB,CAC5B,CACE32D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,SACP23B,MAAO,gBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,WACP23B,MAAO,oBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,mBACP23B,MAAO,eAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,OACP23B,MAAO,gBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,aACP23B,MAAO,iBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,QACP23B,MAAO,eAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,UACP23B,MAAO,iBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,SACP23B,MAAO,kBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,QACP23B,MAAO,eAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,QACP23B,MAAO,iBAET,CACE52D,GAAI,YACJ3F,KAAM,MACN4kC,MAAO,QACP23B,MAAO,eAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,wBACP23B,MAAO,4BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,uBACP23B,MAAO,2BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,uBACP23B,MAAO,2BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,uBACP23B,MAAO,2BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,2BACP23B,MAAO,+BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,0BACP23B,MAAO,8BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,6BACP23B,MAAO,iCAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,0BACP23B,MAAO,8BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,yBACP23B,MAAO,6BAET,CACE52D,GAAI,YACJ3F,KAAM,aACN4kC,MAAO,6BACP23B,MAAO,iCAET,CACE52D,GAAI,YACJ3F,KAAM,gBACN4kC,MAAO,eACPC,YAAa,qDACb03B,MAAO,oBAET,CACE52D,GAAI,YACJ3F,KAAM,gBACN4kC,MAAO,cACPC,YAAa,mDACb03B,MAAO,mBAET,CACE52D,GAAI,YACJ3F,KAAM,gBACN4kC,MAAO,SACPC,YAAa,iDACb03B,MAAO,cAET,CACE52D,GAAI,YACJ3F,KAAM,gBACN4kC,MAAO,QACPC,YAAa,8CACb03B,MAAO,aAET,CACE52D,GAAI,YACJ3F,KAAM,gBACN4kC,MAAO,SACPC,YAAa,uDACb03B,MAAO,eAQEC,EAAc,IAAI11E,IAE/Bw1E,EAAUlzE,SAAQ,SAACqzE,GACjBD,EAAYz1E,IAAI01E,EAAS92D,GAAI82D,O,6BCpN/B,uFAIO,SAASt2C,EAAa/nB,EAAiB05C,GAC5C,GAAsB,IAAlBA,EAAOlxB,OAAc,OAAOxoB,EAEhC,IAAMs+D,EAAmB58D,YAAUg4C,GAEnC,GAAI4kB,EACF,OAAOt+D,EAAO4S,QAAO,SAAC1B,GAAD,OAAWA,EAAMjgB,UAAYqtE,KAGpD,IAAMC,EAAmB7kB,EACtB5kC,cACAvkB,MAAM,OACNqiB,QAAO,SAACiN,GAAD,OAAOA,EAAE2I,OAAS,KAE5B,GAAgC,IAA5B+1C,EAAiB/1C,OACnB,OAAOxoB,EAGT,IAAMw+D,EAAgB,SAAC3+C,GACrB,IAAM4+C,EAAS5+C,EACZ/K,cACAvkB,MAAM,OACNqiB,QAAO,SAAC8rD,GAAD,OAAQA,EAAGl2C,OAAS,KAE9B,OAAO+1C,EAAiBjsC,OAAM,SAACzf,GAAD,OAAoB,IAAbA,EAAE2V,QAAgBi2C,EAAOr1B,MAAK,SAACu1B,GAAD,OAAQA,EAAGhR,WAAW96C,IAAM8rD,EAAGC,SAAS/rD,UAG7G,OAAO7S,EAAO4S,QAAO,SAAC1B,GACpB,IAAQiY,EAAiBjY,EAAjBiY,OAAQnU,EAAS9D,EAAT8D,KAChB,OAAQmU,GAAUq1C,EAAcr1C,IAAanU,GAAQwpD,EAAcxpD,MAIhE,SAAS6pD,EAAuB7+D,EAA6B8nB,GAClE,OAAOvc,mBAAQ,WACb,IAAKvL,EACH,MAAO,GAGT,IAAM8+D,EAAch3C,EACjBhT,cACAvkB,MAAM,OACNqiB,QAAO,SAACiN,GAAD,OAAOA,EAAE2I,OAAS,KAE5B,GAAIs2C,EAAYt2C,OAAS,EACvB,OAAOxoB,EAGT,IAAM++D,EAAwB,GACxBC,EAA2B,GAC3BzI,EAAgB,GAatB,OAVAv2D,EAAO0S,KAAI,SAACxB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMiY,cAAN,eAAcrU,iBAAkBgqD,EAAY,GACvCC,EAAa5/C,KAAKjO,IAE3B,UAAIA,EAAMiY,cAAV,aAAI,EAAcrU,cAAc64C,WAAW7lC,EAAYhT,cAAcmqD,SAC5DD,EAAgB7/C,KAAKjO,GAEvBqlD,EAAKp3C,KAAKjO,MAGb,GAAN,OAAW6tD,EAAiBC,EAAoBzI,KAC/C,CAACv2D,EAAQ8nB,M,0LC1DDo3C,EAAc,SAACC,GAC1B,OAAIA,EAASxR,WAAW,WAChB,GAAN,OAAUlsD,IAAV,YAA0B09D,EAASznC,MAAM,IAGpCynC,GAGIC,EAAqB,WAA2D,IAA1DC,EAAyD,uDAA1BpkB,IAAcC,QAC9E,OAAOlqD,YAAWm3D,IAAYkX,GAAepuE,UAGlCquE,EAAkB,uCAAG,WAAOC,GAAP,qBAAA71E,EAAA,oEAExB81E,EAAep1E,aAAa+yD,QAAQoiB,IAFZ,uBAKtB70E,EAAOmoC,KAAKK,MAAMssC,GALI,kBAMrB90E,GANqB,uBASAqmD,MAAMwuB,GATN,WASxBE,EATwB,QAWTzuB,GAXS,uBAYtB,IAAIplD,MAAM,2BAZY,yBAeR6zE,EAAgBxuB,OAfR,eAexByuB,EAfwB,OAgB9Bt1E,aAAaC,QAAQk1E,EAAU1sC,KAAKC,UAAU4sC,IAhBhB,kBAiBvBA,GAjBuB,yCAmB9BhzD,QAAQD,MAAR,MAnB8B,kBAoBvB,MApBuB,0DAAH,sDAwBlBkzD,EAAe,uCAAG,WAAOjvB,EAAoBC,GAA3B,mBAAAjnD,EAAA,sEAErB4nC,EAAWtqB,YAAkB0pC,GAFR,SAGJpf,EAASsuC,SAASjvB,GAHd,cAGrBwuB,EAHqB,gBAILG,EAAmBJ,EAAYC,IAJ1B,UAIrBO,EAJqB,iDAOlB,MAPkB,iCAUpBA,GAVoB,yCAY3BhzD,QAAQD,MAAM,kBAAd,MAZ2B,kBAapB,MAboB,0DAAH,wDAiBf6kC,EAAe,uCAAG,WAAOZ,EAAoBC,GAA3B,eAAAjnD,EAAA,sEACPi2E,EAAgBjvB,EAAYC,GADrB,UACvB+uB,EADuB,gDAMpB,MANoB,gCAStB1kB,IAAK6kB,QAAQp4D,MAAK,SAAC8pC,GACxB,OAAOmuB,EAAQrY,MAAMzrC,SAAS21B,EAAIuJ,gBAVP,2CAAH,yD,2CC7DtBglB,E,KAAO/yE,EAAOgzE,KAAV,oUAqBKD,O,g5WCvBf,YAGM/9C,EAAgB,CACpB,CACExa,GAAI,EACJyN,KAAM,cACNyxB,YAAa,gFACboL,OAAQ,CACN2I,GAAI,qBACJC,GAAI,qBACJxU,GAAI,qBACJxf,IAAK,sBACLi0B,KAAK,GAAD,OAAKj5C,IAAL,oEAEN0sC,WAAY,qBACZ6xB,UAAW,UACX/wC,MAAO,EACP2hB,OAAQ,GAEV,CACErpC,GAAI,EACJyN,KAAM,oBACNyxB,YAAa,yFACboL,OAAQ,CACN2I,GAAI,2BACJC,GAAI,2BACJxU,GAAI,2BACJxf,IAAK,4BACLi0B,KAAK,GAAD,OAAKj5C,IAAL,0EAEN0sC,WAAY,2BACZ6xB,UAAW,UACX/wC,MAAO,EACP2hB,OAAQ,GAEV,CACErpC,GAAI,EACJyN,KAAM,iBACNyxB,YAAa,sFACboL,OAAQ,CACN2I,GAAI,wBACJC,GAAI,wBACJxU,GAAI,wBACJxf,IAAK,yBACLi0B,KAAK,GAAD,OAAKj5C,IAAL,uEAEN0sC,WAAY,wBACZ6xB,UAAW,UACX/wC,MAAO,EACP2hB,OAAQ,IAIG7uB,O,8BCrDf,2BAcek+C,IARf,SAAwB/uD,GAAyC,IAAD,IACxDogB,EAAW3kB,YAAgB,OAACuE,QAAD,IAACA,OAAD,EAACA,EAAOjgB,SAAS,GAE5CivE,EAAsB,UAAGl3C,YAAoBsI,EAAU,sBAAjC,iBAAG,EAA8C5b,cAAjD,aAAG,EAAuD,GAEtF,OAAOxE,GAASgvD,EAAc,IAAIvnD,IAAYzH,EAAOgvD,EAAY70E,iBAAcrC,I,8ugBCH3E6nD,EAAkBtoC,cAEXkpC,EAAO,uCAAG,WAAOhB,GAAP,yBAAA/mD,EAAA,+EAE2DmnD,EAAgBsvB,eAAe1vB,GAF1F,uBAER2vB,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmB7vB,EAFrB,EAEkB,GAAoB8vB,EAFtC,EAEmC,GAChDC,EAAiB7Y,IAAUjgD,MAAK,SAAC+4D,GAAD,OAAgBA,EAAWj5D,KAAOkpC,KAHrD,kBAKZgwB,IAAM,GAAIF,EAAgB,CAC/BD,aACAtrD,KAAMorD,EACNnxC,MAAOoxC,EAAYpxE,WACnB2hD,OAAQJ,EAAavhD,cATJ,2DAYZ,MAZY,0DAAH,sDAmBPi5D,EAAQ,uCAAG,sCAAAx+D,EAAA,sEAEdg3E,EAAYhZ,IAAUznD,QAAO,SAACC,EAAOwxC,GACzC,OAAO,2BACFxxC,GADL,kBAEGwxC,EAAKnqC,GAAKmqC,MAEZ,IAPiB,SAQEb,EAAgB8vB,cARlB,OAWpB,IAHMC,EARc,OAUdrsD,EAAQ,GACLc,EAAI,EAAGA,GAAKurD,EAASvrD,IAC5Bd,EAAM4K,KAAK,CACTluB,QAASO,cACTwjB,KAAM,iBACNC,OAAQ,CAACI,KAfO,gBAkBGE,YAAY/M,EAAY+L,GAlB3B,cAkBdssD,EAlBc,OAoBdC,EAAkBD,EAAS5gE,QAAO,SAACC,EAAOwxC,EAAMniB,GACpD,IAAW6wC,EAA6D1uB,EAAhE,GAAgB2uB,EAAgD3uB,EAAnD,GAAmBlB,EAAgCkB,EAAnC,GAAoB4uB,EAAe5uB,EAAlB,GAEtD,OAAO,2BACFxxC,GADL,kBAEGqvB,EAAQ,EAAI,CACXva,KAAMorD,EACNnxC,MAAOoxC,EAAYpxE,WACnB2hD,OAAQJ,EAAavhD,WACrBqxE,kBAGH,IAhCiB,kBAkCbG,IAAM,GAAIC,EAAWI,IAlCR,2DAoCb,MApCa,0DAAH,sD,6BC9BrB,qEAOe,SAAS95C,IACtB,IAAQh7B,EAAYH,cAAZG,QACF+0E,EAAsB/yD,aAAkD,qBAAGC,KAAQjO,UAEzF,OAAOuL,mBAAQ,WAAO,IAAD,EACnB,OAAKvf,EACElB,OAAOk9B,OAAP,iBAAc+4C,QAAd,IAAcA,OAAd,EAAcA,EAAsB/0E,UAApC,QAA2D,IAAI0mB,IAAIS,KADrD,KAEpB,CAAC4tD,EAAqB/0E,M,iCCd3B,0JAQag1E,EAAkB,WAC7B,IAAQp+D,EAAY9W,cAAZ8W,QACFiL,EAAW+H,cAEjBnsB,qBAAU,WACRokB,EAAS8kC,YAAa/vC,MACrB,CAACA,EAASiL,KAGFhC,EAAa,WACxB,MAAwEmC,aAAY,SAACzkB,GAAD,OAAkBA,EAAMs4B,WAApGowB,EAAR,EAAQA,cAAeh6B,EAAvB,EAAuBA,UAAWvtB,EAAlC,EAAkCA,KAAM0mD,EAAxC,EAAwCA,cACxC,MAAO,CAAEvvB,QAASn3B,EAAMu2E,WAAYhvB,GAAiBb,EAAea,gBAAeh6B,cAGxEipD,EAAsB,SAACt+D,GAClC,IACA,EADsBoL,aAAY,SAACzkB,GAAD,OAAkBA,EAAMs4B,QAAQqwB,eAAetvC,OACtC,GAAnCsuC,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,IACZ1jC,EAAW+H,cAcjB,OAZAnsB,qBAAU,WACR,IAAMwH,EAAUyQ,YAAUkB,IAErB2uC,GAAOtgD,GACV4c,EAASskC,YAAmBvvC,KAGzBsuC,GAAYK,GAAOtgD,GACtB4c,EAASukC,YAAqBxvC,MAE/B,CAACA,EAAS2uC,EAAKL,EAAUrjC,IAErB,CAAEqjC,WAAUK,S,oFC9BN6b,IANuB,SAAC,GAAD,IAAGlkE,EAAH,EAAGA,SAAa6hB,EAAhB,wBACpC,cAAC,IAAD,yBAAKg0C,GAAI,CAAC,OAAQ,QAASpgD,GAAG,OAAO+0D,SAAS,UAAa3oD,GAA3D,aACG7hB,O,uMCUCi4E,EAAuB,SAACjwD,GAC5B,IAAMjgB,EAA2B,QAAjBigB,EAAMiY,OAAmBnpB,IAAOvN,KAAKxB,QAAUigB,EAAMjgB,QACrE,MAAM,kBAAN,OAAyBA,EAAzB,SAGWmwE,EAAgD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAmBv2D,EAAY,iBAC3G,OACE,cAAC,KAAD,aACEw2D,WAAYJ,EAAqBE,GACjCG,aAAcL,EAAqBG,IAC/Bv2D,KASG02D,EAAwC,SAAC,GAAyB,IAAvBvwD,EAAsB,EAAtBA,MAAUnG,EAAY,iBAC5E,OAAO,cAAC,KAAD,aAAiB22D,IAAKP,EAAqBjwD,IAAYnG,M,6BCnChE,WAiBe42D,IAVU,SAACp2E,GACxB,IAAMutC,EAAM3sC,mBAMZ,OAJA1C,qBAAU,WACRqvC,EAAIvsC,QAAUhB,IACb,CAACA,IAEGutC,EAAIvsC,U,mGCTPq5B,EAAU74B,IAAOU,IAAV,yOAQT,qBAAG8zC,MAAkByE,aAAayU,MAMhCmnB,EAAgB70E,YAAO2wD,IAAP3wD,CAAH,qOAEP,qBAAGw0C,MAAkB2M,OAAO2P,cA6DzBJ,EA9CA,WACb,IAAQjyD,EAAMC,cAAND,EACR,OACE,eAACo6B,EAAD,WACE,eAAC,IAAD,CAAMg5B,cAAe,CAAC,SAAU,SAAU,OAAQW,WAAW,SAA7D,UACE,eAAC,IAAD,CAAYpY,QAAQ,SAAS0c,MAAM,KAAKuC,YAAa,EAArD,UACE,cAAC,IAAD,iBACA,cAAC,IAAD,CAAgBve,GAAG,IAAIE,KAAK,4CAA5B,yBAIF,cAAC,KAAD,CACEA,KAAK,2DACL+gB,GAAI,CAAC,EAAG,EAAG,QACXlJ,GAAI,CAAC,OAAQ,OAAQ,GACrBgG,GAAI,CAAC,MAAO,MAAO,GAJrB,SAMGp6D,EAAE,iCAGP,eAAC,IAAD,CACEq2E,SAAU,EACVtiB,WAAW,SACXtyD,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAChCqyD,eAAgB,CAAC,SAAU,SAAU,SAAU,YAJjD,UAME,eAACsiB,EAAD,WACE,cAAC,IAAD,CACEr6D,GAAG,oBACHsgC,GAAG,IACHC,UAAQ,EACRC,KAAK,iEACLZ,QAAQ,SALV,SAOG37C,EAAE,iBAEL,cAAC,KAAD,CAAKgrE,QAAQ,YAAb,SACE,sBAAMG,EAAE,mEAGZ,cAAC,KAAD,CAAO+K,IAAI,mBAAmBj7C,IAAI,gBAAgBx5B,MAAO,IAAKwyD,OAAQ,a,gBCtExEqiB,EAAY/0E,IAAOg1E,IAAV,oDAmCAC,EAjBH,WACV,IAfsB1U,EAehB2U,EAAWtoB,cACTnuD,EAAMC,cAAND,EACR,OACE,cAACs2E,EAAD,UACE,eAAC,IAAD,CAAY1b,aAnBMkH,EAmBsB2U,EAAS3U,SAjBnDA,EAAS1xC,SAAS,UAClB0xC,EAAS1xC,SAAS,YAClB0xC,EAAS1xC,SAAS,SAClB0xC,EAAS1xC,SAAS,YAClB0xC,EAAS1xC,SAAS,UAClB0xC,EAAS1xC,SAAS,cAEX,EAEF,GAQyDioC,MAAM,KAAK1c,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgB5/B,GAAG,gBAAgB2wC,GAAG,QAAQrQ,GAAIkuB,IAAlD,SACGvqE,EAAE,UAEL,cAAC,IAAD,CAAgB+b,GAAG,gBAAgB2wC,GAAG,QAAQrQ,GAAIkuB,IAAlD,SACGvqE,EAAE,qB,wBC3BP2hE,EAAapgE,IAAOU,IAAV,qYAQA,qBAAG8zC,MAAkB2M,OAAO0U,UAAUC,aAElD,qBAAGthB,MAAkByE,aAAak8B,MAIlC,qBAAG3gC,MAAkByE,aAAaC,MAKlC,qBAAG1E,MAAkByE,aAAawU,MAoBvBwT,IAd8C,SAAC,GAA4B,IAA1B9kE,EAAyB,EAAzBA,SAAa6hB,EAAY,iBACvF,OACE,qCACE,cAAC,IAAD,IACA,eAACoiD,EAAD,2BAAgBpiD,GAAhB,cACE,cAACo3D,EAAD,IACCj5E,EACD,cAAC,IAAD,CAAM24E,SAAU,IAChB,cAAC,EAAD,a,oKCnCF12B,EAAkBpiC,cAEXq5D,EAA4B,SAACC,GACxC,kBAAmDA,EAAnD,GAAOC,EAAP,KAAkBC,EAAlB,KAAiCC,EAAjC,KAEA,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAW95C,QAAS,EACf85C,EAAU5vD,KAAI,SAAC+vD,EAAUlzC,GAC9B,MAAO,CACLhoB,GAAIk7D,EAASp3E,WACbiE,OAAQizE,EAAchzC,GAAOlkC,WAC7B2kC,OAAQwyC,EAAejzC,OAItB,IAGImzC,EAAwB,uCAAG,WACtC9/D,EACAyoC,EACA5Z,EACAkxC,GAJsC,eAAAj5E,EAAA,+EAOjByhD,EAAgBu3B,yBAAyB9/D,EAASyoC,EAAW5Z,EAAQkxC,GAPpD,cAO9Bj4E,EAP8B,yBAQ7B03E,EAA0B13E,IARG,uCAUpCgiB,QAAQD,MAAM,2BAAd,MAVoC,kBAW7B,MAX6B,yDAAH,4DAexBm2D,EAA2B,uCAAG,WAAOhgE,EAAiByoC,GAAxB,qBAAA3hD,EAAA,sDACrC+nC,EAAS,EACToxC,EAAcza,IACZ0a,EAAa,GAHsB,UAKlCD,IAAgBza,IALkB,iCAOhBsa,EAAyB9/D,EAASyoC,EAAW5Z,EAAQ22B,KAPrC,OAOjC55B,EAPiC,OAQvCiD,GAAU22B,IACVya,EAAcr0C,EAAShG,OACvBs6C,EAAW3jD,KAAX,MAAA2jD,EAAU,YAASt0C,IAVoB,gDAalCs0C,GAbkC,4CAAH,wDAgB3B1K,EAAiC,uCAAG,WAC/C2K,EACAngE,GAF+C,qBAAAlZ,EAAA,sDAIzCs5E,EAA2B,GACxB3tD,EAAI,EALkC,YAK/BA,EAAI0tD,EAAWv6C,QALgB,wBAMvCglB,EAAUu1B,EAAW1tD,GANkB,SAQfutD,EAA4BhgE,EAAS4qC,GARtB,OAQvCy1B,EARuC,OAS7CD,EAAyB7jD,KAAK,CAC5BquB,UACAK,YAAao1B,IAX8B,OAKR5tD,GAAK,EALG,gDAcxC2tD,GAdwC,4CAAH,yD,gCCrD9C,aAGME,EAAUC,cAEDD,O,iCCLf,4BAKME,EAAiB,IAAI1wE,IAAMxB,IAAQC,QAASqwB,IAAM,GAAGyhB,YAAY/xC,IAAQC,SAAU,GAAIqwB,IAAM,GAAG0hB,UAEhGmgC,EAAc,CAClB,CACE97D,GAAI,SACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,gBACNsuD,UAAW,CACTC,WAAY,eACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,IAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOvM,KACdmwE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,0FACZC,mBAAoB,EACpB/kD,QAAS,GAEX,CACEzX,GAAI,WACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,uBACNsuD,UAAW,CACTC,WAAY,sBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,sBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOtM,SACdkwE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,iGACZC,mBAAoB,IACpB/kD,QAAS,GAEX,CACEzX,GAAI,UACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,yBACNsuD,UAAW,CACTC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOhE,IACd4nE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,mGACZC,mBAAoB,IACpB/kD,QAAS,GAEX,CACEzX,GAAI,OACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,cACN2uD,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOrM,KACdiwE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,QACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,qBACN2uD,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOpM,MACdgwE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,+FACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,QACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,cACN2uD,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOnM,IACd+vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,UACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,kBACN2uD,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOlM,MACd8vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,SACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,yBACN2uD,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOjM,OACd6vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,sGACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,QACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,cACN2uD,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAOhM,IACd4vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,QACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,gBACN2uD,cAAe,CACbJ,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAO/L,MACd2vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,gGACZC,mBAAoB,KACpB/kD,QAAS,GAEX,CACEzX,GAAI,QACJtW,QAAS,6CACTge,UAAU,EACV+F,KAAM,cACN2uD,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBhgE,SAAU0/D,EACVlyD,MAAOlR,IAAO9L,MACd0vE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,oFACZC,mBAAoB,KACpB/kD,QAAS,IAIEqkD,O,ogZC3OTW,EAA6B,oBAAqBC,SAExD,SAAS/7B,IACP,OAAK87B,GAI+B,YAA7BC,SAASC,gBAMH,SAAS/7B,IACtB,MAAkCh/C,mBAAS++C,KAA3C,mBAAOi8B,EAAP,KAAkBC,EAAlB,KAeA,OAbA36E,qBAAU,WACR,GAAKu6E,EAAL,CAEA,IAAMK,EAAyB,WAC7BD,EAAal8B,MAIf,OADA+7B,SAASK,iBAAiB,mBAAoBD,GACvC,WACLJ,SAASM,oBAAoB,mBAAoBF,OAElD,CAACD,IAEGD,I,6JC2CMj0B,IAvDC,WACd,IAAQ1kD,EAAMC,cAAND,EACFqiB,EAAW+H,cACjB,EAAiC9pB,cAAzB04E,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVnJ,EAAev5B,cAAfu5B,WAgDR,MAAO,CAAEnrB,MA9CK3lD,uBACZ,SAACk6E,GACC,IAAMC,EAAYjU,IAAiBgU,GAC/BC,EACFH,EAASG,EAAD,uCAAY,WAAOl4D,GAAP,SAAA/iB,EAAA,2DACd+iB,aAAiBm4D,KADH,gCAEO/d,cAFP,eAId2d,EAASG,GAJK,sBAOhB/9B,OAAOx8C,aAAay6E,WAAWC,MAC3Br4D,aAAiBs4D,KAA2Bt4D,aAAiBu4D,qBAC/D1J,EAAW9vE,EAAE,kBAAmBA,EAAE,0BAElCihB,aAAiBw4D,KACjBx4D,aAAiBy4D,KAEbP,aAAqBvU,MACCuU,EACRQ,sBAAwB,MAE1C7J,EAAW9vE,EAAE,uBAAwBA,EAAE,6CAEvC8vE,EAAW7uD,EAAMuI,KAAMvI,EAAM08C,SApBf,2CAAZ,uDAyBRmS,EAAW9vE,EAAE,4BAA6BA,EAAE,oCAGhD,CAACA,EAAGg5E,EAAUlJ,IAcAlrB,OAXD5lD,uBAAY,WACzBqjB,EAAS4kC,eACTgyB,IAEI79B,OAAOx8C,aAAa+yD,QAAQ,mBAC9BuT,IAAiBP,cAAciV,QAC/B1U,IAAiBP,cAAcgV,sBAAwB,MAEzDv+B,OAAOx8C,aAAay6E,WAAWC,QAC9B,CAACL,EAAY52D,O,qGC9DH,SAASw3D,IACtB,IAAMh/B,EAAMr4B,aAA8B,SAACzkB,GAAD,OAAWA,EAAM0kB,KAAK8C,gBAC1Du0D,ECJO,WAA4D,IAAD,IAClEhxD,EAAY5G,cAClB,iBAAOsb,YAAoB1U,EAAW,mCAAtC,iBAAO,EAA4DoB,cAAnE,aAAO,EAAqE,GDErD6vD,GACvB,OAAOh6D,mBAAQ,WACb,GAAI+5D,GAAkBj/B,EAAK,OAAOi/B,EAAevjE,IAAIskC,KAEpD,CAACi/B,EAAgBj/B,M,4ppBECTm/B,EAAoB,SAACxtD,GAChC,MAAO,CACL2c,UAAW3c,EAAW,IAAI/pB,IAAU+pB,EAAS2c,WAAa3mC,IAC1DkwC,oBAAqBlmB,EAAW,IAAI/pB,IAAU+pB,EAASkmB,qBAAuBlwC,IAC9EmwC,cAAenmB,EAAW,IAAI/pB,IAAU+pB,EAASmmB,eAAiBnwC,IAClEouC,cAAepkB,EAAW,IAAI/pB,IAAU+pB,EAASokB,eAAiBpuC,MAIzD0oB,EAAgB,SAAChP,GAC5B,IAAQwyB,EAA6ExyB,EAA7EwyB,YAAaI,EAAgE5yB,EAAhE4yB,aAActiB,EAAkDtQ,EAAlDsQ,SAAU0hB,EAAwChyB,EAAxCgyB,aAAckE,EAA0Bl2B,EAA1Bk2B,aAAiB24B,EAA5E,YAAqF7uD,EAArF,GAEA,OAAO,2BACF6uD,GADL,IAEE78B,aAAcvmB,YAAiBumB,GAC/BkE,aAAczqB,YAAiByqB,GAC/B5lB,SAAUwtD,EAAkBxtD,GAC5BkiB,YAAa,IAAIjsC,IAAUisC,GAC3BI,aAAc,IAAIrsC,IAAUqsC,MAInB4C,EAAyB,SAAC1b,GACrC,OAAOA,EAAMvhB,QAAO,SAACg9B,EAAQ4F,GAC3B,IAAM4iC,EAAoB5iC,EAAKY,WAAWxyC,QAAQy0E,oBAC5C94D,EAAei2B,EAAK3xB,MAAMjgB,QAAQy0E,oBASxC,OAPKzoC,EAAOwoC,KACVxoC,EAAOwoC,GAAqB,IAAIx3E,IAAU40C,EAAKU,qBAAqBt0C,YAEjEguC,EAAOrwB,KACVqwB,EAAOrwB,GAAgB,IAAI3e,IAAU40C,EAAKW,gBAAgBv0C,YAGrDguC,IACN,M,8BCjDL,iEAIA,IAAMiM,EAAkB,IAAIv0B,IAAU9H,GAEN,IAAI8H,IAAUrH,GAE/B47B,O,6BCRf,0EAeA,IAAMy8B,EAAgB,IAAIC,YAMX,SAASnM,EAAiBe,GACvC,IAAMqL,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAInY,WAAW,MAAQmY,EAAIre,OAAO,GAAKqe,GACrCt9C,OAAS,IAAM,EAAG,MAAM,IAAI58B,MAAM,8CAE1C,IADA,IAAMm6E,EAAM,IAAIC,WAAWF,EAAIt9C,OAAS,GAC/BnT,EAAI,EAAGA,EAAI0wD,EAAIv9C,OAAQnT,IAC9B0wD,EAAI1wD,GAAK7oB,SAASs5E,EAAIre,OAAW,EAAJpyC,EAAO,GAAI,IAE1C,OAAO0wD,EAUME,CAAgBzL,GACvB0L,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAMx7E,EAAO07E,mBAASP,GAChBQ,EAAM,IAAIC,IAAI57E,GACpB,MAAM,UAAN,OAAiB67E,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAM97E,EAAO07E,mBAASP,GAChBQ,EAAM,IAAIC,IAAI57E,GACd87E,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUxxD,KACN,UAAN,OAAiB2wD,EAAcc,OAAOD,EAAUE,QAAQzH,QAEpD,UAAN,OAAiBsH,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAI56E,MAAJ,8BAAiCs6E,O,8JCnCvC7rB,EAAiB2hB,IAAMjzE,cAAc,CAAEuxD,KAAM,EAAGvoB,KAAM,IAsBtD40C,EAAyB,SAAC,GAAkB,IAAhBz9E,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAOmxD,EAAP,KAAassB,EAAb,KACA,EAAwBz9E,mBAAS,GAAjC,mBAAO4oC,EAAP,KAAa80C,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwB36E,kBAAO,GAcrC,OAZA1C,qBAAU,WACR,IAAMs9E,EAAqB,WACzBD,EAAsBv6E,SAAW03E,SAAS+C,QAK5C,OAFApgC,OAAO09B,iBAAiB,mBAAoByC,GAErC,WACLngC,OAAO29B,oBAAoB,mBAAoBwC,MAEhD,IAEID,EAOuBG,GAoB9B,OAlBAx9E,qBAAU,WACR,IAAMy9E,EAAW9+B,YAAW,sBAAC,sBAAA1+C,EAAA,sDACvBo9E,EAAsBv6E,SACxBs6E,GAAQ,SAAC/nB,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMxW,cAAc4+B,MAC1B,CAACJ,IAEJr9E,qBAAU,WACR,IAAMy9E,EAAW9+B,YAAW,sBAAC,sBAAA1+C,EAAA,sDACvBo9E,EAAsBv6E,SACxBq6E,GAAQ,SAAC9nB,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMxW,cAAc4+B,MAC1B,CAACJ,IAEG,cAACzsB,EAAe/uD,SAAhB,CAAyBC,MAAO,CAAE+uD,OAAMvoB,QAAxC,SAAiD7oC,M,2KClCpDi+E,EAAgBp6E,IAAOU,IAAV,6NAMR,qBAAG8zC,MAAkB2M,OAAO3V,QACjB,qBAAGgJ,MAAkB2M,OAAOk5B,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7B59B,EAA4B,EAA5BA,WAAYwb,EAAgB,EAAhBA,UAC/Cj5D,EAAYH,cAAZG,QACFgU,EACJhU,GAAWy9C,EACPA,EAAW/2B,KAAI,SAAChP,GACd,OAAO8U,YAAgB9U,EAAU1X,MAEnC,GAEA+gE,EAAkDtlC,cAExD,OACE,cAAC,KAAD,CAAO+e,MAAM,qBAAqBktB,SAAS,QAAQzO,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYv3D,IAAI,KAAhB,UACGsS,EAAO0S,KAAI,SAACxB,GAAW,IAAD,EACrB,OACEA,GACA67C,GACAjiE,OAAOC,KAAKgiE,GAAmBnxC,SAAS1K,EAAMjgB,UAC5C,eAAC,IAAD,CAAyDvD,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwW,SAAUwN,EAAO+U,KAAK,SACpC,cAAC,KAAD,UAAO/U,EAAMiY,YAEdn9B,GACC,cAAC,KAAD,CAAM87C,UAAQ,EAACqX,OAAK,EAACz0C,MAAM,cAAcq9B,KAAMpmC,YAAeuP,EAAMjgB,QAAS,UAAWjF,GAAxF,SACGklB,EAAMjgB,YAPb,UAAiBigB,EAAMjgB,eAAvB,aAAiB,EAAeoiB,OAAO,qBAc7C,cAAC,IAAD,CAAY3lB,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAAS45E,EAAT,GAA8F,IAAzD79B,EAAwD,EAAxDA,WAClD,EAAyBgrB,aAAS,cAAC4S,EAAD,CAAkB59B,WAAYA,KAAzD89B,EAAP,oBAEA,OACE,cAACJ,EAAD,UACE,cAAC,IAAD,CAAQhgC,QAAQ,OAAOr8B,QAASy8D,EAAhC,oD,6FCzEAC,EAA6C,GA+BpClhD,IAtBmB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,KAAMD,EAAmB,EAAnBA,IAAQ8vC,EAAW,iBAC5D,EAAoBptE,mBAAiB,GAA5Bs+E,EAAT,oBAEM/F,EAA0Bh7C,EAAKjf,MAAK,SAACoY,GAAD,OAAQ2nD,EAAS3nD,MAE3D,OAAI6hD,EAEA,+CACMnL,GADN,IAEE9vC,IAAKA,EACLi7C,IAAKA,EACLgG,QAAS,WACHhG,IAAK8F,EAAS9F,IAAO,GACzB+F,GAAQ,SAACpyD,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAckhD,M,8HC6ERoR,IA3Ff,YAAqE,IAA9C3nE,EAA6C,EAA7CA,OAAQ4nE,EAAqC,EAArCA,qBACrB57E,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAOksE,EAAP,KAAkBwS,EAAlB,KAEMC,EAAW72D,cAGX82D,EAAoBxgD,cAE1B,OACE,eAAC,IAAD,CAAY75B,IAAI,KAAhB,UACE,cAAC,KAAD,CAASy5C,QAAQ,UAAjB,SACE,eAAC,KAAD,WACG37C,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAINwU,EAAO0S,KAAI,SAACxB,GAAW,IAAD,IACfgmB,EAAOlrC,IAAO,OAAI+7E,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/7E,UAAxB,iBAAI,EAA+BklB,EAAMjgB,gBAAzC,aAAI,EAA+CimC,MACjEjmC,EAAUigB,EAAMjgB,QAAN,UAAmB+2C,YAAa92B,EAAMjgB,UAAa,KACnE,OACE,eAAC,IAAD,CAA0BiuD,iBAAiB,cAAc8oB,QAAQ,MAAjE,eACYh/E,IAATkuC,EACC,eAAC,KAAD,CACEiQ,QAAQ,UACRkoB,SAAO,EACPxL,MAAM,KACNyL,UAAWp4B,EAAK1Q,SAAW,cAAC,IAAD,CAAUA,QAAS0Q,EAAK1Q,QAASP,KAAK,SAJnE,UAMGz6B,EAAE,OANL,IAMc0rC,EAAKliB,QAGnB,cAAC,KAAD,CAAKmyB,QAAQ,UAAUkoB,SAAO,EAACxL,MAAM,KAAKyL,UAAW,cAAC,IAAD,CAAW5kD,MAAM,YAAtE,SACGlf,EAAE,oBAGP,eAAC,IAAD,CAAM+zD,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMC,GAAG,MAAT,SAAgBtuC,EAAM8D,OACtB,eAAC,KAAD,eAAQ9D,EAAMiY,OAAd,UAEDn9B,GACC,eAAC,IAAD,CAAMszD,eAAe,gBAAgBryD,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMuyD,GAAG,MAAT,SAAgBvuD,IAChB,eAAC,KAAD,CAAM82C,KAAMpmC,YAAeuP,EAAMjgB,QAAS,UAAWjF,GAAU87C,UAAQ,EAAvE,cACIt8C,EAAE,mBADN,YAtBK0lB,EAAMjgB,YA+BrB,eAAC,IAAD,CAAMquD,eAAe,gBAAgBC,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASz0C,QAAS,kBAAM+8D,GAAcxS,IAAvD,UACE,cAAC,IAAD,CACExR,MAAM,KACN7uC,KAAK,YACLpT,KAAK,WACL2kD,QAAS8O,EACTtR,SAAU,kBAAM8jB,GAAcxS,MAEhC,cAAC,KAAD,CAAMvM,GAAG,MAAM3iC,MAAO,CAAEwtC,WAAY,QAApC,SACGnoE,EAAE,qBAGP,cAAC,IAAD,CACE27C,QAAQ,SACR4d,UAAWsQ,EACXvqD,QAAS,WACP9K,EAAO0S,KAAI,SAACxB,GAAD,OAAW42D,EAAS52D,MAC3B02D,GACFA,EAAqB5nE,EAAO,KAGhCg+D,UAAU,wBATZ,SAWGxyE,EAAE,oB,6BCrGb,qDAOO,SAASy8E,EAAevvD,GAC7B,GAAKA,EACL,OAAIA,EAAehV,WAAaC,IAC1BxB,IAAK+lE,YAAYxvD,EAAejW,IAAKoC,KAChCu7B,IAAeC,MAAMl+B,IAAKq9B,SAAS9mB,EAAejW,IAAKoC,MAEzDu7B,IAAeC,MAAMl+B,IAAKC,OAAO,IAEnCsW,I,sICTM,SAASiO,EAAiB6gC,GACvC,IAAM2gB,EAAM58D,mBAAQ,kBAAOi8C,EAAMoR,YAAgBpR,QAAOx+D,IAAY,CAACw+D,IAC/D4gB,ECCO,SAA2B5d,GAA4E,IAAD,MAC7GV,EAAkBv+C,mBAAQ,WAC9B,IAAKi/C,EAAS,MAAO,MAACxhE,GACtB,IACE,OAAOwhE,EAAU,CAACT,mBAASS,IAAY,MAACxhE,GACxC,MAAOyjB,GACP,MAAO,MAACzjB,MAET,CAACwhE,IACER,EAAoB/8C,aAAwB,GAC5Ci9C,EAAwBlhC,YAAoBghC,EAAmB,WAAYF,GAC3EG,EAAe,UAAGC,EAAsBx0C,cAAzB,aAAG,EAA+B,GACjDy0C,EAAmBh9C,YACvB88C,GAAmBhN,YAAOgN,QAAmBjhE,EAAYihE,GACzD,GAEIuQ,EAAcxxC,YAAoBmhC,EAAkB,cAAeL,GAEzE,MAAO,CACL0Q,YAAW,oBAAEA,EAAY9kD,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxC2T,QAAS6gC,EAAsB7gC,SAAWmxC,EAAYnxC,SDrB5Bg/C,CAAiB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAK3d,SACnD,OAAOj/C,mBAAQ,WACb,OAAI48D,EACKC,EAAoB5N,YAAcjT,YAAUkS,YAAiB2O,EAAoB5N,cAAgB,GAEnGhT,EAAMD,YAAUC,GAAO,KAC7B,CAAC2gB,EAAKC,EAAoB5N,YAAahT,M,sDEd5C,wEAEY96D,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMC,EAAYC,YAAmD,uB,wOCM/D07E,EAAsB,SAACjK,GAClC,OAAQA,EAASz8D,MACf,IAAK,MACH,MAAO,CACLnX,IAAK,uBACLC,KAAM,CACJ87C,MAAO63B,EAAS73B,QAGtB,QACE,OAAO63B,EAAS73B,QAIT+hC,EAA4B,SAAClK,GACxC,OAAQA,EAASz8D,MACf,IAAK,MACH,MAAO,CACLnX,IAAK,wDACLC,KAAM,CACJ87C,MAAO63B,EAAS73B,QAGtB,QACE,OAAO63B,EAAS53B,cAOT+hC,EAAmB,uCAAG,WAAO5lE,GAAP,qBAAAlZ,EAAA,6DAC3B++E,EAAeC,IAAS91D,QAAO,SAAC+1D,GAAD,YAAoC3/E,IAAvB2/E,EAAQ9E,cAGpD+E,EAAmBH,EAAa/1D,KAAI,YAAkB,IAAfzhB,EAAc,EAAdA,QAC3C,MAAO,CACLA,QAASW,cACTojB,KAAM,mBACNC,OAAQ,CAACrS,EAAS3R,OARW,SAYJskB,YAAYszD,EAAmBD,EAAkB,CAAEpzD,gBAAgB,IAZ/D,cAY3BszD,EAZ2B,gBAiBDvzD,YAC9BszD,EACAC,EAAc7oE,QAAO,SAACC,EAAO6oE,EAAgBx5C,GAC3C,OAAuB,OAAnBw5C,EACK7oE,GAKW,IAFpB,YAAsB6oE,EAAtB,MAGQ,GAAN,mBAAW7oE,GAAX,CAAkB,CAAEjP,QAASW,cAA4BojB,KAAM,OAAQC,OAAQ,CAACsa,MAG3ErvB,IACN,KA/B4B,cAiB3B8oE,EAjB2B,yBAmC1BA,EAAiB/oE,QAAO,SAACC,EAAO+oE,GACrC,IAAK7K,IAAYj0E,IAAI8+E,EAAqBpF,YACxC,OAAO3jE,EAGT,IAAMgpE,EAAe9K,IAAYx0E,IAAIq/E,EAAqBpF,YAClD5yE,EAAYw3E,EAAahhE,MAAK,SAAC0hE,GAAD,OAAiBA,EAAYtF,aAAeoF,EAAqBpF,cAA/F5yE,QAER,MAAM,GAAN,mBACKiP,GADL,CAEE,CACEjP,UACAsW,GAAI0hE,EAAqBpF,WACzBjiE,KAAM,MACN4kC,MAAO8hC,EAAoBY,GAC3BziC,YAAa8hC,EAA0BW,GACvC/K,MAAO+K,EAAa/K,MACpBvtB,OAAQq4B,EAAqBz4B,aAAavhD,gBAG7C,KAvD8B,2CAAH,uD,4WC9ChC,kCAAO,IAAMm6E,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAAC3N,GACvB,OAAOA,EAAMzwE,QAAQ,qBAAqB,SAAC0wB,GAAD,OAAOstD,EAASC,UAAUvtD,IAAMA,O,02HCKtE2tD,EAAOtnE,IAAKC,OAAO,GAElB,SAASsnE,IACd,OAAO17D,aAAwC,SAACzkB,GAAD,OAAWA,EAAMm5B,Q,sDCkDnDinD,MA1Df,YAcI,IAAD,gBAbD7rD,EAaC,EAbDA,YACAmjB,EAYC,EAZDA,MACAwI,EAWC,EAXDA,WACAmgC,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQt+E,EAAMC,cAAND,EACR,OACE,qCACE,eAACsB,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,oBAAqB,CAAEq6D,MAAK,UAAEpc,EAAW/8C,IAAMkxB,mBAAnB,aAAE,EAA8BuL,WACrE,eAACr8B,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4W,SAAU+lC,EAAW/8C,IAAMkxB,YAAauI,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAOwjD,EAAcl9E,IAAMkxB,mBAA3B,aAAO,EAAiCkjB,cAAc,WAG1D,eAACh0C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,oBAAqB,CAAEq6D,MAAK,UAAEpc,EAAW/8C,IAAMq9E,mBAAnB,aAAE,EAA8B5gD,WACrE,eAACr8B,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4W,SAAU+lC,EAAW/8C,IAAMq9E,YAAa5jD,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAOwjD,EAAcl9E,IAAMq9E,mBAA3B,aAAO,EAAiCjpC,cAAc,WAG1D,eAACh0C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,WACT,cAAC,KAAD,gCACQi+C,EAAW/8C,IAAMkxB,mBADzB,aACQ,EAA8BuL,OADtC,qBACkD8X,QADlD,IACkDA,OADlD,EACkDA,EAAOH,cAAc,GADvE,sBAEI2I,EAAW/8C,IAAMq9E,mBAFrB,aAEI,EAA8B5gD,aAIpC,cAACr8B,EAAA,EAAD,CAAYq5B,MAAO,CAAEm5B,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQ7V,EAAW/8C,IAAMq9E,mBADzB,aACQ,EAA8B5gD,OADtC,qBACkD8X,QADlD,IACkDA,OADlD,EACkDA,EAAOJ,SAASC,cAAc,GADhF,sBAEI2I,EAAW/8C,IAAMkxB,mBAFrB,aAEI,EAA8BuL,YAIpC,eAACr8B,EAAA,EAAD,WACE,eAAC,KAAD,WAAOtB,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOsyB,EAAc,MAAH,OAAW+rD,QAAX,IAAWA,OAAX,EAAWA,EAAqB/oC,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQh2B,QAASg/D,EAAOlqB,GAAG,OAA3B,SACiBp0D,EAAdsyB,EAAgB,uBAA4B,wB,SCFtCksD,MAjDf,YAUI,IAAD,wBATDvgC,EASC,EATDA,WACA3rB,EAQC,EARDA,YACA+rD,EAOC,EAPDA,oBACA5oC,EAMC,EANDA,MAOQz1C,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYkC,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8zC,QAAP,IAAOA,OAAP,EAAOA,EAAOH,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAM4e,SAAS,OAAO0J,GAAI,EAA1B,SACG59D,EAAE,wBAAyB,CAC1By+E,OAAM,oBAAExgC,EAAW/8C,IAAMq9E,mBAAnB,aAAE,EAA8B5gD,cAAhC,QAA0C,GAChD+gD,OAAM,oBAAEzgC,EAAW/8C,IAAMkxB,mBAAnB,aAAE,EAA8BuL,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYh8B,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8zC,QAAP,IAAOA,GAAP,UAAOA,EAAOJ,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAM4e,SAAS,OAAO0J,GAAI,EAA1B,SACG59D,EAAE,wBAAyB,CAC1By+E,OAAM,oBAAExgC,EAAW/8C,IAAMkxB,mBAAnB,aAAE,EAA8BuL,cAAhC,QAA0C,GAChD+gD,OAAM,oBAAEzgC,EAAW/8C,IAAMq9E,mBAAnB,aAAE,EAA8B5gD,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYh8B,QAAQ,SAApB,UACE,eAAC,KAAD,WACG2wB,GAAemjB,EACZ,MADH,WAEuB,OAAnB4oC,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBx0C,SAAS/wB,MAAY,QAA1C,OAAoDulE,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBz6E,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMswD,SAAS,OAAO0J,GAAI,EAA1B,SACG59D,EAAE,4B,SCTA,SAAS2+E,EAAT,GAK0D,IAAD,2CAJtEv/E,MACEqqB,OAAUm1D,GAG0D,GAH1DA,YAAaC,GAG6C,GAH7CA,YAEzBnH,GACsE,EADtEA,QAEA,GAAsCr3E,cAA9B+W,GAAR,GAAQA,QAAS5W,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QACpB8hB,GAAWC,cACTtiB,GAAMC,cAAND,EACF+lB,GAAWF,cAEX84B,GAAY7gB,YAAY8gD,IACxBhgC,GAAY9gB,YAAY+gD,IAE9B5gF,qBAAU,WACH2gF,IAAgBC,IACnBx8D,GAAShhB,iBAEV,CAACghB,GAAUu8D,GAAaC,KAE3B,IAAMC,GAAoB1mE,QACxB5X,KACIm+C,IAAajiB,YAAeiiB,GAAWp9B,IAAK/gB,MAC3Co+C,IAAaliB,YAAekiB,GAAWr9B,IAAK/gB,OAG7CsiB,GAAaH,cAGnB,GAA0Du7D,IAAlDxsD,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYS,GAAtC,GAAsCA,gBACtC,GH3BK,SACLssB,EACAC,GAaC,IAAD,MAoGI39B,EAKiC,EAIqC,EA5G1E,EAA6B5gB,cAArB+W,EAAR,EAAQA,QAAS5W,EAAjB,EAAiBA,QAEjB,EAA0D09E,IAAlDxsD,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYS,EAAtC,EAAsCA,gBAEhC0sD,EAAiBrtD,IAAqBxwB,IAAMkxB,WAAalxB,IAAMq9E,WAAar9E,IAAMkxB,WAGlF6rB,EAA8Cl+B,mBAClD,2CACG7e,IAAMkxB,WADT,OACsBusB,QADtB,IACsBA,SAAanhD,GADnC,cAEG0D,IAAMq9E,WAFT,OAEsB3/B,QAFtB,IAEsBA,SAAaphD,GAFnC,IAIA,CAACmhD,EAAWC,IAId,EAA0BS,YAAQpB,EAAW/8C,IAAMkxB,YAAa6rB,EAAW/8C,IAAMq9E,aAAjF,mBAAOS,EAAP,KAAkB54D,EAAlB,KAEMsuD,EAAcD,YAAc,OAACruD,QAAD,IAACA,OAAD,EAACA,EAAM+lC,gBAEnC75B,EACJ0sD,IAAcxgC,IAAUS,YAAc7mC,QAAQs8D,GAAe/9D,IAAKsoE,MAAMvK,EAAYz9D,IAAKgnE,IAGrFxgC,EAAWO,YAAmB,OAAC5mC,QAAD,IAACA,SAAW5Z,EAAW,CACzDygD,EAAW/8C,IAAMkxB,YACjB6rB,EAAW/8C,IAAMq9E,cAEbpxB,GAAuD,mBAC1DjsD,IAAMkxB,WAAaqrB,EAAS,IAD8B,cAE1Dv8C,IAAMq9E,WAAa9gC,EAAS,IAF8B,GAMvDyhC,EAAgDrzB,YAAej6B,EAAYqsB,EAAWvsB,IACtFytD,EAA8Cp/D,mBAAQ,WAC1D,GAAIuS,EACF,OAAID,GAAmB4rB,EAAW8gC,GACzBlzB,YAAex5B,EAAiB4rB,EAAW8gC,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2BnyD,YAAsBiyD,EAAmB1+E,GAC1E,EAAyB,CAACwsB,YAAgB2xB,EAAWn+C,GAAUwsB,YAAgB4xB,EAAWp+C,IAAnFkmB,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUy4D,GAA4Bh5D,EAAM,CACxD,IAAMi5D,EAAoBN,IAAmB79E,IAAMq9E,WAAa3/B,EAAYD,EACtE2gC,EACJP,IAAmB79E,IAAMq9E,WACrBn4D,EAAKm5D,QAAQ74D,GAAQ84D,MAAMJ,GAC3Bh5D,EAAKm5D,QAAQ54D,GAAQ64D,MAAMJ,GACjC,OAAOC,IAAsBlnE,IAAQy8B,IAAeC,MAAMyqC,EAAqBroE,KAAOqoE,MAKzF,CAAChtD,EAAaD,EAAiB4rB,EAAY8gC,EAAgBG,EAAmBvgC,EAAWn+C,EAASo+C,EAAWx4B,IAE1Gg4D,EAAkEr+D,mBACtE,2CACG7e,IAAMkxB,WAAaV,IAAqBxwB,IAAMkxB,WAAa8sD,EAAoBC,GADlF,cAEGj+E,IAAMq9E,WAAa7sD,IAAqBxwB,IAAMkxB,WAAa+sD,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmBxtD,IAGjC+jB,EAAQ11B,mBAAQ,WACpB,GAAIuS,EAAa,CACf,IAA4BmtD,EAAyDrB,EAA5El9E,IAAMkxB,YAAkDstD,EAAoBtB,EAAvCl9E,IAAMq9E,YACpD,OAAIkB,GAAmBC,EACd,IAAIC,IAAMF,EAAgBvnE,SAAUwnE,EAAgBxnE,SAAUunE,EAAgBxoE,IAAKyoE,EAAgBzoE,UAE5G,EAEF,IAAM2oE,EAAmB5yD,YAAgB2xB,EAAWn+C,GACpD,OAAO4lB,GAAQw5D,EAAmBx5D,EAAKm5D,QAAQK,QAAoBpiF,IAClE,CAACgD,EAASm+C,EAAWrsB,EAAalM,EAAMg4D,IAGrCyB,EAAkB9/D,mBAAQ,WAC9B,IAA4B0/D,EAAyDrB,EAA5El9E,IAAMkxB,YAAkDstD,EAAoBtB,EAAvCl9E,IAAMq9E,YACpD,EAAqC,CACnCtxD,YAAsBwyD,EAAiBj/E,GACvCysB,YAAsByyD,EAAiBl/E,IAFlCs/E,EAAP,KAAqBC,EAArB,KAIA,GAAI35D,GAAQsuD,GAAeoL,GAAgBC,EACzC,OAAO35D,EAAK45D,mBAAmBtL,EAAaoL,EAAcC,KAG3D,CAAC3B,EAAe59E,EAAS4lB,EAAMsuD,IAE5B2J,EAAsBt+D,mBAAQ,WAClC,GAAI8/D,GAAmBnL,EACrB,OAAO,IAAIh+D,IAAQmpE,EAAgB5oE,IAAKy9D,EAAYn+D,IAAIspE,GAAiB5oE,OAG1E,CAAC4oE,EAAiBnL,IAGhBt9D,IACH6J,EAAQ,kBAGN+9D,IAAcxgC,IAAUQ,UAC1B/9B,EAAK,UAAGA,SAAH,QAAY,gBAGdm9D,EAAcl9E,IAAMkxB,aAAgBgsD,EAAcl9E,IAAMq9E,cAC3Dt9D,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dw+D,EAAyDrB,EAA5El9E,IAAMkxB,YAAkDstD,EAAoBtB,EAAvCl9E,IAAMq9E,YAUpD,OARIkB,IAAe,OAAItyB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBjsD,IAAMkxB,mBAA7B,aAAI,EAAsCyX,SAAS41C,MACpEx+D,EAAK,iCAAmBg9B,EAAW/8C,IAAMkxB,mBAApC,aAAmB,EAA8BuL,OAAjD,aAGH+hD,IAAe,OAAIvyB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBjsD,IAAMq9E,mBAA7B,aAAI,EAAsC10C,SAAS61C,MACpEz+D,EAAK,iCAAmBg9B,EAAW/8C,IAAMq9E,mBAApC,aAAmB,EAA8B5gD,OAAjD,aAGA,CACLohD,iBACA9gC,aACA73B,OACA44D,YACA7xB,mBACAixB,gBACA3oC,QACAnjB,cACAutD,kBACAxB,sBACAp9D,SG9GEg/D,CAAkB,OAACthC,SAAD,IAACA,WAAanhD,EAAd,OAAyBohD,SAAzB,IAAyBA,WAAaphD,GAX1DuhF,GADF,GACEA,eACA9gC,GAFF,GAEEA,WACA73B,GAHF,GAGEA,KACA44D,GAJF,GAIEA,UACA7xB,GALF,GAKEA,iBACAixB,GANF,GAMEA,cACA3oC,GAPF,GAOEA,MACAnjB,GARF,GAQEA,YACAutD,GATF,GASEA,gBACAxB,GAVF,GAUEA,oBACAp9D,GAXF,GAWEA,MAGF,GHlEK,SAA+BqR,GAIpC,IAAMjQ,EAAWC,cAejB,MAAO,CACL49D,cAdoBlhF,uBACpB,SAAC4yB,GACCvP,EAASlhB,YAAU,CAAE6wB,MAAO9wB,IAAMkxB,WAAYR,aAAYU,aAA6B,IAAhBA,OAEzE,CAACjQ,EAAUiQ,IAWX6tD,cAToBnhF,uBACpB,SAAC4yB,GACCvP,EAASlhB,YAAU,CAAE6wB,MAAO9wB,IAAMq9E,WAAY3sD,aAAYU,aAA6B,IAAhBA,OAEzE,CAACjQ,EAAUiQ,KGkD4B8tD,CAAsB9tD,IAAvD4tD,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAWp/D,GAGjB,GAA0CtjB,oBAAkB,GAA5D,qBAAOogE,GAAP,MAAsBuiB,GAAtB,MAGM96D,GAAWq0D,cACjB,GAA0Bv2D,cAAnBqnB,GAAP,qBACA,GAA4BhtC,mBAAiB,IAA7C,qBAAOy+C,GAAP,MAAemkC,GAAf,MAGMC,IAAgB,mBACnB9uD,GAAmBE,IADA,cAEnBmtD,GAAiBzsD,GAAcD,GAAH,oBAAqB+rD,GAAcW,WAAnC,aAAqB,EAA+BzpC,cAAc,UAAlE,QAAwE,IAFjF,GAMhBmrC,GAAiD,CAACv/E,IAAMkxB,WAAYlxB,IAAMq9E,YAAY9pE,QAC1F,SAACisE,EAAa1uD,GACZ,OAAO,2BACF0uD,GADL,kBAEG1uD,EAAQyqD,YAAetvB,GAAiBn7B,QAG7C,IAGI2uD,GAAmD,CAACz/E,IAAMkxB,WAAYlxB,IAAMq9E,YAAY9pE,QAC5F,SAACisE,EAAa1uD,GAAW,IAAD,IACtB,OAAO,2BACF0uD,GADL,kBAEG1uD,EAFH,UAEWyuD,GAAWzuD,UAFtB,aAEW,EAAmBytC,QAAnB,UAA2B2e,GAAcpsD,UAAzC,QAAmD,SAGhE,IAIF,GAAsCoX,YAAmBg1C,GAAcl9E,IAAMkxB,YAAaxa,KAA1F,qBAAOgpE,GAAP,MAAkBC,GAAlB,MACA,GAAsCz3C,YAAmBg1C,GAAcl9E,IAAMq9E,YAAa3mE,KAA1F,qBAAOkpE,GAAP,MAAkBC,GAAlB,MAEMrwD,GAAiBuZ,cAlF+C,SAoFvDq0C,KApFuD,8EAoFtE,0DAAApgF,EAAA,yDACOsC,IAAYD,IAAY6W,GAD/B,oDAEQ4pE,EAAStpE,YAAkBlX,GAASD,GAAS6W,IAEvB6pE,EAAqD7C,GAAxEl9E,IAAMkxB,YAAgD8uD,EAAkB9C,GAArCl9E,IAAMq9E,YAC7C0C,GAAkBC,GAAkBviC,IAAcC,IAAcp5B,GALvE,2EAUKtkB,IAAMkxB,WAAavb,YAAwBoqE,EAAe3uD,GAAc,EAAIqY,IAAiB,IAVlG,cAWKzpC,IAAMq9E,WAAa1nE,YAAwBqqE,EAAe5uD,GAAc,EAAIqY,IAAiB,IAF1Fw2C,EATR,EAkBMxiC,KAAcxmC,KAASymC,KAAczmC,KACjCipE,EAAcxiC,KAAczmC,IAClCkpE,EAAWL,EAAO52C,YAAYk3C,gBAC9Bn9C,EAAS68C,EAAOM,gBAChBC,EAAO,qBACLv0D,YAAgBo0D,EAAcziC,GAAYC,GAAWp+C,WADhD,aACL,EAA+DiF,eAD1D,QACqE,IACzE27E,EAAcH,EAAgBC,GAAejqE,IAAIpX,WAClDshF,EAAWC,EAAclgF,IAAMkxB,WAAalxB,IAAMq9E,YAAY1+E,WAC9DshF,EAAWC,EAAclgF,IAAMq9E,WAAar9E,IAAMkxB,YAAYvyB,WAC9DuX,GACAoO,GAASg8D,eAEXzhF,EAAQ0C,IAAUgC,MAAM28E,EAAcF,EAAgBD,GAAehqE,IAAIpX,cAEzEwhF,EAAWL,EAAO52C,YAAYq3C,aAC9Bt9C,EAAS68C,EAAOS,aAChBF,EAAO,qBACLv0D,YAAgB2xB,GAAWn+C,WADtB,aACL,EAAqCiF,eADhC,QAC2C,GAD3C,oBAELunB,YAAgB4xB,GAAWp+C,WAFtB,aAEL,EAAqCiF,eAFhC,QAE2C,GAChDw7E,EAAchqE,IAAIpX,WAClBqhF,EAAcjqE,IAAIpX,WAClBshF,EAAWjgF,IAAMkxB,YAAYvyB,WAC7BshF,EAAWjgF,IAAMq9E,YAAY1+E,WAC7BuX,GACAoO,GAASg8D,eAEXzhF,EAAQ,MAGVugF,IAAiB,GA/CnB,UAgDQe,EAAQ,WAAR,cAAYE,GAAZ,QAAkBxhF,EAAQ,CAAEA,SAAU,MACzC0qC,MAAK,SAACi3C,GAAD,OACJv9C,EAAM,WAAN,cAAUo9C,GAAV,mCACMxhF,EAAQ,CAAEA,SAAU,IAD1B,IAEEyqC,SAAUn0B,YAAmBqrE,GAC7B37D,iBACC0kB,MAAK,SAACzH,GAAc,IAAD,QACpBs9C,IAAiB,GAEjB5vD,GAAesS,EAAU,CACvBnS,QAAQ,OAAD,iBAASutD,GAAcl9E,IAAMkxB,mBAA7B,aAAS,EAAiCkjB,cAAc,GAAxD,sBACL2I,GAAW/8C,IAAMkxB,mBADZ,aACL,EAA8BuL,OADzB,0BAECygD,GAAcl9E,IAAMq9E,mBAFrB,aAEC,EAAiCjpC,cAAc,GAFhD,sBAEsD2I,GAAW/8C,IAAMq9E,mBAFvE,aAEsD,EAA8B5gD,UAG7F4iD,GAAUv9C,EAASrS,YAGtB2Z,OAAM,SAACq3C,GACNrB,IAAiB,GAEC,QAAX,OAAHqB,QAAG,IAAHA,OAAA,EAAAA,EAAKp9B,OACPrjC,QAAQD,MAAM0gE,MAtEtB,6CApFsE,sBA+JtE,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAOtvD,GACL,eAAC,IAAD,CAAMyhC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMG,SAAS,OAAOt5B,YAAY,OAAlC,6BACMqjB,GAAW/8C,IAAMkxB,mBADvB,aACM,EAA8BuL,OADpC,sBAC8CsgB,GAAW/8C,IAAMq9E,mBAD/D,aAC8C,EAA8B5gD,UAE5E,cAAC,IAAD,CACEpD,UAAW0jB,GAAW/8C,IAAMkxB,YAC5BoI,UAAWyjB,GAAW/8C,IAAMq9E,YAC5B9jD,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAMs5B,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMG,SAAS,OAAOt5B,YAAY,OAAlC,gBACGilD,SADH,IACGA,QADH,EACGA,GAAiBvqC,cAAc,KAElC,cAAC,IAAD,CACE/a,UAAW0jB,GAAW/8C,IAAMkxB,YAC5BoI,UAAWyjB,GAAW/8C,IAAMq9E,YAC5B9jD,KAAM,QAGV,cAACn5B,EAAA,EAAD,UACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,6BACMjW,GAAW/8C,IAAMkxB,mBADvB,aACM,EAA8BuL,OADpC,sBAC8CsgB,GAAW/8C,IAAMq9E,mBAD/D,aAC8C,EAA8B5gD,OAD5E,oBAIF,cAAC,KAAD,CAAMg2B,OAAK,EAACC,UAAU,OAAOf,GAAG,OAAhC,SACG7yD,GAAE,mGAAoG,CACrG8W,SAAU6zB,GAAkB,YAOhCk3C,GAAc,WAClB,OACE,cAAC,EAAD,CACEpsC,MAAOA,GACPwI,WAAYA,GACZmgC,cAAeA,GACf9rD,YAAaA,GACbgsD,MAAOA,GACPD,oBAAqBA,MAKrBphB,GAAcj9D,GAAE,wDAAyD,CAC7E8hF,QAAO,oBAAE1D,GAAcl9E,IAAMkxB,mBAAtB,aAAE,EAAiCkjB,cAAc,UAAjD,QAAuD,GAC9DysC,QAAO,oBAAE9jC,GAAW/8C,IAAMkxB,mBAAnB,aAAE,EAA8BuL,cAAhC,QAA0C,GACjDqkD,QAAO,sBAAE5D,GAAcl9E,IAAMq9E,mBAAtB,cAAE,GAAiCjpC,cAAc,UAAjD,UAAuD,GAC9D2sC,QAAO,sBAAEhkC,GAAW/8C,IAAMq9E,mBAAnB,cAAE,GAA8B5gD,cAAhC,UAA0C,KAG7CukD,GAAwBljF,uBAC5B,SAACmjF,GACC,IAAMC,EAAiBvwD,YAAWswD,GAC9BC,IAAmBvD,GACrBnH,GAAQ/jD,KAAR,eAAqBkrD,GAArB,YAAoCD,KAC3BC,GACTnH,GAAQ/jD,KAAR,eAAqByuD,EAArB,YAAuCvD,KAEvCnH,GAAQ/jD,KAAR,eAAqByuD,MAGzB,CAACvD,GAAanH,GAASkH,KAEnByD,GAAwBrjF,uBAC5B,SAACsjF,GACC,IAAMC,EAAiB1wD,YAAWywD,GAC9B1D,KAAgB2D,EACd1D,GACFnH,GAAQ/jD,KAAR,eAAqBkrD,GAArB,YAAoC0D,IAEpC7K,GAAQ/jD,KAAR,eAAqB4uD,IAGvB7K,GAAQ/jD,KAAR,eAAqBirD,IAAe,MAApC,YAA6C2D,MAGjD,CAAC3D,GAAalH,GAASmH,KAGnB2D,GAA4BxjF,uBAAY,WAExCo9C,IACF8jC,GAAc,IAEhBK,GAAU,MACT,CAACL,GAAe9jC,KAEbqmC,GAAmBnhB,YAA2B,OAACrjB,SAAD,IAACA,QAAD,EAACA,GAAY7rB,WAAb,OAAyB6rB,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAYsgC,YAEzF,GAAqCtV,aACnC,cAACpL,EAAA,EAAD,CACE7iB,MAAqBh7C,GAAdsyB,GAAgB,0BAA+B,oBACtDwrC,gBAAiB0kB,GACjBzkB,cAAeA,GACfptC,KAAMyrB,GACN4hB,QAAS,kBAAM,cAAC,IAAD,CAA0BP,WAAYmkB,GAAapkB,cAAeqkB,MACjF5kB,YAAaA,GACbE,cAAa,OAAE/2C,SAAF,IAAEA,QAAF,EAAEA,GAAM+lC,kBAEvB,GACA,EACA,qBAZKu2B,GAAP,qBAeA,OACE,eAAClgB,EAAA,EAAD,WACE,eAACmgB,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACE3nC,MAAOh7C,GAAE,iBACTmqE,SAAUnqE,GAAE,sCACZoqE,OAAQpqE,GACN,2IAEFqqE,OAAO,UAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAYnoE,IAAI,OAAhB,UACGowB,IACC,cAACxd,EAAA,EAAD,UACE,cAAC,KAAD,CAAS6mC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAMsc,MAAI,EAACmC,GAAG,MAAd,SACGp6D,GAAE,2CAEL,cAAC,KAAD,CAAMo6D,GAAG,MAAT,SAAgBp6D,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAACyxE,EAAA,EAAD,CACE1xE,MAAOygF,GAAiBt/E,IAAMkxB,YAC9Bu5B,YAAau0B,GACbxO,MAAO,WAAO,IAAD,IACXwO,GAAa,oBAACO,GAAWv/E,IAAMkxB,mBAAlB,aAAC,EAA8BwwD,iBAA/B,QAA4C,KAE3D/Q,iBAAkBqQ,GAClBvQ,eAAgBgP,GAAaz/E,IAAMkxB,YACnCla,SAAU+lC,GAAW/8C,IAAMkxB,YAC3BrW,GAAG,6BACHk2D,iBAAe,IAEjB,cAACn9D,EAAA,EAAD,UACE,cAAC,IAAD,CAASrT,MAAM,WAEjB,cAACgwE,EAAA,EAAD,CACE1xE,MAAOygF,GAAiBt/E,IAAMq9E,YAC9B5yB,YAAaw0B,GACbtO,iBAAkBwQ,GAClB3Q,MAAO,WAAO,IAAD,IACXyO,GAAa,oBAACM,GAAWv/E,IAAMq9E,mBAAlB,aAAC,EAA8BqE,iBAA/B,QAA4C,KAE3DjR,eAAgBgP,GAAaz/E,IAAMq9E,YACnCrmE,SAAU+lC,GAAW/8C,IAAMq9E,YAC3BxiE,GAAG,6BACHk2D,iBAAe,IAEhBh0B,GAAW/8C,IAAMkxB,aAAe6rB,GAAW/8C,IAAMq9E,aAAeS,KAAcxgC,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAWp9C,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAMsyD,SAAS,OAAf,SACiBl0D,GAAdsyB,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAW1wB,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,EAAD,CACEm8C,WAAYA,GACZogC,oBAAqBA,GACrB/rD,YAAaA,GACbmjB,MAAOA,YAOhBgtC,GACC,cAAC,IAAD,CAAQlpB,UAAQ,EAACa,GAAG,MAApB,SACGp6D,GAAE,uBAEFoX,GAGH,eAAC,IAAD,CAAYlV,IAAI,KAAhB,WACI0+E,KAAc53C,IAAce,cAC5B62C,KAAc53C,IAAcc,SAC5Bg3C,KAAc93C,IAAce,cAC5B+2C,KAAc93C,IAAcc,UAC5Bu2C,IACE,eAAC/+E,EAAA,EAAD,WACGs/E,KAAc53C,IAAcY,UAC3B,cAAC,IAAD,CACEtqB,QAASuhE,GACTtnB,SAAUqnB,KAAc53C,IAAcc,QACtCroC,MAAOq/E,KAAc93C,IAAcY,SAAW,MAAQ,OAHxD,SAKGg3C,KAAc53C,IAAcc,QAC3B,cAACwqC,EAAA,EAAD,UAAOt0E,GAAE,mBAAoB,CAAEq6D,MAAK,WAAEpc,GAAW/8C,IAAMkxB,mBAAnB,cAAE,GAA8BuL,WAEpE39B,GAAE,iBAAkB,CAAEq6D,MAAK,WAAEpc,GAAW/8C,IAAMkxB,mBAAnB,cAAE,GAA8BuL,WAIhEmjD,KAAc93C,IAAcY,UAC3B,cAAC,IAAD,CACEtqB,QAASyhE,GACTxnB,SAAUunB,KAAc93C,IAAcc,QACtCroC,MAAOm/E,KAAc53C,IAAcY,SAAW,MAAQ,OAHxD,SAKGk3C,KAAc93C,IAAcc,QAC3B,cAACwqC,EAAA,EAAD,UAAOt0E,GAAE,mBAAoB,CAAEq6D,MAAK,WAAEpc,GAAW/8C,IAAMq9E,mBAAnB,cAAE,GAA8B5gD,WAEpE39B,GAAE,iBAAkB,CAAEq6D,MAAK,WAAEpc,GAAW/8C,IAAMq9E,mBAAnB,cAAE,GAA8B5gD,cAMvE,cAAC,IAAD,CACEge,SACG0kC,IAAajC,GAAcl9E,IAAMkxB,aAAiBgsD,GAAcl9E,IAAMq9E,YACnE,SACA,UAENj/D,QAAS,WACHwD,GACFw7D,KAEAoE,MAGJnpB,UAAW8mB,IAAWO,KAAc53C,IAAcY,UAAYk3C,KAAc93C,IAAcY,SAb5F,gBAeG3oB,SAfH,IAeGA,MAASjhB,GAAE,eApDhB,cAACykD,EAAA,EAAD,YA2DNg+B,GAOA,cAAC3G,EAAA,EAAD,CAA2B79B,WAAY,CAACA,GAAW7rB,WAAY6rB,GAAWsgC,cAN1En4D,KAASkM,IAAe0sD,KAAcxgC,IAAUQ,QAC9C,cAAC,IAAD,CAAYrkB,MAAO,CAAEkoD,SAAU,QAASphF,MAAO,OAAQymE,SAAU,QAAS4a,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAejE,GAAmB14D,KAAMA,OAE7D,U,usBC3ZNvpB,EAAiC,CACrC2nC,OAAQjc,IAAiBy6D,QACzBv2D,WAAW,EACXw2D,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAe56D,IAAc6Z,IAC7BT,aAAc,EACdwC,gBAAiB,IACjBC,aAAc,iBACdE,cAAe,GACf8+C,gBAAiB7gF,IAASO,SAC1BsiC,OAAQ,GACRqyC,QAAS,GACT4L,aAAc,EACdC,mBAAoB,EACpBC,kBAAkB,EAClB/9C,QAAS,GACTg+C,kBAAmB,GACnBC,YAAa,CACXC,aAAcl7D,IAAwBu6D,QACtCY,QAAS,CACPn+E,QAAS,KACT69B,QAAS,SACTugD,WAAY,OAEd9gD,KAAM,EACN+gD,gBAAgB,EAChBC,eAAgB,GAChBzuD,QAAS,KAgBA0uD,EAAwB9wC,YACnC,wBADmD,sBAEnD,sDAAAh1C,EAAA,6DAAOkZ,EAAP,+BAAiB,KAAjB,SAE2B6sB,cAF3B,cAEQggD,EAFR,OAGQ/gD,EACJ+gD,EAAWriD,aAAe4d,IACtB0kC,IAAMD,EAAWriD,aAAcqiD,EAAWriD,aAAe4d,KACzD,CAACykC,EAAWriD,cANpB,SAS+B8C,YAAcxB,GAT7C,UASQihD,EATR,OAUQC,EAAsDD,EAAe1vE,QAAO,SAACC,EAAO0rB,GACxF,IAAMikD,EAAiB1+C,YAAmCvF,GAE1D,OAAO,2BACF1rB,GADL,kBAEG2vE,EAAe/jD,MAAMzgC,WAAawkF,MAEpC,IAEGC,EAnBR,2BAoBOL,GApBP,IAqBI5+C,OAAQ++C,EACR3+C,QAAS,GACTg+C,kBAAmB,KAGhBrsE,EA1BP,0CA2BWktE,GA3BX,yBA+BgCrhD,YAAc7rB,EAAS8rB,GA/BvD,eA+BQqhD,EA/BR,iBAkCkC5gD,YAAiBvsB,EAAS8rB,GAlC5D,eAkCQugD,EAlCR,yBAoCSxO,IAAM,GAAIqP,EAAiB,CAChC7+C,QAASD,YAAepuB,EAASmtE,EAAiBrhD,GAClDugD,uBAtCJ,6CA2CWe,EAAatxC,YAAyC,yBAAzB,uCAAmD,WAAO5S,GAAP,iBAAApiC,EAAA,6DACrFumF,EAAqBtmE,cADgE,SAEpEsmE,EAAmBp/C,OAAO/E,GAF0C,cAErF0C,EAFqF,yBAGpF2C,YAAmC3C,IAHiD,2CAAnD,uDAM7B0hD,EAAcxxC,YACzB,0BADyC,uCAEzC,WAAOhQ,GAAP,eAAAhlC,EAAA,sEACuBwmC,YAAcxB,GADrC,cACQmC,EADR,yBAESA,EAAO5wB,QAAO,SAACC,EAAO4qB,GAC3B,IAAKA,EACH,OAAO5qB,EAGT,IAAM2vE,EAAiB1+C,YAAmCrG,GAE1D,OAAO,2BACF5qB,GADL,kBAEG2vE,EAAe/jD,MAAMzgC,WAAawkF,MAEpC,KAbL,2CAFyC,uDAmB9BM,EAAkBzxC,YAA6B,8BAAb,sBAA4C,4BAAAh1C,EAAA,sEAChE+lC,cADgE,cACnFggD,EADmF,yBAElFA,GAFkF,4CAK9EW,EAAkB1xC,YAC7B,8BAD6C,uCAE7C,iCAAAh1C,EAAA,6DAASkZ,EAAT,EAASA,QAAS8rB,EAAlB,EAAkBA,OAAlB,SACwBD,YAAc7rB,EAAS8rB,GAD/C,cACQuC,EADR,yBAESD,YAAepuB,EAASquB,EAASvC,IAF1C,2CAF6C,uDAQlC2hD,EAAyB3xC,YAGpC,qCAHoD,uCAGd,iCAAAh1C,EAAA,6DAASkZ,EAAT,EAASA,QAAS8rB,EAAlB,EAAkBA,OAAlB,SAChBS,YAAiBvsB,EAAS8rB,GADV,cAChCuC,EADgC,yBAE/BA,GAF+B,2CAHc,uDAQzCq/C,EAAe5xC,YAC1B,2BAD0C,uCAE1C,mCAAAh1C,EAAA,6DAASkZ,EAAT,EAASA,QAASynB,EAAlB,EAAkBA,QAAlB,SACyB+D,YAAc,CACnCngB,KAAMrL,EAAQkS,cACduV,YAHJ,cACQmE,EADR,OAKQvB,EAAOuB,EAAS9b,IAAIoX,KAL5B,kBAOS,CAAElnB,UAASqqB,SAPpB,2CAF0C,uDAa/BsjD,EAAmB7xC,YAG9B,+BAH8C,uCAGd,qDAAAh1C,EAAA,6DAASkZ,EAAT,EAASA,QAAT,IAAkB4tE,YAAlB,MAAyB,EAAzB,WACDn/C,YAAuBzuB,GADtB,UAC1B6tE,EAD0B,OAE1BC,EAAc,CAAEzjD,KAAM,GAAIgiD,kBAAmB,GAAIH,aAAc2B,EAAiBxhF,YAChF0hF,EAAWF,EAAiBvqB,IAAIx0B,KAAmB,EAAI7U,KAAK+zD,KAAKH,EAAiBxhF,WAAayiC,MAEjG++C,EAAiBv/C,GAAG,GALQ,yCAMvBw/C,GANuB,YAS5BF,EAAOG,GATqB,0CAUvBD,GAVuB,eAa1Bj/C,EAASg/C,EAAiBtgF,IAAIuhC,IAAkB8+C,GAGhDvqD,EACJ0qD,IAAaH,EACTC,EACGtgF,IAAIuhC,KAAmB8+C,EAAO,IAC9BvhF,WACHyiC,IArB0B,UAsBPF,YAAgB5uB,EAAS6uB,EAAOo/C,GAAG,GAAK,EAAIp/C,EAAOxiC,WAAYg3B,GAtBxD,WAsB1B6qD,EAtB0B,iDAyBvBJ,GAzBuB,eA4B1BhiD,EAAS5jC,OAAOC,KAAK+lF,GAAYp+D,KAAI,SAACq+D,GAAD,OAAcnnD,OAAOmnD,MA5BhC,UA6BR7gD,YAAcxB,GA7BN,eA6B1BsiD,EA7B0B,iBA8BA7hD,YAAiBvsB,EAAS8rB,GA9B1B,eA8B1BugD,EA9B0B,OAiC1BhiD,EAAc+jD,EAAU/wE,QAAO,SAACC,EAAO4qB,GAC3C,IAAMmmD,EAAa9/C,YAAmCrG,GAChDomD,EAASJ,EAAWG,EAAWnlD,OAC/BqlD,EAAenhF,IAAO/B,UAAUgC,KAAKihF,EAAOziF,QAC5Ci+B,EAAa5B,EAAM4B,WAAazC,WAAW/5B,sBAAY46B,EAAM4B,WAAY,IAAM,KAC/EL,EAAYvB,EAAMuB,UAAYpC,WAAW/5B,sBAAY46B,EAAMuB,UAAW,IAAM,KAclF,MAAM,GAAN,mBACKnsB,GADL,CAEE,CACEqH,GAAI,KACJ4U,KAAM,KACN1tB,OAAQw7B,WAAW/5B,sBAAYihF,IAC/BjnD,SAAUgnD,EAAOhnD,SACjBG,QAAS6mD,EAAO7mD,QAChBC,UAAW,KACXE,YAAa,KACbC,WAAY,EACZC,cAAe,EACfC,UAAW,KACXC,UAAW,KACXtJ,MAAO,EACPwJ,MAAO,CACLvjB,GAAI,KACJukB,MAAOhB,EAAMgB,MAAM78B,WACnB88B,QAAQ,EACR3G,WAAY,KACZ4G,QAASlB,EAAMsF,eAAiBtF,EAAMsF,eAAenhC,WAAa,KAClEg9B,UAAW,KACXC,OAAQpB,EAAMuF,cAAgBvF,EAAMuF,cAAcphC,WAAa,KAC/Dk9B,UAAW,KACXE,YACAD,SAAU,KACVE,YAAaxB,EAAM4F,aAAe5F,EAAM4F,aAAarlC,WAAa,KAClEshC,aAAc7B,EAAM6F,cAAgB7F,EAAM6F,cAActlC,WAAa,KACrEohC,UAAW,KACXF,QAAS,KACTG,aACAF,WAAY,KACZvB,UAAW,EACX2B,YAAa3C,WAAW/5B,sBAAY46B,EAAM8B,cAC1CC,SAAU,EACVC,WAAY7C,WAAW/5B,sBAAY46B,EAAMgC,aACzCC,SAAU,EACVC,WAAY/C,WAAW/5B,sBAAY46B,EAAMkC,aACzC9C,SAjDCwC,EAID5B,EAAM4B,WAAWwE,GAAGpG,EAAMuB,WACrBvY,IAAYoZ,MAGdpC,EAAM4B,WAAW/H,GAAGmG,EAAMuB,WAAavY,IAAYqW,KAAOrW,IAAYsW,KAPpE,WAoDV,IA9F6B,kBAgGzB,CAAE6C,OAAMgiD,oBAAmBuB,OAAM1B,aAAc2B,EAAiBxhF,aAhGvC,4CAHc,uDAuGnCmiF,EAAoB1yC,YAC/B,gCAD+C,uCAE/C,+BAAAh1C,EAAA,6DAAS0lF,EAAT,EAASA,QAAT,SAC8BpgD,YAAmB,CAC7CT,KAAM,EACNO,QAASsgD,EAAQtgD,QACjBT,MAAM,aAAGgjD,cAAenmC,KAAnB,UAAsDkkC,EAAQtgD,QAA9D,OAA6E,KAJtF,cACQwiD,EADR,yBAOS,CAAExwD,QAASwwD,EAAc5+D,IAAImY,OAPtC,2CAF+C,uDAapC0mD,EAAqB7yC,YAIhC,iCAJgD,uCAId,WAAO97B,EAAP,oBAAAlZ,EAAA,6DAAkB8nF,EAAlB,EAAkBA,gBAAlB,SACPtiD,YAAkBtsB,GADX,UAC5BooB,EAD4B,gDAIzBwmD,EAAgB5uE,IAJS,gCAO3B,CAAEA,UAASlY,KAAMmgC,YAAsBG,KAPZ,2CAJc,yDAcrCymD,EAA4B/yC,YAIvC,wCAJuD,uCAId,WAAOnQ,EAAP,sBAAA7kC,EAAA,6DAAeozC,EAAf,EAAeA,SAClDvzC,EAAQuzC,IAD2B,SAEb9N,YAAmB,CAC7CT,OACAO,QAASvlC,EAAMo4B,YAAYutD,YAAYE,QAAQtgD,QAC/CT,MAAM,aAAGgjD,cAAenmC,KAAnB,UAAsD3hD,EAAMo4B,YAAYutD,YAAYE,QAAQtgD,QAA5F,OAA2G,KALzE,cAEnCwiD,EAFmC,yBAQlC,CAAExwD,QAASwwD,EAAc5+D,IAAImY,KAAwB0D,SARnB,2CAJc,yDAe5CmjD,EAAmB5yC,YAAY,CAC1C9pB,KAAM,cACN3sB,eACA02C,SAAU,CACR4yC,qBAAsB,SAACpoF,EAAOiyB,GAC5BjyB,EAAM2lF,YAAYE,QAAlB,2BACK7lF,EAAM2lF,YAAYE,SAClB5zD,EAAOhC,SAIZjwB,EAAM2lF,YAAY3gD,KAAO,EACzBhlC,EAAM2lF,YAAYI,gBAAiB,GAErCsC,oBAAqB,SAACroF,EAAOiyB,GAC3BjyB,EAAMymC,OAASxU,EAAOhC,SAExBq4D,oBAAqB,SAACtoF,EAAOiyB,GAC3BjyB,EAAMklF,kBAAoBjzD,EAAOhC,QACjCjwB,EAAMqlF,cAAgB56D,IAAc6Z,KAEtCikD,kBAAmB,SAACvoF,EAAOiyB,GACzBjyB,EAAMmlF,gBAAkBlzD,EAAOhC,SAEjCu4D,iBAAkB,SAACxoF,EAAOiyB,GACxBjyB,EAAMqlF,cAAgBpzD,EAAOhC,SAE/Bw4D,gBAAiB,SAACzoF,EAAOiyB,GACvBjyB,EAAM6jC,aAAe5R,EAAOhC,SAE9By4D,mBAAoB,SAAC1oF,EAAOiyB,GAC1BjyB,EAAMslF,gBAAkBrzD,EAAOhC,SAEjC04D,gBAAiB,SAAC3oF,EAAOiyB,GACvBjyB,EAAM0lF,kBAAN,2BAA+B1lF,EAAM0lF,mBAAsBzzD,EAAOhC,WAGtE4lB,cAAe,SAAChmB,GAEdA,EAAQC,QAAQ+3D,EAAkB1yD,SAAS,SAACn1B,GAEtCA,EAAM2lF,YAAYC,eAAiBl7D,IAAwBk+D,OAC7D5oF,EAAM2lF,YAAYC,aAAel7D,IAAwBs2B,YAG7DnxB,EAAQC,QAAQ+3D,EAAkBvyD,WAAW,SAACt1B,EAAOiyB,GACnD,IAAQsF,EAAYtF,EAAOhC,QAAnBsH,QAERv3B,EAAM2lF,YAAYC,aAAel7D,IAAwBk+D,KACzD5oF,EAAM2lF,YAAYpuD,QAAUA,EAExBA,EAAQ0H,OAASoG,MACnBrlC,EAAM2lF,YAAYI,gBAAiB,GAIrC/lF,EAAM2lF,YAAYK,eAAlB,2BACKhmF,EAAM2lF,YAAYK,gBAClBzuD,EAAQ7gB,QAAO,SAACC,EAAOwV,GACxB,OAAO,2BACFxV,GADL,kBAEGwV,EAAOnO,GAAKmO,MAEd,QAKP0D,EAAQC,QAAQk4D,EAAmB7yD,SAAS,SAACn1B,GAC3CA,EAAM2lF,YAAYC,aAAel7D,IAAwBs2B,WAE3DnxB,EAAQC,QAAQk4D,EAAmB1yD,WAAW,SAACt1B,EAAOiyB,GACpD,MAA0BA,EAAOhC,QAAzB5W,EAAR,EAAQA,QAASlY,EAAjB,EAAiBA,KACjBnB,EAAM2lF,YAAYC,aAAel7D,IAAwBk+D,KACzD5oF,EAAM2lF,YAAYK,eAAe3sE,GAAWlY,KAE9C0uB,EAAQC,QAAQk4D,EAAmBnyD,UAAU,SAAC71B,EAAOiyB,GACnDjyB,EAAM2lF,YAAYC,aAAel7D,IAAwBk+D,KACzD5oF,EAAM2lF,YAAYK,eAAe/zD,EAAOhC,SAAW,QAIrDJ,EAAQC,QAAQo4D,EAA0B/yD,SAAS,SAACn1B,GAClDA,EAAM2lF,YAAYC,aAAel7D,IAAwBs2B,WAE3DnxB,EAAQC,QAAQo4D,EAA0B5yD,WAAW,SAACt1B,EAAOiyB,GAC3D,MAA0BA,EAAOhC,QAAzBsH,EAAR,EAAQA,QAASyN,EAAjB,EAAiBA,KAEjBhlC,EAAM2lF,YAAYC,aAAel7D,IAAwBk+D,KACzD5oF,EAAM2lF,YAAYpuD,QAAlB,sBAAgCv3B,EAAM2lF,YAAYpuD,SAAlD,YAA8DA,IAC9Dv3B,EAAM2lF,YAAY3gD,KAAOA,EAErBzN,EAAQ0H,OAASoG,MACnBrlC,EAAM2lF,YAAYI,gBAAiB,MAKvCl2D,EAAQC,QAAQg3D,EAAuBxxD,WAAW,SAACt1B,EAAOiyB,GACxDjyB,EAAM0lF,kBAAoBxO,IAAM,GAAIl3E,EAAM0lF,kBAAmBzzD,EAAOhC,YAItEJ,EAAQC,QAAQ+2D,EAAgBvxD,WAAW,SAACt1B,EAAOiyB,GACjDjyB,EAAM0nC,QAAUwvC,IAAM,GAAIl3E,EAAM0nC,QAASzV,EAAOhC,YAIlDJ,EAAQC,QAAQ82D,EAAgBtxD,WAAW,SAACt1B,EAAOiyB,GACjD,MAAgEA,EAAOhC,QAA/DwW,EAAR,EAAQA,OAAQ5C,EAAhB,EAAgBA,aAAcwC,EAA9B,EAA8BA,gBAAiBC,EAA/C,EAA+CA,aAG/C,GAAItmC,EAAM6jC,eAAiBA,EAAc,CACvC,IAAMglD,EAAcC,IAAMvnF,OAAOk9B,OAAOz+B,EAAMsnC,QAAS,SACjDyhD,EAAcniD,YAClBiiD,EAAYtmD,MAAQ,EACpBsmD,EAAYhiD,eAAiBR,EAAkBmb,KAGjDxhD,EAAMsnC,OAAOyhD,EAAYxmD,OAASwmD,EAGpC/oF,EAAMymC,OAASA,EACfzmC,EAAM6jC,aAAeA,EACrB7jC,EAAMqmC,gBAAkBA,EACxBrmC,EAAMsmC,aAAeA,KAIvBzW,EAAQC,QAAQm2D,EAAsB3wD,WAAW,SAACt1B,EAAOiyB,GAMvD,IALA,MACEA,EAAOhC,QADDwW,EAAR,EAAQA,OAAQ5C,EAAhB,EAAgBA,aAAcwC,EAA9B,EAA8BA,gBAAiBG,EAA/C,EAA+CA,cAAec,EAA9D,EAA8DA,OAAQo+C,EAAtE,EAAsEA,kBAAmBh+C,EAAzF,EAAyFA,QAEnFshD,EAAiC,GACjC/2B,EAAe3qB,EAAOzD,GAEnB/X,EAAI,EAAGA,GAAK41B,IAAoB51B,IACvCk9D,EAAapzD,KAAKgR,YAAwB/C,EAAe/X,EAAGmmC,EAAaprB,eAAiBR,EAAkBva,IAG9G,OAAO,2BACF9rB,GADL,IAEEymC,SACA5C,eACAwC,kBACAG,gBACAk/C,oBACAh+C,UACAJ,OAAQ4vC,IAAM,GAAI5vC,EAAQD,YAAc2hD,SAK5Cn5D,EAAQC,QAAQ22D,EAAWnxD,WAAW,SAACt1B,EAAOiyB,GAC5CjyB,EAAMsnC,OAAS4vC,IAAM,GAAIl3E,EAAMsnC,OAAX,eACjBrV,EAAOhC,QAAQsS,MAAMzgC,WAAamwB,EAAOhC,aAK9CJ,EAAQC,QAAQ62D,EAAYrxD,WAAW,SAACt1B,EAAOiyB,GAC7CjyB,EAAMsnC,OAAS4vC,IAAM,GAAIl3E,EAAMsnC,OAAQrV,EAAOhC,YAIhDJ,EAAQC,QAAQi3D,EAAa5xD,SAAS,SAACn1B,GACrCA,EAAMolF,mBAAoB,KAE5Bv1D,EAAQC,QAAQi3D,EAAalxD,UAAU,SAAC71B,GACtCA,EAAMolF,mBAAoB,KAE5Bv1D,EAAQC,QAAQi3D,EAAazxD,WAAW,SAACt1B,EAAOiyB,GAAY,IAAD,EACzD,EAA0BA,EAAOhC,QAAzB5W,EAAR,EAAQA,QAASqqB,EAAjB,EAAiBA,KAEjB1jC,EAAMolF,mBAAoB,EAC1BplF,EAAM25E,QAAQtgE,GAAW69D,IAAM,GAAD,UAAKl3E,EAAM25E,QAAQtgE,UAAnB,QAA+B,GAAIqqB,MAInE7T,EAAQC,QAAQk3D,EAAiB7xD,SAAS,SAACn1B,GACzCA,EAAMolF,mBAAoB,KAE5Bv1D,EAAQC,QAAQk3D,EAAiBnxD,UAAU,SAAC71B,GAC1CA,EAAMolF,mBAAoB,KAE5Bv1D,EAAQC,QAAQk3D,EAAiB1xD,WAAW,SAACt1B,EAAOiyB,GAClD,MAAwDA,EAAOhC,QAAvDyT,EAAR,EAAQA,KAAMgiD,EAAd,EAAcA,kBAAmBuB,EAAjC,EAAiCA,KAAM1B,EAAvC,EAAuCA,aAEvCvlF,EAAMolF,mBAAoB,EAC1BplF,EAAM25E,QAAmB,IAATsN,EAAavjD,EAAb,sBAAwB1jC,EAAM25E,SAA9B,YAA0Cj2C,IAC1D1jC,EAAM0lF,kBAAN,2BAA+B1lF,EAAM0lF,mBAAsBA,GAC3D1lF,EAAMylF,iBAAmBzlF,EAAM25E,QAAQ16C,SAAWsmD,GAAgC,IAAhB7hD,EAAKzE,OACvEj/B,EAAMulF,aAAeA,EACrBvlF,EAAMwlF,mBAAqByB,QAM1B,EASHkB,EAAiBryC,QARnByyC,EADK,EACLA,kBAEAC,GAHK,EAELC,gBAFK,EAGLD,kBACAF,EAJK,EAILA,oBAEAI,GANK,EAKLL,oBALK,EAMLK,oBACAC,EAPK,EAOLA,gBACAP,EARK,EAQLA,qBAGaD,MAAf,S,6BCviBA,6TAWac,EAAyB,WACpC,OAAOxkE,aAAY,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQ6qB,qBAGxCulC,EAA+B,WAC1C,OAAOzkE,aAAY,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQq5B,oBAGxCg3B,EAAkC,SAACrnC,GAE9C,OAD0BonC,IACD5hD,OAAOppB,MAAK,SAACkrE,GAAD,OAAeA,EAAUtnC,YAAcA,MAGjEunC,EAA2B,WACtC,OAAO5kE,aAAY,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQo5B,kBAGxCo3B,EAA6B,SAACxnC,GACzC,IAAMoQ,EAAgBm3B,IACtB,cAAOn3B,QAAP,IAAOA,OAAP,EAAOA,EAAeh0C,MAAK,SAAC4a,GAAD,OAAaA,EAAQ9a,KAAO8jC,MAG5CynC,EAAkB,WAC7B,IAAQlwE,EAAY9W,cAAZ8W,QACAyT,EAAgBP,cAAhBO,YACFxI,EAAW+H,cACXs3B,EAAmBslC,IAEzB/oF,qBAAU,WAERokB,EAASkuC,iBACR,CAACluC,IAEJpkB,qBAAU,WACJyjD,IAEFr/B,EAASyuC,YAAqB,CAAEpP,sBAEhCr/B,EAASguC,YAAoB,CAAE3O,yBAEhC,CAACr/B,EAAUq/B,EAAkB72B,IAEhC5sB,qBAAU,WAEJmZ,GAAWsqC,GACbr/B,EAASouC,YAA6B,CAAEr5C,UAASsqC,wBAElD,CAACr/B,EAAUq/B,EAAkBtqC,KAGrBmwE,EAAa,WACxB,IAAMv3B,EAAextC,aAAY,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQm5B,gBAC3Dw3B,EAAwBvlC,YAA0B+N,GAElDD,EAAkBvtC,aAAY,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQk5B,mBAE9DrO,EAAmBslC,IACnB92B,EAAkB+2B,IAClBh3B,EAAgBm3B,IAEhBK,EAAwCjlE,aAC5C,SAACzkB,GAAD,OAAkBA,EAAM84B,QAAQ8qB,iCAMlC,MAAO,CACLD,mBACAC,8BANoC5hC,mBAAQ,WAC5C,OAAO,IAAItd,IAAUglF,KACpB,CAACA,IAKF13B,kBACAG,kBACAD,gBACAD,aAAcw3B,K,yDClEHE,IAXQ,WACrB,MAA2C/pF,mBAAS4xB,KAAKkB,OAAzD,mBAAOk3D,EAAP,KAAoBC,EAApB,KAOA,MAAO,CAAED,cAAaE,oBANM1R,YAAiBwR,GAMFG,eAJpB9oF,uBAAY,WACjC4oF,EAAoBr4D,KAAKkB,SACxB,CAACm3D,O,iFCRAxtD,EAAU74B,YAAOihE,IAAPjhE,CAAH,kGAcEwmF,IARc,WAC3B,OACE,cAAC3tD,EAAD,UACE,cAAC,KAAD,Q,2JCPA4tD,EAAehhF,IAAcU,KACrBugF,EAASzzE,IAAfvN,KAMO,SAASihF,EAAahwE,GACnC,IAAQ1X,EAAYH,cAAZG,QACF2nF,EAAUn7D,YAAgB9U,EAAU1X,GACpC4nF,EAA6DroE,mBACjE,iBAAM,CACJ,CAACvf,GAAW2nF,GAAWzrD,YAAeurD,EAAME,QAAW3qF,EAAY0a,EAAU1X,EAAUynF,OAAOzqF,GAC9F,EAAQ,OAAP2qF,QAAO,IAAPA,OAAA,EAAAA,EAAS96D,OAAO26D,SAAgBxqF,EAAY2qF,EAAS3nF,IAAYkF,IAAQC,QAAUqiF,OAAexqF,GACnG,CAACgD,EAAUynF,OAAOzqF,EAAWgD,IAAYkF,IAAQC,QAAUqiF,OAAexqF,MAE5E,CAACgD,EAAS0X,EAAUiwE,IAEtB,EAA8FzpC,YAAS0pC,GAAvG,yCAAQC,EAAR,KAAsBC,EAAtB,2BAAiCC,EAAjC,KAAgDC,EAAhD,2BAA4DC,EAA5D,KAA8EC,EAA9E,KAEA,OAAO3oE,mBAAQ,WACb,GAAK7H,GAAaiwE,GAAY3nF,EAI9B,GAAI2nF,EAAQ96D,OAAO46D,IACjB,GAAIO,EAAU,CACZ,IAAM/yC,EAAQ+yC,EAASjJ,QAAQ0I,GAC/B,OAAO,IAAItI,IAAMznE,EAAU8vE,EAAcvyC,EAAMhB,YAAagB,EAAMjB,gBAHtE,CAQA,GAAI2zC,EAAQ96D,OAAO26D,GACjB,OAAO,IAAIrI,IAAMqI,EAAcA,EAAc,IAAK,KAGpD,IAAMW,EAAgB,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAASM,UAAUX,GACtCY,EACJF,GAAoBD,EAAcA,EAAYnJ,QAAQ0I,GAAMzI,MAAMmJ,GAAkB1xE,IAAMN,IAAKC,OAAO,GAIxG,GACE2xE,IAAkB/pC,IAAUY,QAC5BopC,GACAA,EAASI,UAAUZ,GAActL,YAAYmM,GAC7C,CACA,IAAMpzC,EAAQ+yC,EAASjJ,QAAQ4I,GAC/B,OAAO,IAAIxI,IAAMznE,EAAU8vE,EAAcvyC,EAAMhB,YAAagB,EAAMjB,WAEpE,GAAI6zC,IAAiB7pC,IAAUY,QAAUkpC,GAAWG,IAAqBjqC,IAAUY,QAAUspC,GACvFA,EAAYE,UAAUZ,GAActL,YAAY,MAAQ4L,EAAQM,UAAUX,GAAMvL,YAAY,KAAM,CACpG,IAAMoM,EAAeJ,EAAYnJ,QAAQyI,GACnCe,EAAmBT,EAAQ/I,QAAQ0I,GACnCe,EAAYF,EAAa9xE,SAAS+xE,GAAkB1zC,SAC1D,OAAO,IAAIsqC,IAAMznE,EAAU8vE,EAAcgB,EAAUv0C,YAAau0C,EAAUx0C,eAK7E,CAACh0C,EAAS0X,EAAUowE,EAASD,EAAcK,EAAaD,EAAkBD,EAAUD,EAAeJ,IAGjG,IAAMnmB,EAAmB,WAE9B,OADsBkmB,EAAa1zE,IAAOpN,OAI/B6hF,EAAkB,WAE7B,OADqBf,EAAa1zE,IAAOvN,Q,6BC7E3C,IACMiiF,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQn4D,KAAKo4D,IAAIF,GACfG,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRnmC,KAAM,EACNomC,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXK,EAASC,MAAQt4D,KAAK04D,MAAMP,EAAQH,GACpCG,GAASE,EAASC,MAAQN,GAGxBG,GAASJ,IACXM,EAASE,OAASv4D,KAAK04D,MAAMP,EAAQJ,GACrCI,GAASE,EAASE,OAASR,GAGzBI,GAASL,IACXO,EAASjmC,KAAOpyB,KAAK04D,MAAMP,EAAQL,GACnCK,GAASE,EAASjmC,KAAO0lC,GAGvBK,GAASN,IACXQ,EAASG,MAAQx4D,KAAK04D,MAAMP,EAAQN,GACpCM,GAASE,EAASG,MAAQX,GAGxBM,GA1CoB,KA2CtBE,EAASI,QAAUz4D,KAAK04D,MAAMP,EA3CR,IA4CtBA,GA5CsB,GA4CbE,EAASI,SAGpBJ,EAASH,QAAUC,EAEZE,I,iDCjBMM,IA9BiB,WAC9B,IAAMC,EAActpF,iBAAuB,MACrCupF,EAA0BvpF,iBAA6B,MAC7D,EAA0ChD,oBAAS,GAAnD,mBAAOwsF,EAAP,KAAsBC,EAAtB,KACA,EAA4CzsF,oBAAS,GAArD,mBAAO0sF,EAAP,KAAuBC,EAAvB,KAuBA,OArBArsF,qBAAU,WAcR,OATKksF,IACHD,EAAwBnpF,QAAU,IAAIwpF,sBALJ,SAAC,GAA0C,IAAzC14C,EAAwC,oBAC5Ey4C,EAAkBz4C,EAAMw4C,kBAIgE,CACtFG,WAAY,MACZC,UAAW,IAEbP,EAAwBnpF,QAAQ2pF,QAAQT,EAAYlpF,SACpDqpF,GAAiB,IAGZ,WACDF,EAAwBnpF,SAAWopF,GACrCD,EAAwBnpF,QAAQ4pF,gBAGnC,CAACR,IAEG,CAAEF,cAAaI,oB,oKCZXO,EAAkB13C,YAC7B,+BAD6C,uCAE7C,WAAO97B,GAAP,iBAAAlZ,EAAA,6DAEQ2sF,EAAoBvrF,OAAOC,KAAKo9D,KAAaz1C,IAAzB,iBAAA5nB,OAAA,IAAAA,CAAA,UAA6B,WAAOwrF,GAAP,+BAAA5sF,EAAA,6DACpC6sF,EAAepuB,IAAYmuB,GAApCrlF,QACFA,EAAUD,YAAWulF,GACrBjlD,EAAWtqB,YAAkB/V,GAE7BulF,EAL+C,+BAAA9sF,EAAA,MAK3B,WAAO6lC,GAAP,mBAAA7lC,EAAA,+EAEoB4nC,EAASmlD,oBAAoB7zE,EAAS2sB,GAF1D,cAEhBmnD,EAFgB,OAGhB/lC,EAAU+lC,EAAUznF,WAHJ,SAKEqiD,YAAgBrgD,EAAS0/C,GAL3B,cAKhBgmC,EALgB,yBAMf,CAAChmC,EAASgmC,EAAU77B,aANL,yCAQtBpuC,QAAQD,MAAM,oBAAd,MARsB,kBASf,MATe,0DAL2B,+DAkBrB6kB,EAASslD,UAAUh0E,GAlBE,UAkB/Ci0E,EAlB+C,OAqBnC,KAFZD,EAAYC,EAAkB5nF,YAnBiB,0CAsB5C,IAtB4C,QA4BrD,IAHM6nF,EAAuB,GAGpBzhE,EAAI,EAAGA,EAAIuhE,EAAWvhE,IAC7ByhE,EAAqB33D,KAAKq3D,EAAkBnhE,IA7BO,iBAgC/BulB,QAAQC,IAAIi8C,GAhCmB,eAgC/CC,EAhC+C,yBAiC9CA,GAjC8C,4CAA7B,uDAF5B,SAsC8Bn8C,QAAQC,IAAIw7C,GAtC1C,cAsCQW,EAtCR,yBAwCSA,EAAcC,QAxCvB,2CAF6C,uDA8ClCC,EAAoBp4C,YAAY,CAC3C9pB,KAAM,eACN3sB,aAzDsC,CACtC4pD,eAAe,EACfh6B,WAAW,EACXvtB,KAAM,IAuDNq0C,SAAU,GACVK,cAAe,SAAChmB,GACdA,EAAQC,QAAQ+8D,EAAgB13D,SAAS,SAACn1B,GACxCA,EAAM0uB,WAAY,KAEpBmB,EAAQC,QAAQ+8D,EAAgBv3D,WAAW,SAACt1B,EAAOiyB,GACjDjyB,EAAM0uB,WAAY,EAClB1uB,EAAM0oD,eAAgB,EACtB1oD,EAAMmB,KAAO8wB,EAAOhC,QAAQvZ,QAAO,SAACC,EAAOi3E,GACzC,IAAKA,EACH,OAAOj3E,EAGT,MAA8Bi3E,EAA9B,mBAAOxmC,EAAP,KAAgBmK,EAAhB,KAEA,OAAO,2BACF56C,GADL,kBAEG46C,EAAa56C,EAAM46C,GAAN,sBAAwB56C,EAAM46C,IAA9B,CAA2CnK,IAAW,CAACA,OAEtE,UAKMumC,MAAf,S,wSC3DME,EAAiBrqF,YAAOQ,IAAPR,CAAH,6CASb,SAASsqF,EAAT,GAAkF,IAAnDzlE,EAAkD,EAAlDA,KAAkD,IAA5C28D,qBAA4C,SAC9E3rE,EAAY/W,cAAZ+W,QAEApX,EAAMC,cAAND,EAEFu6B,EAAYwoD,EAAgB38D,EAAKC,OAAS+G,YAAehH,EAAKC,QAC9DmU,EAAYuoD,EAAgB38D,EAAKE,OAAS8G,YAAehH,EAAKE,QAEpE,EAAgC3oB,oBAAS,GAAzC,mBAAOmuF,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBjuC,YAAe,OAAC3mC,QAAD,IAACA,SAAW5Z,EAAW4oB,EAAK+lC,gBAC7D8/B,EAAkBxX,YAAeruD,EAAK+lC,gBAEtCkyB,EACF2N,GAAqBC,GAAmBt1E,IAAKu1E,mBAAmBD,EAAgBh1E,IAAK+0E,EAAgB/0E,KACnG,IAAIP,IAAQs1E,EAAgB/0E,IAAKg1E,EAAgBh1E,UACjDzZ,EAEN,EACI4oB,GACA6lE,GACAD,GAEFr1E,IAAKu1E,mBAAmBD,EAAgBh1E,IAAK+0E,EAAgB/0E,KACzD,CACEmP,EAAK+lE,kBAAkB/lE,EAAKC,OAAQ4lE,EAAiBD,GAAiB,GACtE5lE,EAAK+lE,kBAAkB/lE,EAAKE,OAAQ2lE,EAAiBD,GAAiB,IAExE,MAACxuF,OAAWA,GAVlB,mBAAO4uF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmBr1E,IAAK+lE,YAAYsP,EAAgB/0E,IAAKN,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY1U,IAAI,OAAhB,UACE,cAAC0pF,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM1sE,MAAM,YAAY+4C,MAAI,EAA5B,SACGj4D,EAAE,kCAIT,eAAC4rF,EAAD,CAAgBtsE,QAAS,kBAAMysE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBvxD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMk5B,OAAK,EAACz0C,MAAM,aAAlB,UACGqb,EAAUoD,OADb,IACsBnD,EAAUmD,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOquD,EAAkBA,EAAgB12C,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYpzC,IAAI,MAAhB,UACE,eAAC0pF,EAAD,WACE,eAAC,KAAD,CAAM1sE,MAAM,aAAay0C,OAAK,EAA9B,UACG3zD,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOq+E,EAAmB,UAAMA,EAAoBz6E,QAAQ,GAAlC,KAA0C,SAEtE,eAACgoF,EAAD,WACE,eAAC,KAAD,CAAM1sE,MAAM,aAAay0C,OAAK,EAA9B,UACG3zD,EAAE,iBAAkB,CAAEq6D,MAAO9/B,EAAUoD,SAD1C,OAGCyuD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9uB,GAAG,MAAT,gBAAgB8uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB92C,cAAc,OAGjD,OAGJ,eAACs2C,EAAD,WACE,eAAC,KAAD,CAAM1sE,MAAM,aAAay0C,OAAK,EAA9B,UACG3zD,EAAE,iBAAkB,CAAEq6D,MAAO7/B,EAAUmD,SAD1C,OAGC0uD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/uB,GAAG,MAAT,gBAAgB+uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB/2C,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAM4e,SAAS,OAAOv5B,MAAO,CAAEi5B,UAAW,UAA1C,UACE,sBAAM04B,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPtsF,EACC,qNASC,SAASusF,EAAT,GAAkE,IAAtCnmE,EAAqC,EAArCA,KAAS7G,EAA4B,iBACtEnI,EAAY/W,cAAZ+W,QAEFmjB,EAAYnN,YAAehH,EAAKC,QAChCmU,EAAYpN,YAAehH,EAAKE,QAEtC,EAAgC3oB,oBAAS,GAAzC,mBAAOmuF,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBjuC,YAAe,OAAC3mC,QAAD,IAACA,SAAW5Z,EAAW4oB,EAAK+lC,gBAC7D8/B,EAAkBxX,YAAeruD,EAAK+lC,gBAEtCkyB,EACF2N,GAAqBC,GAAmBt1E,IAAKu1E,mBAAmBD,EAAgBh1E,IAAK+0E,EAAgB/0E,KACnG,IAAIP,IAAQs1E,EAAgB/0E,IAAKg1E,EAAgBh1E,UACjDzZ,EAEN,EACI4oB,GACA6lE,GACAD,GAEFr1E,IAAKu1E,mBAAmBD,EAAgBh1E,IAAK+0E,EAAgB/0E,KACzD,CACEmP,EAAK+lE,kBAAkB/lE,EAAKC,OAAQ4lE,EAAiBD,GAAiB,GACtE5lE,EAAK+lE,kBAAkB/lE,EAAKE,OAAQ2lE,EAAiBD,GAAiB,IAExE,MAACxuF,OAAWA,GAVlB,mBAAO4uF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM1xD,MAAO,CAAE74B,aAAc,SAAcyd,GAA3C,cACE,eAAC,IAAD,CAAMu0C,eAAe,gBAAgBw4B,KAAK,SAAShtE,QAAS,kBAAMysE,GAAaD,IAAWzkE,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM+rC,cAAc,SAApB,UACE,eAAC,IAAD,CAAMW,WAAW,SAASqG,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoB7/B,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMw9B,MAAI,EAACqF,GAAG,MAAd,SACI/iC,GAAcC,EAAf,UAAqDD,EAAUoD,OAA/D,YAAyEnD,EAAUmD,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAMu2B,SAAS,OAAOh1C,MAAM,aAA5B,gBACG8sE,QADH,IACGA,OADH,EACGA,EAAiB12C,cAAc,QAGnCw2C,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAY5pF,IAAI,MAAMy4B,MAAO,CAAE/4B,QAAS,QAAxC,UACE,eAACgqF,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnxD,KAAK,OAAOviB,SAAUqiB,IACpC,eAAC,KAAD,CAAMrb,MAAM,aAAao+C,GAAG,MAA5B,oBACU/iC,EAAUoD,aAGrByuD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9uB,GAAG,MAAT,gBAAgB8uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB92C,cAAc,OAGjD,OAIJ,eAACs2C,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnxD,KAAK,OAAOviB,SAAUsiB,IACpC,eAAC,KAAD,CAAMtb,MAAM,aAAao+C,GAAG,MAA5B,oBACU9iC,EAAUmD,aAGrB0uD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/uB,GAAG,MAAT,gBAAgB+uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB/2C,cAAc,OAGjD,OAIJ,eAACs2C,EAAD,WACE,cAAC,KAAD,CAAM1sE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACGm/D,EAAmB,UACsB,SAAnCA,EAAoBz6E,QAAQ,GAAgB,QAAUy6E,EAAoBz6E,QAAQ,GADrE,KAEhB,SAIPooF,GAAmBr1E,IAAK+lE,YAAYsP,EAAgB/0E,IAAK4B,MACxD,eAAC,IAAD,CAAMu6C,cAAc,SAApB,UACE,cAAC,IAAD,CACE/W,GAAIkuB,IACJ7d,GAAE,kBAAa76B,YAAW0I,GAAxB,YAAsC1I,YAAW2I,IACnDmhB,QAAQ,UACRl6C,MAAM,OACN24D,GAAG,MALL,oBASA,cAAC,IAAD,CACE/d,GAAIkuB,IACJ7d,GAAE,eAAU76B,YAAW0I,GAArB,YAAmC1I,YAAW2I,IAChDmhB,QAAQ,OACRmoB,UAAW,cAAC,IAAD,CAAS5kD,MAAM,YAC1Bzd,MAAM,OALR,+C,8PC/OD+qF,EAAY,uCAAG,8CAAAtuF,EAAA,6DAAO4kC,EAAP,+BAAe,EAAGC,EAAlB,+BAAyB,EAAGhlC,EAA5B,+BAAoC6qB,IAAc6jE,OAAlD,SACwBlqD,IAChDwU,IACAtU,cAFwD,IAAD,whBA2BvD,CAAEK,QAAOC,OAAMhlC,UA5BS,cACpBilC,EADoB,yBA8BnBA,EAAS0pD,WA9BU,2CAAH,qDAiCZC,EAAW,uCAAG,WAAO5wE,GAAP,eAAA7d,EAAA,sEACsBqkC,IAC7CwU,IACAtU,cAFqD,IAAD,gVAqBpD,CAAE1mB,OAtBqB,cACnBinB,EADmB,yBAwBlBA,EAAS4pD,UAxBS,2CAAH,sDA2BXC,EAAQ,uCAAG,WAAO/pD,EAAeC,EAAcF,GAApC,eAAA3kC,EAAA,sEACoBqkC,IACxCwU,IACAtU,cAFgD,IAAD,kYAoB/C,CAAEK,QAAOC,OAAMF,UArBK,cAChBG,EADgB,yBAuBfA,EAAS8pD,OAvBM,2CAAH,0DA0BRC,EAA2B,uCAAG,WACzCD,EACAh3D,GAFyC,qBAAA53B,EAAA,8DAIrB43B,EAJqB,qCAILl1B,IAAkB2pB,iBAJb,iCAInCC,EAJmC,KAMnCwiE,EAAgBF,EAAM5lE,KAAI,SAAC+lE,GAAD,cAAW,CACzCxnF,QAASwnF,EAAKC,MACdC,iBAAgB,UAAEF,EAAKG,gBAAP,aAAE,EAAeD,iBACjCE,MAAK,UAAEJ,EAAKG,gBAAP,aAAE,EAAeE,gBATiB,SAWlB/nC,MAAM,GAAD,OAAI3O,IAAJ,WAAkC,CAC5DzS,OAAQ,OACRopD,QAAS,CACP,eAAgB,oBAElBC,KAAMnmD,KAAKC,UAAU,CACnBxR,MAAOtL,EACPsiE,MAAOE,MAlB8B,WAWnChqD,EAXmC,QAsB3BwiB,GAtB2B,uBAuBjC,IAAIplD,MAAM4iC,EAASyqD,YAvBc,yBA0BtBzqD,EAASyiB,OA1Ba,eA0BnCvmD,EA1BmC,yBA2BlC4tF,EAAMr4E,QAAO,SAACC,EAAOu4E,GAAU,IAAD,EACnC,OAAO,2BACFv4E,GADL,kBAEGu4E,EAAKlxE,IAAsD,KAAjD,UAAA7c,EAAKA,KAAK+tF,EAAKC,MAAM5jE,sBAArB,eAAqC+2D,aAEjD,KAhCsC,4CAAH,wDAmC3BqN,EAAW,uCAAG,WAAOC,EAAoB73D,GAA3B,2BAAA53B,EAAA,6DAA2C0vF,EAA3C,+BAA2D,IAA3D,kBAElB,IAAIx+C,SAAQ,SAACy+C,EAASC,GAC3B,IAAIhB,EAAgB,GAEdiB,EAAc,uCAAG,WAAOC,GAAP,eAAA9vF,EAAA,+EAEK2uF,EAASe,EAAeI,EAAS,CAAEpB,SAAUe,IAFlD,OAIM,KAFnBM,EAFa,QAILjxD,OACZ6wD,EAAQf,IAERA,EAAK,sBAAOA,GAAP,YAAiBmB,IACtBF,EAAeC,EAAUJ,IARR,gDAWnBE,EAAO,EAAD,IAXa,yDAAH,sDAepBC,EAAe,OApBQ,2CAAH,wDCzHlBlxF,EAA4B,CAChCqxF,sBAAuBrlE,IAAyBm6D,QAChD0J,UAAW,GACXyB,kBAAmBtlE,IAAyBm6D,QAC5C8J,MAAO,IAIIsB,EAAiBl7C,YAC5B,wBAD4C,uCAE5C,uCAAAh1C,EAAA,6DAAS4kC,EAAT,EAASA,MAAT,IAAgBC,YAAhB,MAAuB,EAAvB,MAA0BhlC,aAA1B,MAAkC6qB,IAAc6jE,OAAhD,WACyBD,EAAa1pD,EAAOC,EAAMhlC,GADnD,cACQilC,EADR,yBAESA,GAFT,2CAF4C,uDAQjCqrD,EAAgBn7C,YAAmC,uBAAnB,uCAA2C,WAAOy6C,GAAP,eAAAzvF,EAAA,sEAC/DyuF,EAAYgB,GADmD,cAChF3qD,EADgF,yBAE/EA,GAF+E,2CAA3C,uDAKhCsrD,EAAap7C,YAGxB,oBAHwC,uCAGnB,iCAAAh1C,EAAA,6DAASyvF,EAAT,EAASA,WAAY73D,EAArB,EAAqBA,MAArB,SACE43D,EAAYC,EAAY73D,GAD1B,cACfkN,EADe,yBAEd,CAAE8pD,MAAO9pD,EAAU2qD,eAFL,2CAHmB,uDAQ7BY,EAAcr7C,YAIzB,qBAJyC,uCAInB,yCAAAh1C,EAAA,6DAASyvF,EAAT,EAASA,WAAYa,EAArB,EAAqBA,SAAcl9C,EAAnC,EAAmCA,SACnDvzC,EAAQuzC,IACRm9C,EAAgB1wF,EAAM44B,OAAOm2D,MAAMa,GAFnB,SAGCZ,EAA4B0B,EAAerwD,OAAOowD,IAHnD,cAGhBxrD,EAHgB,yBAIf,CAAE1N,QAAS0N,EAAU2qD,eAJN,2CAJmB,yDAW9Be,EAAcp7C,YAAY,CACrC9pB,KAAM,SACN3sB,eACA02C,SAAU,GACVK,cAAe,SAAChmB,GAEdA,EAAQC,QAAQ0gE,EAAYl7D,WAAW,SAACt1B,EAAOiyB,GAC7C,MAAgCA,EAAOhC,QAA/B2/D,EAAR,EAAQA,WAAYr4D,EAApB,EAAoBA,QAEhBv3B,EAAM+uF,MAAMa,KACd5vF,EAAM+uF,MAAMa,GAAc5vF,EAAM+uF,MAAMa,GAAYzmE,KAAI,SAAC+lE,GACrD,OAAO,2BACFA,GADL,IAEE0B,UAA+B,IAArBr5D,EAAQ23D,EAAKlxE,aAO/B6R,EAAQC,QAAQugE,EAAel7D,SAAS,SAACn1B,GACvCA,EAAMmwF,sBAAwBrlE,IAAyBk2B,WAEzDnxB,EAAQC,QAAQugE,EAAe/6D,WAAW,SAACt1B,EAAOiyB,GAChD,IAAM08D,EAAY18D,EAAOhC,QAAQvZ,QAAO,SAACC,EAAOk4E,GAC9C,OAAO,2BACFl4E,GADL,kBAEGk4E,EAAS7wE,GAAK6wE,MAEhB,IAEH7uF,EAAM2uF,UAAYzX,gBAAM,GAAIl3E,EAAM2uF,UAAWA,GAC7C3uF,EAAMmwF,sBAAwBrlE,IAAyB89D,QAIzD/4D,EAAQC,QAAQwgE,EAAcn7D,SAAS,SAACn1B,GACtCA,EAAMmwF,sBAAwBrlE,IAAyBk2B,WAEzDnxB,EAAQC,QAAQwgE,EAAch7D,WAAW,SAACt1B,EAAOiyB,GAC/CjyB,EAAM2uF,UAAU18D,EAAOhC,QAAQjS,IAAMiU,EAAOhC,QAC5CjwB,EAAMmwF,sBAAwBrlE,IAAyB89D,QAIzD/4D,EAAQC,QAAQygE,EAAWp7D,SAAS,SAACn1B,GACnCA,EAAMowF,kBAAoBtlE,IAAyBk2B,WAErDnxB,EAAQC,QAAQygE,EAAWj7D,WAAW,SAACt1B,EAAOiyB,GAC5C,MAA8BA,EAAOhC,QAA7B8+D,EAAR,EAAQA,MAAOa,EAAf,EAAeA,WAEf5vF,EAAM+uF,MAAN,2BACK/uF,EAAM+uF,OADX,kBAEGa,EAAab,IAEhB/uF,EAAMowF,kBAAoBtlE,IAAyB89D,WAK1C+H,MAAf,S,8JCpGME,EAAQrtF,YAAOC,IAAPD,CAAH,gDACK,gBAAGw0C,EAAH,EAAGA,MAAH,SAAU4M,YAA+B5M,EAAM2M,OAAO0U,UAAUC,aAG1Ew3B,EAAQttF,YAAOqgE,IAAPrgE,CAAH,2EAWIutF,EANuC,SAAC,GAAD,IAAGnsC,EAAH,EAAGA,WAAYjlD,EAAf,EAAeA,SAAa6hB,EAA5B,wBACpD,cAACqvE,EAAD,yBAAOjsC,WAAYA,GAAgBpjC,GAAnC,aACE,cAACsvE,EAAD,UAAQnxF,S,w+TChBZ,0GAYa20C,EAAa,SACxBH,EACA68C,EACArgD,EACA4D,GAEA,IAAM08C,EAA0B,IAAIvsF,IAAUssF,GAAkB5rF,MAAMmvC,GAAenvC,MAAMoS,KACrF05E,EAA0B,IAAIxsF,IAAUyvC,GAAmB/uC,MAAMurC,GACjE7V,EAAMm2D,EAAwB/sF,IAAIgtF,GAAyB9rF,MAAM,KACvE,OAAO01B,EAAIwF,UAAYxF,EAAIq2D,WAAa,KAAOr2D,EAAIp1B,YAUxC0rF,EAAa,SACxB72C,EACAypB,EACAqtB,EACAC,GACsD,IAAD,EAE/CC,EAD6B95E,IAAcrS,MAAMm1C,GACLn1C,MAAM4+D,GAAc9/D,IAAImtF,GAAkBjsF,MAAM,KAC9FosF,EAAyB,KAK7B,OAJKD,EAAejxD,SAAWixD,EAAeJ,aAC5CK,EAAyBD,EAAe7rF,YAGnC,CAAE6rF,eAAgBC,EAAwBC,aAD/B,UAAGC,EAAM,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAanV,4BAAvB,QAA+C,K,iLCtCtDwV,EAA6B,IAKpCC,EAAwC,SAC5CC,EACA3iB,GAGA,GAA6B,IAAzBA,EAAcjwC,OAChB,OAAO4yD,EAAS1oE,KAAI,SAAC0kD,GACnB,MAAO,CACL7rB,QAAS6rB,EAAU7rB,QACnBO,YAAasrB,EAAUtrB,YAAYzgD,WACnCigD,UAAW8rB,EAAU9rB,UACrBtb,OAAQonC,EAAUpnC,OAClBzoB,GAAI6vD,EAAU/rB,UAAUhgD,WACxBgwF,YAAajkB,EAAU5rB,kBACvBoQ,aAAc,GACd0/B,WAAY,GACZC,eAAgB,OAMtB,IAAMhkB,EAA0B6jB,EAAS1oE,KAAI,SAACilD,GAC5C,IAAM6jB,EAAiB/iB,EAAchxD,MAAK,SAACiwD,GAAD,OAAwBA,EAAmBnwD,KAAOowD,EAActsB,aAC1G,MAAO,CACLE,QAASosB,EAAcpsB,QACvBO,YAAa6rB,EAAc7rB,YAAYzgD,WACvCigD,UAAWqsB,EAAcrsB,UACzBtb,OAAQ2nC,EAAc3nC,OACtBzoB,GAAIowD,EAActsB,UAClBgwC,YAAW,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAgBH,YAC7Bz/B,aAAY,OAAE4/B,QAAF,IAAEA,OAAF,EAAEA,EAAgB5/B,aAC9B0/B,WAAU,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAgBF,WAC5BC,eAAc,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAgBD,mBAKpC,EAAgChkB,EAAwB7/B,OAAO,GAAxDkgC,EAAP,oBACMC,EAA6BY,EAChC/lD,KAAI,SAAColD,GAAD,cAAgBA,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYvwD,MAChC2qB,QAFgC,OAExB0lC,QAFwB,IAExBA,OAFwB,EAExBA,EAAuBrwD,IAE5BwwD,EAA0BU,EAAgBA,EAAcT,OAAOH,EAA6B,GAAK,GAEvG,MADoB,sBAAON,GAAP,YAAmCQ,KAI5C0jB,EAAiB,uCAAG,8CAAA/xF,EAAA,6DAC/B4kC,EAD+B,+BACvB4sD,EACR3sD,EAF+B,+BAExB,EACPF,EAH+B,+BAGP,GAHO,kBAMNN,kBACrBoU,IACAlU,cAF6B,IAAD,+bAiB5B,CAAEM,OAAMD,QAAOD,UAvBY,cAMvBG,EANuB,yBAyBtBA,EAASguB,WAzBa,yCA2B7B9vC,QAAQD,MAAR,MA3B6B,kBA4BtB,IA5BsB,0DAAH,qDAgCxB8vC,EAAgB,uCAAG,WAAOrP,GAAP,qBAAAxjD,EAAA,6DACjBgyF,EAAkBtuC,YAAiBF,GADlB,SAEAL,YAAuB6uC,GAFvB,cAEjBN,EAFiB,gBAGKK,IAHL,cAGjBhjB,EAHiB,OAIjBkjB,EAAaR,EAAsCC,EAAU3iB,GAJ5C,kBAKhBkjB,GALgB,2CAAH,sDAQPp/B,O,wIC9FTq/B,EAAiB7uF,IAAOU,IAAV,8RAOJ,qBAAG8zC,MAAkBw7B,QAAQC,SACvB,qBAAGz7B,MAAkB2M,OAAO2tC,kBAElC,qBAAGt6C,MAAkB2M,OAAO2tB,SAItCigB,EAAwB/uF,IAAOU,IAAV,wTAKX,qBAAG8zC,MAAkB2M,OAAO2tB,SAC/B,qBAAGt6B,MAAkBw6C,SAASttC,YAOvC,qBAAGlN,MAAkByE,aAAaC,MAKhC+1C,EAAoBjvF,YAAOC,IAAPD,CAAH,2WAIP,qBAAGw0C,MAAkB2M,OAAO2tB,SAOxC,qBAAGt6B,MAAkByE,aAAaC,MAIlC,SAACl7B,GAAD,OACAA,EAAMkxE,QACNC,YADA,+XAEIN,GAC2B,qBAAGr6C,MAAkB2M,OAAO2tC,kBACzC,qBAAGt6C,MAAkB3I,QAAQujD,YAI3CL,GAIoB,qBAAGv6C,MAAkB2M,OAAO2tC,kBAGlC,qBAAGt6C,MAAkB3I,QAAQujD,gBAY7CC,EAAervF,IAAO6wD,GAAV,qGAIL,qBAAGrc,MAAkBw6C,SAASttC,YAGrC4tC,EAAWtvF,IAAOuvF,GAAV,+GAII,qBAAG/6C,MAAkB2M,OAAO2tC,kBAiE/BU,IAnDsC,SAAC,GAA2C,IAAzC9sF,EAAwC,EAAxCA,QAAS+sF,EAA+B,EAA/BA,eAAmBzxE,EAAY,iBACxF0xE,EAActwF,iBAAO,MAC3B,EAA4BhD,oBAAS,GAArC,mBAAO8yF,EAAP,KAAeS,EAAf,KACA,EAAsDvzF,mBAAS,GAA/D,mBAAOwzF,EAAP,KAA4BC,EAA5B,KAEMC,EAAW,SAAC74B,GAChB04B,GAAWT,GACXj4B,EAAM84B,mBAuBR,OAXArzF,qBAAU,WACR,IAAMszF,EAAqB,WACzBL,GAAU,IAIZ,OADAzY,SAASK,iBAAiB,QAASyY,GAC5B,WACL9Y,SAASM,oBAAoB,QAASwY,MAEvC,IAGD,eAACf,EAAD,yBAAmBC,OAAQA,GAAYlxE,GAAvC,cACE,cAAC6wE,EAAD,CAAgB9wE,QAAS+xE,EAAzB,SACE,cAAC,KAAD,UAAOptF,EAAQktF,GAAqBvf,UAEtC,cAAC,IAAD,CAAmB1yD,MAAM,OAAOI,QAAS+xE,IACzC,cAACf,EAAD,UACE,cAACM,EAAD,CAActjD,IAAK2jD,EAAnB,SACGhtF,EAAQijB,KAAI,SAACsqE,EAAQztD,GAAT,OACXA,IAAUotD,EACR,cAACN,EAAD,CAAUvxE,SA9BGmyE,EA8BsB1tD,EA9BI,WACjDqtD,EAAuBK,GACvBP,GAAU,GAENF,GACFA,EAAe/sF,EAAQwtF,MAyBf,SACE,cAAC,KAAD,UAAOD,EAAO5f,SADgC4f,EAAO5f,OAGrD,KAjCU,IAAC6f,e,0CChHrBC,E,KAAUnwF,EAAOU,IAAV,miBA4BEyvF,O,yLCfFC,EAA0B,uCAAG,WAAOv6E,GAAP,iBAAAlZ,EAAA,+EAEfqkC,kBACrBmU,IACAjU,cAF6B,IAAD,wPAa5B,CACErrB,QAASA,EAAQkS,gBAhBiB,uBAE9B7G,EAF8B,EAE9BA,KAF8B,kBAoB/BA,EAAK2iC,QApB0B,yDAsB/B,MAtB+B,yDAAH,sDA6B1BwsC,EAAe,uCAAG,WAAOx6E,GAAP,eAAAlZ,EAAA,sEACKyzF,EAA2Bv6E,GADhC,UACvBy6E,EADuB,gDAIpB,IAJoB,gCAOtBA,EAAoBp9E,QAAO,SAACC,EAAOo9E,GACxC,IAAKlf,IAAYj0E,IAAImzF,EAAUzZ,YAC7B,OAAO3jE,EAGT,IAAMgpE,EAAe9K,IAAYx0E,IAAI0zF,EAAUzZ,YAE/C,MAAM,GAAN,mBACK3jE,GADL,CAEE,CACEqH,GAAI+1E,EAAUzZ,WACdjiE,KAAMsnE,EAAatnE,KACnB3Q,QAASqsF,EAAU/1E,GACnBi/B,MAAO8hC,YAAoBY,GAC3BziC,YAAa8hC,YAA0BW,GACvC/K,MAAO+K,EAAa/K,MACpBvtB,OAAQhnB,OAAO0zD,EAAU1sC,aAG5B,KA1B0B,2CAAH,sDCpCf2sC,EAAmBz+C,YAAY,CAC1C9pB,KAAM,eACN3sB,aANqC,CACrCqC,KAAM,IAMNq0C,SAAU,CACRy+C,eAAgB,SAACj0F,EAAOiyB,GACtBjyB,EAAMmB,KAAKy0B,KAAK3D,EAAOhC,UAEzBikE,gBAAiB,SAACl0F,EAAOiyB,GACvBjyB,EAAMmB,KAAN,sBAAiBnB,EAAMmB,MAAvB,YAAgC8wB,EAAOhC,WAEzCkkE,gBAAiB,SAACn0F,EAAOiyB,GACvBjyB,EAAMmB,KAAO8wB,EAAOhC,SAEtBmkE,kBAAmB,SAACp0F,GAClBA,EAAMmB,KAAO,OAMZ,EAAgF6yF,EAAiBl+C,QAAzFm+C,EAAR,EAAQA,eAAiCE,GAAzC,EAAwBD,gBAAxB,EAAyCC,iBAGnCE,GAHN,EAA0DD,kBAGhC,SAAC/6E,GAAD,8CAAqB,WAAOiL,GAAP,eAAAnkB,EAAA,+EAEvB0zF,EAAgBx6E,GAFO,OAE5Cwe,EAF4C,OAGlDvT,EAAS6vE,EAAgBt8D,IAHyB,gDAKlD1U,QAAQD,MAAR,MALkD,yDAArB,wDASlB8wE,MAAf,S,2CCnCeznC,IAFO,SAAC3S,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,M,0ECCzB06C,E,KAAa9wF,EAAOU,IAAV,4NAaDowF,O,+CCYAC,IAfW,SAACC,EAAoBC,GAC7C,MAAwC70F,oBAAS,GAAjD,mBAAO80F,EAAP,KAAqBC,EAArB,KAWA,OATAz0F,qBAAU,WACR,IAAI00F,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYt3C,YAAW,kBAAMq3C,GAAgB,KAAQF,IAEhD,kBAAMr3C,aAAaw3C,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,I,mOCZHG,EAAcrxF,IAAOU,IAAV,uPACK,gBAAG8zC,EAAH,EAAGA,MAAH,SAAU88C,QAAyB,cAAgB98C,EAAM2M,OAAOO,YAOxE,qBAAG4vC,SAA0B,aACnB,gBAAG98C,EAAH,EAAGA,MAAH,SAAU88C,SAA0B98C,EAAM2M,OAAOC,cAGnD,gBAAG5M,EAAH,EAAGA,MAAH,SAAU88C,SAAyB98C,EAAM2M,OAAOO,YACzD,qBAAG4vC,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFtyF,EAOC,EAPDA,QACAuyF,EAMC,EANDA,SACA1gB,EAKC,EALDA,iBAMQryE,EAAMC,cAAND,EACR,OACE,eAAC,IAAD,CAAYkC,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMgyD,SAAS,OAAf,SAAuBl0D,EAAE,kBACzB,cAAC8sC,EAAA,EAAD,CAAgBC,KAAM/sC,EAAE,uDAAwDs9D,GAAG,WAErF,eAAC,IAAD,CAASp7D,IAAI,OAAb,UACE,eAAC0wF,EAAD,CACEtzE,QAAS,WACF+yD,GAAqB31C,YAAe21C,EAAkBl6D,MACzD46E,EAAS56E,MAGb06E,QAASxgB,IAAqBl6D,IANhC,UAQE,cAAC,IAAD,CAAcD,SAAUC,IAAOwiB,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,sBAEAp6B,EAAUgY,IAAgBhY,GAAW,IAAI0mB,KAAI,SAACxB,GAC9C,IAAMsrD,EAAWqB,aAA4BnrE,KAASmrE,EAAiB5sE,UAAYigB,EAAMjgB,QACzF,OACE,eAACmtF,EAAD,CAAatzE,QAAS,kBAAO0xD,GAAY+hB,EAASrtE,IAAQmtE,QAAS7hB,EAAnE,UACE,cAAC,IAAD,CAAc94D,SAAUwN,EAAOiV,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,UAAOlV,EAAMiY,WAFmEjY,EAAMjgB,kB,qFC9C9FutF,EAAezxF,IAAOU,IAAV,0MAQL,qBAAGgxF,IAAiB,MAAQ,OAGnCC,EAAY3xF,YAAO4xF,IAAP5xF,CAAH,mGAIH,qBAAGw0C,MAAkB2M,OAAOta,WAGlCgrD,EAAe7xF,IAAOU,IAAV,8IAQH,SAASoxF,EAAT,GAYX,IAAD,IAXD3tE,EAWC,EAXDA,MACAiV,EAUC,EAVDA,MACAs4D,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQ/yF,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAGFu8E,EAAoBxgD,cACpB2P,EAAOlrC,IAAO,OAAI+7E,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/7E,UAAxB,iBAAI,EAA+BklB,EAAMjgB,gBAAzC,aAAI,EAA+CimC,MAGjE8nD,EAAU/2D,YAAoB/W,GAC9BjC,EAAW0Y,YAAiBzW,GAElC,OACE,eAACstE,EAAD,CAAcr4D,MAAOA,EAArB,UACE,cAACD,EAAA,EAAD,CAAcxiB,SAAUwN,EAAO+U,KAAK,OAAOE,MAAO,CAAE84D,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAY/wF,IAAI,MAAMy4B,MAAO,CAAE84D,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOvtE,EAAMiY,SACb,cAAC,KAAD,CAAMze,MAAM,eAAeo+C,GAAG,MAA9B,SACE,cAAC81B,EAAD,CAAcp4C,MAAOt1B,EAAM8D,KAA3B,SAAkC9D,EAAM8D,YAG3CkiB,GAAQA,EAAK1Q,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAM24B,OAAK,EAACK,GAAG,MAAM90C,MAAM,aAA3B,UACGlf,EAAE,OADL,IACc0rC,EAAKliB,QAEnB,cAAC,IAAD,CAAUwR,QAAS0Q,EAAK1Q,QAASP,KAAK,eAI1ChX,GAAa+vE,EAab,eAAC,IAAD,CAAU74D,MAAO,CAAEkoD,SAAU,eAA7B,UACE,cAACqQ,EAAD,IACA,cAAC,KAAD,CAAMh0E,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEzd,MAAM,cACN6d,QAAS,WACHi0E,GACFA,EAAe7tE,GAEjB4tE,KANJ,SASGtzF,EAAE,eC1Eb,SAAS0zF,EAAYx7E,GACnB,OAAOA,aAAoBhR,IAAQgR,EAASzS,QAAUyS,IAAaC,IAAQ,QAAU,GAGvF,IAAMw7E,EAAoBpyF,YAAOk2D,KAAPl2D,CAAH,yHAOjBqyF,EAAkBryF,IAAOU,IAAV,gIAQrB,SAASgd,EAAT,GAA4D,IAAzCzb,EAAwC,EAAxCA,QACjB,OAAO,cAACmwF,EAAD,CAAmB34C,MAAOx3C,EAAQo/E,UAAlC,SAA8Cp/E,EAAQ8xC,cAAc,KAG7E,IAAMu+C,EAAWtyF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAGg4D,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGxjB,EAAH,EAAGA,MAAH,SAAUwjB,UAA4BxjB,EAAM2M,OAAOC,cAE9D,gBAAG4W,EAAH,EAAGA,SAAUyX,EAAb,EAAaA,SAAb,OAA6BzX,GAAYyX,EAAW,GAAM,KAGvE,SAAS8iB,EAAT,GAYI,IAXF57E,EAWC,EAXDA,SACA66E,EAUC,EAVDA,SACAgB,EASC,EATDA,WACAC,EAQC,EARDA,cACAr5D,EAOC,EAPDA,MAQQvjB,EAAY/W,cAAZ+W,QACFnY,EAAMy0F,EAAYx7E,GAClB+7E,EAAoBr4D,cACpBs4D,EAAmBl8E,YAAci8E,EAAmB/7E,GACpDi8E,EAAc13D,YAAoBvkB,GAClC1U,EAAU86C,YAAkB,OAAClnC,QAAD,IAACA,SAAW5Z,EAAW0a,GAGzD,OACE,eAAC27E,EAAD,CACEl5D,MAAOA,EACP63C,UAAS,qBAAgBvzE,GACzBqgB,QAAS,kBAAOy0E,EAAa,KAAOhB,KACpCx5B,SAAUw6B,EACV/iB,SAAUgjB,EALZ,UAOE,cAAC,IAAD,CAAc97E,SAAUA,EAAUuiB,KAAK,SACvC,eAAC3lB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMmjD,MAAI,EAAV,SAAY//C,EAASylB,SACrB,eAAC,KAAD,CAAMze,MAAM,aAAay0C,OAAK,EAACygC,UAAQ,EAAClsB,SAAS,QAAjD,WACIgsB,GAAoBC,GAAe,uBADvC,IAC2Dj8E,EAASsR,WAGtE,cAAC,IAAD,CAAUmR,MAAO,CAAE05D,YAAa,YAAhC,SACG7wF,EAAU,cAACyb,EAAD,CAASzb,QAASA,IAAc4T,EAAU,cAACmyD,EAAA,EAAD,IAAmB,UAMjE,SAAS+qB,EAAT,GAsBX,IArBFrgC,EAqBC,EArBDA,OACAhW,EAoBC,EApBDA,WACAo0B,EAmBC,EAnBDA,iBACAR,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAuiB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACAlB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAkB,EAYC,EAZDA,WAaMC,EAAqC30E,mBAAQ,WACjD,IAAI40E,EAAsCH,EAAO,CAAII,IAASz8E,OAAb,mBAAuB8lC,IAAcA,EAItF,YAHmBzgD,IAAfi3F,IACFE,EAAS,sBAAOA,EAAUzoD,MAAM,EAAGuoD,IAA1B,MAAuCj3F,GAAvC,YAAqDm3F,EAAUzoD,MAAMuoD,EAAYE,EAAU33D,WAE/F23D,IACN,CAACF,EAAYx2C,EAAYu2C,IAEpBh0F,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAEF87B,EAEFD,cAEEv6B,EAAMtC,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAM6kC,EAAmB,EAAnBA,MAAOpJ,EAAY,EAAZA,MACRziB,EAAqBhZ,EAAK6kC,GAC1BgwD,EAAa37E,QAAQi6D,GAAoB31C,YAAe21C,EAAkBn6D,IAC1E87E,EAAgB57E,QAAQ45D,GAAiBt1C,YAAes1C,EAAe95D,IAGvEwN,EAAQsH,YAAgB9U,EAAU1X,GAElCq0F,EAAa/4D,GAAkBpW,GAASpmB,OAAOC,KAAKu8B,GAAgB1L,SAAS1K,EAAMjgB,SAEzF,OAAIs+B,IAAU0wD,GAAev1F,EAkBzB21F,GAAcnvE,EAEd,cAAC2tE,EAAD,CAAW14D,MAAOA,EAAOjV,MAAOA,EAAO4tE,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACa,EAAD,CACEn5D,MAAOA,EACPziB,SAAUA,EACV67E,WAAYA,EACZhB,SAlCiB,kBAAMlhB,EAAiB35D,IAmCxC87E,cAAeA,IA3Bf,cAACJ,EAAD,CAAiBj5D,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe/4B,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM6xD,OAAK,EAAX,SAAa3zD,EAAE,gDACf,cAAC8sC,EAAA,EAAD,CACEC,KAAM/sC,EACJ,sGAEFs9D,GAAG,iBAuBjB,CACE98D,EACAs7B,EACA+1C,EACAG,EACAK,EACAkhB,EACAD,EACAmB,EACAz0F,IAIE80F,EAAU91F,uBAAY,SAAC+kC,EAAe7kC,GAAhB,OAA8Bw0F,EAAYx0F,EAAK6kC,MAAS,IAEpF,OACE,cAAC,IAAD,CACEkwB,OAAQA,EACR3mB,IAAKinD,EACL9yF,MAAM,OACNizF,SAAUA,EACVK,UAAWL,EAAS13D,OACpBg4D,SAAU,GACVF,QAASA,EAPX,SASGxzF,I,aC7JQ2zF,MAXf,SAA4B9/C,GAC1B,IAAMsI,EAAWc,cACX22C,EAAan1E,mBAAQ,kBAxB7B,SAA4B09B,GAG1B,OAAO,SAAoB/2B,EAAeC,GAKxC,IArBuBwuE,EAAwBC,EAwBzCC,GAxBiBF,EAqBN13C,EAAS/2B,EAAOjhB,SArBc2vF,EAsB9B33C,EAAS92B,EAAOlhB,SArB/B0vF,GAAYC,EACPD,EAASzY,YAAY0Y,IAAa,EAAID,EAAS11B,QAAQ21B,GAAY,EAAI,EAE5ED,GAAYA,EAASzY,YAAY,MAC3B,EAEN0Y,GAAYA,EAAS1Y,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB2Y,EAA0BA,EAE1B3uE,EAAOiX,QAAUhX,EAAOgX,OAEnBjX,EAAOiX,OAAOrU,cAAgB3C,EAAOgX,OAAOrU,eAAiB,EAAI,EAEnE5C,EAAOiX,QAAchX,EAAOgX,QAAX,EAAyB,GAMlB23D,CAAkB,OAAC73C,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAO19B,mBAAQ,WACb,OAAIo1B,EACK,SAACzuB,EAAeC,GAAhB,OAAgE,EAA9BuuE,EAAWxuE,EAAQC,IAEvDuuE,IACN,CAAC//C,EAAU+/C,KCpBVK,EAAY,IAAIC,MAAM,YAkJbC,IC9KHC,GD8KGD,GAhJf,YAOyB,IANvBpjB,EAMsB,EANtBA,iBACAR,EAKsB,EALtBA,iBACAS,EAIsB,EAJtBA,sBACAL,EAGsB,EAHtBA,gBACAqhB,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQvzF,EAAMC,cAAND,EACAQ,EAAYH,cAAZG,QAGFm1F,EAAYh1F,mBAElB,EAAsChD,mBAAiB,IAAvD,mBAAO2+B,EAAP,KAAoBs5D,EAApB,KACMC,EAAiB76B,YAAY1+B,EAAa,KAEhD,EAA4B3+B,oBAAkB,GAAvCm4F,EAAP,oBAEM3pD,EAAYrlB,cAGZivE,EAAc34D,YAASy4D,GACvBG,EAAqBv5D,YAAoBs5D,GAE/C,EAAoB3zE,cAAbG,EAAP,oBAEMiyE,EAAmBz0E,mBAAQ,WAC/B,IAAMsU,EAAIwhE,EAAevsE,cAAcmqD,OACvC,MAAa,KAANp/C,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAACwhE,IAEEI,EAAkBhB,EAAmBa,GAErCI,EAA0Bn2E,mBAAQ,WACtC,OAAOwc,YAAaj9B,OAAOk9B,OAAO2P,GAAY0pD,KAC7C,CAAC1pD,EAAW0pD,IAETM,EAAwBp2E,mBAAQ,WACpC,OAAOm2E,EAAe1uD,KAAKyuD,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB/iB,YAAuB8iB,EAAcN,GAE5DzZ,EAAuBp9E,uBAC3B,SAACkZ,GACC25D,EAAiB35D,GACbqK,GACFgzE,EAAUc,SAGd,CAAC9zE,EAAWsvD,IAIR/Z,EAAWn3D,mBAEjB1C,qBAAU,WACR65D,EAAS/2D,QAAQg3D,UAChB,IAEH,IAAMu+B,EAAct3F,uBAAY,SAACw5D,GAAW,IAAD,EACnC6X,EAAQ7X,EAAMiP,OAAO1nE,MACrBw2F,EAAmBrgF,YAAUm6D,GACnCulB,EAAeW,GAAoBlmB,GACnC,UAAAslB,EAAU50F,eAAV,SAAmBy1F,SAAS,KAC3B,IAEGC,EAAcz3F,uBAClB,SAACwoE,GACC,GAAc,UAAVA,EAAEvoE,IAEJ,GAAU,QADA42F,EAAevsE,cAAcmqD,OAErC2I,EAAqBjkE,UAChB,GAAIi+E,EAAqBp5D,OAAS,EAAG,CAAC,IAAD,GAExC,UAAAo5D,EAAqB,GAAGz4D,cAAxB,eAAgCrU,iBAAkBusE,EAAepiB,OAAOnqD,eACxC,IAAhC8sE,EAAqBp5D,QAErBo/C,EAAqBga,EAAqB,OAKlD,CAACA,EAAsBha,EAAsByZ,IAIzC/5D,EAAiBO,YAAuBw5D,GACxCa,EAAkCrjB,YAAuBv3C,EAAgB+5D,GAE/E,OACE,mCACE,gCACE,eAAC,IAAD,CAAY3zF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE6Z,GAAG,qBACHu8C,YAAat4D,EAAE,gCACfq4D,MAAM,KACNqY,aAAa,MACb3wE,MAAOu8B,EACPgR,IAAKwqB,EACLS,SAAU+9B,EACVK,UAAWF,MAGdxkB,GACC,cAAC6gB,EAAD,CAAatyF,QAASA,EAASuyF,SAAU3W,EAAsB/J,iBAAkBA,OAGpF0jB,IAAgBC,EACf,cAAClhF,EAAA,EAAD,CAAQ6lB,MAAO,CAAE/4B,QAAS,SAAUqyD,OAAQ,QAA5C,SACE,cAACo/B,EAAD,CAAW3tE,MAAOqwE,EAAazC,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB6C,QAAoB,IAApBA,OAAA,EAAAA,EAAsBp5D,QAAS,IAA2B,OAAtB05D,QAAsB,IAAtBA,OAAA,EAAAA,EAAwB15D,QAAS,EACvE,cAAC,IAAD,CAAK3C,OAAO,aAAZ,SACE,cAACi6D,EAAD,CACErgC,OAAQ,IACRugC,QAASA,EACTv2C,WACEy4C,EAAyBN,EAAqBvuE,OAAO6uE,GAA0BN,EAEjF3B,WAAY34D,GAAkBs6D,EAAuBA,EAAqBp5D,YAASx/B,EACnFq0E,iBAAkBuK,EAClBpK,cAAeM,EACfD,iBAAkBA,EAClBkiB,aAAcoB,EACdrC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACz+E,EAAA,EAAD,CAAQ6lB,MAAO,CAAE/4B,QAAS,OAAQqyD,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM/0C,MAAM,aAAa00C,UAAU,SAASwG,GAAG,OAA/C,SACGp6D,EAAE,+B,yGCrKL01F,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,KAOGA,I,SCkBf,IAAMt7D,GAAU74B,YAAOuT,IAAPvT,CAAH,+DAKPq1F,GAAar1F,YAAOD,IAAPC,CAAH,4LACM,gBAAGs1F,EAAH,EAAGA,OAAQ9gD,EAAX,EAAWA,MAAX,OAAwB8gD,EAAM,UAAM9gD,EAAM2M,OAAOta,QAAnB,MAAiC,iBAEnE,gBAAGyuD,EAAH,EAAGA,OAAQ9gD,EAAX,EAAWA,MAAX,OAAwB8gD,EAAS9gD,EAAM2M,OAAOta,QAAU2N,EAAM2M,OAAOo0C,YAOvF,SAASC,GAAiBjkE,GACxB,MAAM,YAAN,OAAmBA,EAAQlzB,QAAQ,MAAO,MAG5C,IAAMo3F,GAAUjvE,gBAAK,YAAoD,IAvB/CyL,EAuBcV,EAAgC,EAAhCA,QAChCmkE,EAAaz0E,cAAkD,SAACzkB,GAAD,OAAWA,EAAMq5B,MAAMxE,SACtFvQ,EAAWC,eACjB,EAAkD20E,EAAWnkE,GAA5C4Y,EAAjB,EAAQ3qC,QAA8BmyB,EAAtC,EAAuBT,cAEjBhP,EAAWmpB,YAAgB9Z,GAEzB9yB,EAAMC,cAAND,EAEFk3F,EAAyBl4F,uBAAY,WACpCk0B,GACL7Q,EAAS8R,aAAiBrB,MACzB,CAACzQ,EAAUyQ,EAASI,IAEjBikE,EAAmBn4F,uBAAY,WAE/Bo8C,OAAOg8C,QAAQ,sDACjB/0E,EAAS0R,aAAWjB,MAErB,CAACzQ,EAAUyQ,IAERukE,EAAmBr4F,uBAAY,WACnCqjB,EAAS4R,aAAWnB,MACnB,CAACzQ,EAAUyQ,IAERwkE,EAAoBt4F,uBAAY,WACpCqjB,EAAS6R,aAAYpB,MACpB,CAACzQ,EAAUyQ,IAEd,EAA+Cma,aAC7C,gCACE,cAAC,KAAD,UAAOvB,IAtDalY,EAsDYkY,EAAKlY,QArDnC,IAAN,OAAWA,EAAQ+jE,MAAnB,YAA4B/jE,EAAQgkE,MAApC,YAA6ChkE,EAAQikE,UAsDjD,cAAC,KAAD,CAAcn7C,UAAQ,EAACC,KAAI,gDAA2CzpB,GAAtE,SACG9yB,EAAE,SAEL,cAAC,IAAD,CAAQ27C,QAAQ,SAAS0c,MAAM,KAAK/4C,QAAS63E,EAAkB59B,SAA6C,IAAnCj6D,OAAOC,KAAK03F,GAAYj6D,OAAjG,SACGh9B,EAAE,YAEJkzB,GACC,cAAC,IAAD,CAAQyoB,QAAQ,OAAOr8B,QAAS43E,EAAwBv8D,MAAO,CAAEu5B,SAAU,QAA3E,SACGl0D,EAAE,oBAIT,CAAEgtC,UAAW,YAAaE,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAK3B,EAGH,eAACkrD,GAAD,CAAYC,OAAQpzE,EAAwB1H,GAAIg7E,GAAiBjkE,GAAjE,UACGua,GAAkBD,EAClB1B,EAAK1Q,QACJ,cAAC,IAAD,CAAUP,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUI,QAAS0Q,EAAK1Q,QAASC,IAAG,UAAKyQ,EAAKliB,KAAV,gBAEhF,qBAAKmR,MAAO,CAAEl5B,MAAO,OAAQwyD,OAAQ,OAAQr5B,YAAa,UAE5D,eAAC9lB,EAAA,EAAD,CAAQ6lB,MAAO,CAAEmgC,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM7C,MAAI,EAAV,SAAYvsB,EAAKliB,SAEnB,eAAC,IAAD,CAAU4qC,GAAG,MAAb,UACE,eAAC,KAAD,CAAMF,SAAS,OAAOF,GAAG,MAAMkE,cAAc,YAA7C,UACGxsB,EAAKl3B,OAAOwoB,OADf,IACwBh9B,EAAE,aAE1B,sBAAMstC,IAAKH,EAAX,SACE,cAAC,IAAD,CAASjuB,MAAM,OAAOzd,MAAM,iBAIlC,cAAC,KAAD,CACEs5D,QAASt3C,EACT80C,SAAU,WACJ90C,EACF6zE,IAEAD,SA1B2BvkE,GAHnB,QAqCd4kE,GAAgBn2F,IAAOU,IAAV,sFAqKJ01F,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwCn6F,mBAAiB,IAAzD,mBAAOo6F,EAAP,KAAqBC,EAArB,KAEQh4F,EAAMC,cAAND,EAEFo3B,EAAQwU,cAGR7Y,EAAiBuZ,cACvB,EAAoC3uC,qBAApC,mBAAOs6F,EAAP,KAAmBC,EAAnB,KACAj6F,qBAAU,YACHg6F,GAAcllE,GACjBmlE,EAAcnlE,KAEf,CAACklE,EAAYllE,IAEhB,IAAMujE,EAAct3F,uBAAY,SAACwoE,GAC/BwwB,EAAgBxwB,EAAEC,OAAO1nE,SACxB,IAEGo4F,EAAYlpB,eAEZmpB,EAAoBr4E,mBAAQ,WAChC,OAAOg8C,aAAUg8B,GAAc/6D,OAAS,GAAK5kB,QAAQg1D,aAAgB2qB,MACpE,CAACA,IAEEM,EAAct4E,mBAAQ,WAE1B,OADiBzgB,OAAOC,KAAK63B,GAE1BhQ,QAAO,SAAC0L,GAEP,OAAO1a,QAAQgf,EAAMtE,GAAS/xB,WAAa8xB,KAAsBzC,SAAS0C,MAE3E0U,MAAK,SAAC8wD,EAAIC,GACT,IAAiBC,EAAOphE,EAAMkhE,GAAtBv3F,QACS03F,EAAOrhE,EAAMmhE,GAAtBx3F,QAGR,OAAc,OAAVk3F,QAAU,IAAVA,OAAA,EAAAA,EAAY7nE,SAASkoE,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAY7nE,SAASmoE,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY7nE,SAASkoE,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY7nE,SAASmoE,IAC7C,EAGLC,GAAMC,EACDD,EAAGhvE,KAAKF,cAAgBmvE,EAAGjvE,KAAKF,eAClC,EACDkvE,EAAGhvE,KAAKF,gBAAkBmvE,EAAGjvE,KAAKF,cAClC,EACA,EAEFkvE,GAAY,EACZC,EAAW,EACR,OAEV,CAACrhE,EAAO6gE,IAGX,EAAgCt6F,qBAAhC,mBAAO+6F,EAAP,KAAiBC,EAAjB,KACA,EAAgCh7F,qBAAhC,mBAAOi7F,EAAP,KAAiBC,EAAjB,KAEA56F,qBAAU,WAAM,8CACd,uBAAAC,EAAA,sDACEi6F,EAAUJ,GAAc,GACrBttD,MAAK,SAACiB,GAAD,OAAUitD,EAAYjtD,MAC3BpB,OAAM,kBAAMuuD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAYn7F,GACS,KAAjBu6F,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYr7F,KAEb,CAAC26F,EAAWJ,EAAcK,IAG7B,IAAMW,EAAaz5F,OAAOC,KAAK63B,GAAOhH,SAAS2nE,GAGzCiB,EAAeh6F,uBAAY,WAC1B05F,IACLb,EAAca,GACdd,EAAalC,GAAkBuD,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACt+D,GAAD,WACE,eAAC,IAAD,CAAYl4B,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE6Z,GAAG,iBACHs8C,MAAM,KACNC,YAAat4D,EAAE,mCACfD,MAAOg4F,EACPx/B,SAAU+9B,MAGbsC,EACC,cAAC,KAAD,CAAM15E,MAAM,UAAUyb,MAAO,CAAEu+D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAY/9D,MAAO,CAAEy+D,WAAY,GAAjC,SACE,cAAC32C,EAAA,EAAD,CAAM7gD,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG82F,EAAS19D,SAAW,cAAC,IAAD,CAAUA,QAAS09D,EAAS19D,QAASP,KAAK,SAC/D,eAAC,IAAD,CAAYv4B,IAAI,MAAMy4B,MAAO,CAAE0+D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAMphC,MAAI,EAAV,SAAYygC,EAASlvE,OACrB,eAAC,KAAD,CAAMtK,MAAM,aAAay0C,OAAK,EAACuE,cAAc,YAA7C,UACGwgC,EAASlkF,OAAOwoB,OADnB,IAC4Bh9B,EAAE,mBAIjC+4F,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAet3F,MAAM,OAAOuyD,GAAG,SAC/B,cAAC,KAAD,UAAOh0D,EAAE,eAGX,cAAC,IAAD,CAAQyB,MAAM,cAAc6d,QAAS05E,EAArC,SACGh5F,EAAE,mBAOf,cAAC03F,GAAD,UACE,cAAC,IAAD,CAAYx1F,IAAI,KAAhB,SACGm2F,EAAYnxE,KAAI,SAAC4L,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,UC7QpBsH,GAAU74B,IAAOU,IAAV,4HAOPgwD,GAAS1wD,IAAOU,IAAV,gKASG,SAASq3F,GAAT,GAMX,IALF1B,EAKC,EALDA,aACArE,EAIC,EAJDA,eAKQ/yF,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAO2+B,EAAP,KAAoBs5D,EAApB,KAGM99B,EAAWn3D,mBACX21F,EAAct3F,uBAAY,SAACw5D,GAC/B,IAAM6X,EAAQ7X,EAAMiP,OAAO1nE,MACrBw2F,EAAmBrgF,YAAUm6D,GACnCulB,EAAeW,GAAoBlmB,KAClC,IAGG0lB,EAAc34D,YAASd,GAGvBf,EAA2BC,eAC3B+9D,EAAc3zE,cAEd4zE,EAAkBx6F,uBAAY,WAC9BwB,GAAW+6B,GACbA,EAAgBrU,KAAI,SAACxB,GACnB,OAAO6zE,EAAY/4F,EAASklB,EAAMjgB,cAGrC,CAAC8zF,EAAah+D,EAAiB/6B,IAE5B8yB,EAAYvT,mBAAQ,WACxB,OACEvf,GACA+6B,EAAgBrU,KAAI,SAACxB,GAAD,OAClB,eAAC,IAAD,CAAgCjkB,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcyW,SAAUwN,EAAO+U,KAAK,SACpC,cAAC,KAAD,CAAM6hB,UAAQ,EAACC,KAAMpmC,YAAeuP,EAAMjgB,QAAS,UAAWjF,GAAU0e,MAAM,aAAao+C,GAAG,OAA9F,SACG53C,EAAMiY,YAGX,eAAC,IAAD,WACE,cAAC,KAAD,CAAYge,QAAQ,OAAOr8B,QAAS,kBAAMi6E,EAAY/4F,EAASklB,EAAMjgB,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAc82C,KAAMpmC,YAAeuP,EAAMjgB,QAAS,UAAWjF,UAXhDklB,EAAMjgB,cAgB1B,CAAC81B,EAAiB/6B,EAAS+4F,IAExBE,EAAiC,KAAhBn9D,GAAsBpmB,YAAUomB,GAEvD,OACE,cAAC,GAAD,UACE,eAACxnB,EAAA,EAAD,CAAQ6lB,MAAO,CAAEl5B,MAAO,OAAQq5D,KAAM,OAAtC,UACE,eAAC,IAAD,CAAY54D,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE6Z,GAAG,qBACHs8C,MAAM,KACNC,YAAY,SACZv4D,MAAOu8B,EACPo0C,aAAa,MACbpjC,IAAKwqB,EACLS,SAAU+9B,EACV5uB,WAAY+xB,OAGdA,GAAkB,cAAC,KAAD,CAAMv6E,MAAM,UAAZ,SAAuBlf,EAAE,+BAC5C+1F,GACC,cAAC1C,EAAD,CACE3tE,MAAOqwE,EACPzC,eAAgB,kBAAMsE,EAAalC,GAAkBgE,cACrDnG,eAAgBA,EAChB54D,MAAO,CAAEs5B,OAAQ,oBAItB3gC,EACD,eAAC2+B,GAAD,WACE,eAAC,KAAD,CAAMgG,MAAI,EAAC/4C,MAAM,aAAjB,iBACGqc,QADH,IACGA,OADH,EACGA,EAAiByB,OADpB,IACwD,IAA3BzB,EAAgByB,OAAeh9B,EAAE,gBAAkBA,EAAE,oBAEjFu7B,EAAgByB,OAAS,GACxB,cAAC,IAAD,CAAQ2e,QAAQ,WAAWr8B,QAASk6E,EAApC,SACGx5F,EAAE,uBCnHjB,IAAM25F,GAAmBp4F,YAAO+3D,IAAP/3D,CAAH,8CAIP,SAASq4F,GAAT,GAUX,IATFhC,EASC,EATDA,aACAC,EAQC,EARDA,cACAtE,EAOC,EAPDA,eACAuE,EAMC,EANDA,WAOA,EAAkCn6F,oBAAS,GAA3C,mBAAOk8F,EAAP,KAAkBC,EAAlB,KAEQ95F,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAAC25F,GAAD,CACE/+B,YAAai/B,EAAY,EAAI,EAC7Bh/B,YAAa,kBAAMi/B,GAAa,SAACxmC,GAAD,OAAWA,MAC3C+E,MAAM,KACN1c,QAAQ,SACRye,GAAG,OALL,UAOE,cAAC,IAAD,CAAgB34D,MAAM,MAAtB,SAA6BzB,EAAE,WAC/B,cAAC,IAAD,CAAgByB,MAAM,MAAtB,SAA6BzB,EAAE,eAEhC65F,EACC,cAAC,GAAD,CAAajC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAcrE,eAAgBA,O,mBCtB5Dn5D,GAAU74B,IAAOU,IAAV,qEAKP83F,GAAUx4F,IAAOU,IAAV,8GAGS,qBAAG8zC,MAAkB2M,OAAO3V,QA4GnCitD,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAASvuD,EAA+B,EAA/BA,KAAMwuD,EAAyB,EAAzBA,SAC3BnkD,EAAUD,eAAVC,MACF1zB,EAAWC,eAETtiB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAOksE,EAAP,KAAkBwS,EAAlB,KAEMjlD,EAAQwU,cACRusD,EAAYlpB,eAGZkrB,EAAS/hF,QAAO,UAACgf,EAAM6iE,UAAP,aAAC,EAAgBznE,kBACvC,EAAgC70B,mBAAwB,MAAxD,mBAAOi7F,EAAP,KAAiBC,EAAjB,KAEMuB,EAAgBp7F,uBAAY,WAC5Bm7F,IACJtB,EAAY,MACZV,EAAU8B,GACPxvD,MAAK,WACJpoB,EAAS4R,aAAWgmE,IACpBC,OAED5vD,OAAM,SAACrpB,GACN43E,EAAY53E,EAAM08C,SAClBt7C,EAAS0R,aAAWkmE,UAEvB,CAACE,EAAQ93E,EAAU81E,EAAW8B,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAYh4F,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAACugD,EAAA,EAAD,CAAM7gD,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACG8pC,EAAK1Q,SAAW,cAAC,IAAD,CAAUA,QAAS0Q,EAAK1Q,QAASP,KAAK,SACvD,eAAC,IAAD,CAAYv4B,IAAI,KAAKy4B,MAAO,CAAE0+D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMphC,MAAI,EAACjE,GAAG,MAAd,SACGtoB,EAAKliB,OAER,cAACuwE,GAAD,IACA,eAAC,KAAD,CAAMpmC,OAAK,EAACz0C,MAAM,aAAao+C,GAAG,MAAlC,UACG5xB,EAAKl3B,OAAOwoB,OADf,gBAIF,cAAC,KAAD,CACE22B,OAAK,EACLrX,UAAQ,EACR83C,UAAQ,EACRlsB,SAAS,MACT3rB,KAAI,gDAA2C09C,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASt+C,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMyX,cAAc,SAApB,UACE,cAAC,KAAD,CAAMc,SAAS,OAAON,UAAU,SAAS10C,MAAO62B,EAAM2M,OAAO2mB,QAASjP,GAAG,OAAzE,SACGp6D,EAAE,6BAEL,cAAC,KAAD,CAAMkf,MAAO62B,EAAM2M,OAAO2mB,QAASjP,GAAG,MAAtC,SACGp6D,EACC,6NAGJ,cAAC,KAAD,CAAMi4D,MAAI,EAAC/4C,MAAO62B,EAAM2M,OAAO2mB,QAASjP,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAMrG,WAAW,SAAjB,UACE,cAAC,IAAD,CACEvqC,KAAK,YACLpT,KAAK,WACL2kD,QAAS8O,EACTtR,SAAU,kBAAM8jB,GAAcxS,IAC9BxR,MAAM,OAER,cAAC,KAAD,CAAMiF,GAAG,OAAO3iC,MAAO,CAAEwtC,WAAY,QAArC,SACGnoE,EAAE,0BAMX,cAAC,IAAD,CAAQu5D,UAAWsQ,EAAWvqD,QAAS86E,EAAvC,SACGp6F,EAAE,YAEJ44F,EACC,cAAC,KAAD,CAAM15E,MAAM,UAAUyb,MAAO,CAAEu+D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aC5GR3mC,GAAS1wD,IAAOU,IAAV,+FAEU,qBAAG8zC,MAAkB2M,OAAOG,iBAI5Cw3C,GAAuB94F,YAAO+4F,KAAP/4F,CAAH,mEAKpBg5F,GAAkBh5F,YAAOi5F,KAAPj5F,CAAH,gDAWN,SAAS6wE,GAAT,GAMe,IAAD,MAL3B3Y,iBAK2B,MALf,kBAAM,MAKS,EAJ3BoY,EAI2B,EAJ3BA,iBACAQ,EAG2B,EAH3BA,iBACAC,EAE2B,EAF3BA,sBAE2B,IAD3BL,uBAC2B,SAC3B,EAAkCt0E,mBAA4B+3F,GAAkBxnC,QAAhF,mBAAOusC,EAAP,KAAkB7C,EAAlB,KAEMxb,EAAuBp9E,uBAC3B,SAACkZ,GACCuhD,IACAoY,EAAiB35D,KAEnB,CAACuhD,EAAWoY,IAIR6oB,EAAWC,YAAYF,GAG7B,EAAsC98F,qBAAtC,mBAAO+7F,EAAP,KAAoBnG,EAApB,KAGA,EAAoC51F,qBAApC,mBAAOs7F,EAAP,KAAmBpB,EAAnB,KACA,EAA8Bl6F,qBAA9B,mBAAOs8F,EAAP,KAAgBnC,EAAhB,KAEQ93F,EAAMC,cAAND,EAEFiV,GAAM,mBACTygF,GAAkBxnC,OAAS,CAAElT,MAAOh7C,EAAE,kBAAmB05D,YAAQl8D,IADxD,cAETk4F,GAAkBkF,OAAS,CAAE5/C,MAAOh7C,EAAE,UAAW05D,OAAQ,kBAAMk+B,EAAalC,GAAkBxnC,WAFrF,cAGTwnC,GAAkBgE,YAAc,CAC/B1+C,MAAOh7C,EAAE,iBACT05D,OAAQ,kBACNk+B,EAAa8C,GAAYA,IAAahF,GAAkBgE,YAAcgB,EAAWhF,GAAkBxnC,WAN7F,cAQTwnC,GAAkBuD,WAAa,CAAEj+C,MAAOh7C,EAAE,eAAgB05D,OAAQ,kBAAMk+B,EAAalC,GAAkBxnC,WAR9F,GAWZ,OACE,eAACmsC,GAAD,CAAsBxX,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACG5tE,EAAOwlF,GAAW/gC,QAAU,cAAC,KAAD,CAAiBA,OAAQzkD,EAAOwlF,GAAW/gC,SACxE,cAAC,IAAD,UAAUzkD,EAAOwlF,GAAWz/C,WAE9B,cAAC,KAAD,CAAkBye,UAAWA,OAE/B,eAAC8gC,GAAD,WACGE,IAAc/E,GAAkBxnC,OAC/B,cAAC,GAAD,CACE2jB,iBAAkBuK,EAClB/J,iBAAkBA,EAClBC,sBAAuBA,EACvBL,gBAAiBA,EACjBqhB,eAAgB,kBAAMsE,EAAalC,GAAkBgE,cACrDnG,eAAgBA,IAEhBkH,IAAc/E,GAAkBgE,aAAeA,EACjD,cAACvd,GAAA,EAAD,CAAa3nE,OAAQ,CAACklF,GAActd,qBAAsBA,IACxDqe,IAAc/E,GAAkBuD,YAAcA,GAAcgB,EAC9D,cAAC,GAAD,CAAYvuD,KAAMutD,EAAYgB,QAASA,EAASC,SAAU,kBAAMtC,EAAalC,GAAkBkF,WAC7FH,IAAc/E,GAAkBkF,OAClC,cAAChB,GAAD,CACEhC,aAAcA,EACdrE,eAAgBA,EAChBsE,cAAeA,EACfC,WAAYA,IAGd,GAED2C,IAAc/E,GAAkBxnC,QAC/B,cAAC,GAAD,UACE,cAAC,IAAD,CACEmK,MAAM,KACN1c,QAAQ,OACRr8B,QAAS,kBAAMs4E,EAAalC,GAAkBkF,SAC9CpoB,UAAU,2BAJZ,SAMGxyE,EAAE,6B,yNC9GF66F,EAN+B,SAAC,GAAmC,IAAD,IAAhCC,kBAAgC,MAAnB,GAAmB,EAAZv7E,EAAY,iBAC/E,OACE,cAAC,IAAD,aAAiBw7E,YAAa,cAAC,KAAD,eAAWD,IAAgBE,SAAS,kBAAkBC,WAAW,OAAU17E,K,OCTvG27E,E,KAAyB35F,EAAOU,IAAV,woGAOV,qBAAG8zC,MAAkBolD,KAAKx4C,cACxB,qBAAG5M,MAAkB2M,OAAOK,cACnC,qBAAGhN,MAAkB2M,OAAO3V,QAKvB,qBAAGgJ,MAAkB2M,OAAO2tB,SAC1B,qBAAGt6B,MAAkB2M,OAAOK,cASnC,qBAAGhN,MAAkB2M,OAAO3V,QAOjB,qBAAGgJ,MAAkB2M,OAAOK,cAKzB,qBAAGhN,MAAkB2M,OAAOK,cAe/B,qBAAGhN,MAAkB2M,OAAOmW,WAe5B,qBAAG9iB,MAAkB2M,OAAO04C,iBAO5B,qBAAGrlD,MAAkB2M,OAAO24C,aAQ5B,qBAAGtlD,MAAkB2M,OAAO24C,aA2BrCC,EAJU,WACvB,OAAO,cAACJ,EAAD,CAAwBn/E,GAAG,qB,QCzFrBw/E,EAf+B,SAACh8E,GAC7C,IAAQvf,EAAMC,cAAND,EAER,OACE,cAAC,EAAD,aACEw7F,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAa37F,EAAE,QACfi7F,WAAW,OACP17E,M,4ICRJ6wD,EAAc7uE,YAAOgvE,KAAPhvE,CAAH,0EAKXq6F,EAAer6F,IAAOU,IAAV,sFAEd,qBAAG8zC,MAAkByE,aAAaC,MAgCvBohD,EAtBsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDvjC,SAAyD,IAA7BD,mBAA6B,MAAf,SAAe,EAC/F,EAAoC36D,mBAAS,IAA7C,mBAAOo+F,EAAP,KAAmBC,EAAnB,KAEQh8F,EAAMC,cAAND,EAEFi8F,EAAoBl8E,mBACxB,kBAAMm8E,KAAS,SAAC10B,GAAD,OAA4Cs0B,EAAiBt0B,KAAI,OAChF,CAACs0B,IAQH,OACE,cAACF,EAAD,UACE,cAACxrB,EAAD,CAAarwE,MAAOg8F,EAAYxjC,SAPnB,SAACiP,GAChBw0B,EAAcx0B,EAAEC,OAAO1nE,OACvBk8F,EAAkBz0B,IAKoClP,YAAat4D,EAAEs4D,S,o+9LC1B1D,SAAS6jC,IACtB,IAAQ57F,EAAY2uE,cAAZ3uE,QACF8hB,EAAWC,cACXo6B,EAAkBC,cAGlBvlB,EAAQwU,cACR7Y,EAAiBuZ,cAGvBzQ,cAEA,IAAMs8D,EAAYlpB,cAmDlB,OC3Ea,SAAqBmtB,EAAsBnhC,GAAuC,IAAjBohC,IAAgB,yDACxFC,EAAgB37F,mBAGtB1C,qBAAU,WACRq+F,EAAcv7F,QAAUq7F,IACvB,CAACA,IAGJn+F,qBAAU,WACR,SAASs+F,IACP,IAAQx7F,EAAYu7F,EAAZv7F,QACJA,GACFA,IAIJ,GAAc,OAAVk6D,EAAgB,CACdohC,GAASE,IACb,IAAMxgF,EAAK6gC,YAAY2/C,EAAMthC,GAC7B,OAAO,kBAAMne,cAAc/gC,OAG5B,CAACk/C,EAAOohC,IDUXG,CAR8Bx9F,uBAAY,WACnC09C,GACLp9C,OAAOC,KAAK63B,GAAO53B,SAAQ,SAAC4zB,GAAD,OACzB+kE,EAAU/kE,GAAKkX,OAAM,SAACrpB,GAAD,OAAWC,QAAQmnB,MAAM,+BAAgCpnB,WAE/E,CAACk3E,EAAWz7C,EAAiBtlB,IAGG72B,EAAU,IAAiB,MAG9DtC,qBAAU,WACRqB,OAAOC,KAAK63B,GAAO53B,SAAQ,SAACszB,GAC1B,IAAM4Y,EAAOtU,EAAMtE,GACd4Y,EAAK3qC,SAAY2qC,EAAKlZ,kBAAqBkZ,EAAKzqB,OACnDk3E,EAAUrlE,GAASwX,OAAM,SAACrpB,GAAD,OAAWC,QAAQmnB,MAAM,4BAA6BpnB,WAGlF,CAACoB,EAAU81E,EAAW53F,EAAS62B,IAGlCn5B,qBAAU,WACRqB,OAAOC,KAAKszB,KAAuBrzB,SAAQ,SAACszB,GAC1C,IAAM4Y,EAAOtU,EAAMtE,GACd4Y,IAAUA,EAAK3qC,SAAY2qC,EAAKlZ,kBAAqBkZ,EAAKzqB,QAC7Dk3E,EAAUrlE,GAASwX,OAAM,SAACrpB,GAAD,OAAWC,QAAQmnB,MAAM,4BAA6BpnB,WAGlF,CAACoB,EAAU81E,EAAW53F,EAAS62B,IAGlCn5B,qBAAU,WACRqB,OAAOC,KAAK63B,GAAO53B,SAAQ,SAACszB,GAC1B,IAAM4Y,EAAOtU,EAAMtE,GACnB,GAAI4Y,EAAK3qC,SAAW2qC,EAAKjZ,cAGvB,OAFac,YAAkBmY,EAAK3qC,QAAQyyB,QAASkY,EAAKjZ,cAAce,UAGtE,KAAKC,IAAeC,KAClB,MAAM,IAAItzB,MAAM,8BAElB,KAAKqzB,IAAegpE,MACpB,KAAKhpE,IAAeipE,MACpB,KAAKjpE,IAAekpE,MAClBt6E,EAAS8R,YAAiBrB,UAIjC,CAACzQ,EAAU+U,EAAOrE,IAEd,K,6FEvET,SAAS6pE,EAAWC,EAAavrE,GAC/B,OALYwrE,EAKAD,EAAMxrE,KAAKiO,MAAMjO,KAAK0rE,SAAW1rE,KAAKC,IAAI,EAAGA,EAAMurE,IAJxD,IAAIztD,SAAQ,SAACy+C,GAAD,OAAaxyC,WAAWwyC,EAASiP,MADtD,IAAcA,EAWP,IAAME,EAAb,kDACE,aAAe,uCACP,aAFV,sBAAoC58F,QASvB68F,EAAb,wIAAoC78F,Q,gECKpC,WACEg+C,EACA8+C,EACAC,GAHF,qBAAAj/F,EAAA,6DAKEgjB,QAAQmnB,MAAM,iBAAkB+V,EAAmB8+C,EAAOC,GAL5D,kBAU6C/+C,EAAkB10B,UACzDwzE,EAAMh2E,KAAI,SAACk2E,GAAD,MAAS,CAACA,EAAI33F,QAAS23F,EAAIx0D,cAX3C,mCAUKy0D,EAVL,KAUyB1zE,EAVzB,6DAcIzI,QAAQmnB,MAAM,qCAAd,MAdJ,kBAiBMg1D,EAAmB55F,WAAa05F,GAjBtC,uBAkBIj8E,QAAQmnB,MAAR,gDAAuDg1D,EAAmBx9F,WAA1E,gBAA4Fs9F,IACtF,IAAIF,EAAe,gCAnB7B,iCAqBS,CAAE3nE,QAAS3L,EAAYa,YAAa6yE,EAAmB55F,aArBhE,2D,sBAyFe,SAAS04F,IACtB,IAAM95E,EAAWC,cACXvkB,EAAQykB,aAA6C,SAAC6R,GAAD,OAAOA,EAAEvL,aAE9Dw0E,EAAqBtiC,YAAYj9D,EAAM+2B,cAAe,KACpD6E,EAAiBkP,cAAjBlP,aACAn5B,EAAYH,cAAZG,QACF49C,EAAoBl8B,cACpBq7E,EAAgB58F,mBAEhB68F,EAA+Cz9E,mBAAQ,WAC3D,OAtEG,SACL09E,EACAj9F,GAEA,IAAKi9F,IAAiBj9F,EAAS,MAAO,GACtC,IAAMq0B,EAAY4oE,EAAaj9F,GAC/B,OAAKq0B,EAEEv1B,OAAOC,KAAKs1B,GAAWpgB,QAAsC,SAACsT,EAAMgN,GACzE,IAAM2oE,EAAe7oE,EAAUE,GAW/B,OATAhN,EAAKgN,GAAWz1B,OAAOC,KAAKm+F,GACzBt2E,QAAO,SAACnoB,GACP,IAAM21B,EAAiB5zB,SAAS/B,GAChC,QAAI21B,GAAkB,IACf8oE,EAAa9oE,GAAkB,KAEvCngB,QAAO,SAACkpF,EAAa58F,GACpB,OAAOswB,KAAKwrE,IAAIc,EAAa38F,SAASD,MACrCmmC,KACEnf,IACN,IAfoB,GAgEd61E,CAAoBN,EAAoB98F,KAC9C,CAAC88F,EAAoB98F,IAElBq9F,EAA+B99E,mBAAQ,WAC3C,OA3CG,SACL2U,EACA8oE,EACAh9F,EACAm5B,GAEA,OAAKn5B,GAAYm5B,EACDjF,EAAYl0B,GAIrBlB,OAAOC,KAAKi+F,GAAep2E,QAAO,SAAC2N,GACxC,IAAMH,EAAiB4oE,EAAczoE,GAE/B71B,EAAOw1B,EAAYl0B,GAASu0B,GAElC,IAAK71B,EAAM,OAAO,EAElB,IAAM4+F,EAAqBnkE,GAAgB/E,EAAiB,GAG5D,QAAI11B,EAAKi2B,qBAAuBj2B,EAAKi2B,qBAAuB2oE,MAGpD5+F,EAAKsrB,aAAetrB,EAAKsrB,YAAcszE,MAf5Bx+F,OAAOC,KAAKi+F,GAHK,GAqC7BO,CAAsBhgG,EAAM22B,YAAa8oE,EAAeh9F,EAASm5B,KACvE,CAACn5B,EAASzC,EAAM22B,YAAa8oE,EAAe7jE,IAEzCqkE,EAA6Bj+E,mBACjC,kBAAMsnB,KAAKC,UAAUu2D,EAA6Br2D,UAClD,CAACq2D,IAwEH,OArEA5/F,qBAAU,WAAO,IAAD,EACd,GAAK07B,GAAiBn5B,GAAY49C,EAAlC,CAEA,IAAM6/C,EAA6B52D,KAAKK,MAAMs2D,GAC9C,GAAgC,IAA5BC,EAAiBjhE,OAArB,CACA,IAIyD,IAJnDjU,EAAQk1E,EAAiB/2E,KAAI,SAACjoB,GAAD,OAAS0oC,YAAa1oC,MAEnDi/F,EChJK,SAAuBC,EAAYC,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAIh+F,MAAM,8BACtC,GAAI+9F,EAAMnhE,QAAUohE,EAAc,MAAO,CAACD,GAE1C,IAAME,EAAoBhtE,KAAK+zD,KAAK+Y,EAAMnhE,OAASohE,GAC7CE,EAAYjtE,KAAK+zD,KAAK+Y,EAAMnhE,OAASqhE,GAE3C,OAAO,YAAIz3D,MAAMy3D,GAAW9+F,QAAQ2nB,KAAI,SAACq3E,GAAD,OAAQJ,EAAMjyD,MAAMqyD,EAAKD,EAAWC,EAAKD,EAAYA,MDyItEE,CAAWz1E,EA/HZ,KAiIpB,IAAI,UAAAw0E,EAAcx8F,eAAd,eAAuBypB,eAAgBmP,EACzC,UAAA4jE,EAAcx8F,eAAd,mBAAuBw8F,qBAAvB,SAAsC/9F,SAAQ,SAAC+nC,GAAD,OAAOA,OAGvDllB,EACE6S,YAAyB,CACvBnM,QACAvoB,UACA20B,oBAAqBwE,KAIzB4jE,EAAcx8F,QAAU,CACtBypB,YAAamP,EACb4jE,cAAeW,EAAah3E,KAAI,SAACg2E,EAAOn5D,GACtC,MDpID,SACL06D,EADK,GAGyC,IAE1CC,EAHFC,EAC2C,EAD3CA,EAAGC,EACwC,EADxCA,QAASC,EAC+B,EAD/BA,QAEVC,GAAY,EA2BhB,MAAO,CACLC,QA1Bc,IAAI3vD,QAAJ,uCAAe,WAAOy+C,EAASC,GAAhB,eAAA5vF,EAAA,sDAC7BwgG,EAAkB5Q,EADW,cAGvB5jE,OAHuB,oBAKVu0E,IALU,cAKzBv0E,EALyB,OAMpB40E,IACHjR,EAAQ3jE,GACR40E,GAAY,GARW,2DAYrBA,EAZqB,0DAerBH,GAAK,IAAO,gBAAiB1B,EAfR,wBAgBvBnP,EAAO,EAAD,IACNgR,GAAY,EAjBW,6BAoBzBH,IApByB,yBAsBrB/B,EAAWgC,EAASC,GAtBC,iFAAf,yDA2BdG,OAAQ,WACFF,IACJA,GAAY,EACZJ,EAAgB,IAAI1B,MCgGUiC,EAAM,kB,+CAAMC,CAAW9gD,EAAmB8+C,EAAOvjE,KAAe,CAC1FglE,EAAGz3D,IACH03D,QAAS,KACTC,QAAS,OAHHG,EAAR,EAAQA,OAwCR,OAxCA,EAAgBD,QAMbt0D,MAAK,YAA6D,IAAjD9gB,EAAgD,EAAzD2L,QAAkC6pE,EAAuB,EAApC30E,YAC5B+yE,EAAcx8F,QAAU,CAAEw8F,cAAe,GAAI/yE,YAAamP,GAG1D,IAAMylE,EAAoBlB,EAAahyD,MAAM,EAAGnI,GAAOtvB,QAAe,SAACsT,EAAM24C,GAAP,OAAgB34C,EAAO24C,EAAK1jC,SAAQ,GACpGqiE,EAAmBD,EAAoBz1E,EAAWqT,OAExD3a,EACEgT,YAAuB,CACrB70B,UACA80B,QAAS2oE,EACN/xD,MAAMkzD,EAAmBC,GACzB5qF,QAA6C,SAACsT,EAAMgN,EAASlL,GAAO,IAAD,EAElE,OADA9B,EAAKgN,GAAL,UAAgBpL,EAAWE,UAA3B,QAAiC,KAC1B9B,IACN,IACLyC,YAAa20E,QAIlB70D,OAAM,SAACrpB,GACFA,aAAiB+7E,EACnB97E,QAAQmnB,MAAM,kCAAmC1O,IAGnDzY,QAAQD,MAAM,kCAAmCi8E,EAAO18F,EAASygB,GACjEoB,EACE+S,YAA8B,CAC5BrM,MAAOm0E,EACP18F,UACA20B,oBAAqBwE,SAItBqlE,UAGV,CAACx+F,EAAS49C,EAAmB/7B,EAAU27E,EAA4BrkE,IAE/D,K,2CEjLM,SAASwiE,IACtB,MAA6B97F,cAArBE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAETm5B,EAAiBkP,cAAjBlP,aAEFtX,EAAWC,cACXvkB,EAAQykB,aAAgD,SAAC6R,GAAD,OAAOA,EAAE5G,gBAEjEA,EAAe1N,mBAAQ,wBAAOvf,GAAO,UAAGzC,EAAMyC,UAAT,QAA0B,KAAK,CAACA,EAASzC,IAEpF,EAAqCw4C,cAA7Bu5B,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aAmDpB,OAjDAhyE,qBAAU,WACHuC,GAAYD,GAAYo5B,GAE7Br6B,OAAOC,KAAKkuB,GACTrG,QAAO,SAACuJ,GAAD,OArCP,SACLgJ,EACAxI,GAEA,GAAIA,EAAGK,QAAS,OAAO,EACvB,IAAKL,EAAGC,uBAAwB,OAAO,EACvC,IAAMkuE,EAAmB3lE,EAAexI,EAAGC,uBAC3C,GAAIkuE,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAIhwE,MAAOC,UAAY2B,EAAGH,WAAa,IAAO,GACtE,OAAIuuE,EAAiB,GAEZD,EAAmB,IAExBC,EAAiB,IAEZD,EAAmB,EAsBNE,CAAY7lE,EAAclM,EAAakD,OACxDnxB,SAAQ,SAACmxB,GACRpwB,EACGk/F,sBAAsB9uE,GACtB8Z,MAAK,SAACjZ,GACS,IAAD,IAATA,GACFnP,EACEkP,YAAoB,CAClB/wB,UACAmwB,OACAa,QAAS,CACPkuE,UAAWluE,EAAQkuE,UACnBl1E,YAAagH,EAAQhH,YACrBhO,gBAAiBgV,EAAQhV,gBACzB/X,KAAM+sB,EAAQ/sB,KACd+/B,OAAQhT,EAAQgT,OAChBkoB,GAAIl7B,EAAQk7B,GACZizC,gBAAiBnuE,EAAQmuE,gBACzBC,iBAAkBpuE,EAAQouE,sBAKC,IAAnBpuE,EAAQgT,OAAeyrC,EAAeH,GAElD,sBACA,eAAC,IAAD,CAAM1c,cAAc,SAApB,UACE,cAAC,KAAD,8BAAO3lC,EAAakD,UAApB,aAAO,EAAoBE,eAA3B,wBAA+CF,EAAKub,MAAM,EAAG,GAA7D,cAAqEvb,EAAKub,MAAM,GAAI,OACnF1rC,GACC,cAAC,KAAD,CAAM87C,UAAQ,EAACC,KAAMpmC,YAAewa,EAAM,cAAenwB,GAAzD,kCAON6hB,EAAS6O,YAAmB,CAAE1wB,UAASmwB,OAAMnG,YAAamP,QAG7D2Q,OAAM,SAACrpB,GACNC,QAAQD,MAAR,4CAAmD0P,GAAQ1P,WAGlE,CAACzgB,EAASD,EAASktB,EAAckM,EAActX,EAAU4tD,EAAcH,IAEnE,K,yNCxFH+vB,GAAqB,uCAAG,sBAAA3hG,EAAA,+EAC5B,IAAIkxC,SAAc,SAACy+C,GAAD,OAChBvuF,OAAOwgG,eAAe1kD,OAAQ,eAAgB,CAC5Ch9C,IAD4C,WAE1C,OAAOitC,KAAK00D,KAEd5iG,IAJ4C,SAIxC4iG,GACF10D,KAAK00D,IAAMA,EAEXlS,WATsB,2CAAH,qDAqCZmS,GAvBS,WACtB,IAAQr7C,EAAUD,eAAVC,MAER1mD,qBAAU,WACR,IAAMgiG,EAAc7kD,OAAOx8C,aAAa+yD,QAAQ2nB,MAEhD,GAAI2mB,EAAa,CACf,IAAMC,EAA0BD,IAAgB96B,IAAeG,IACzD66B,EAAwBC,QAAQzhG,IAAIy8C,OAAQ,gBAIlD,GAAI8kD,IAA4BC,EAG9B,YAFAN,KAAwBp1D,MAAK,kBAAMka,EAAMs7C,MAK3Ct7C,EAAMs7C,MAEP,CAACt7C,K,6CC7BA07C,GAAcC,aAAH,gmBA4BFD,M,oCCuBAprF,GAzDqC,SAACjV,GAAD,MAAO,CACzD,CACE4xE,MAAO5xE,EAAE,QACTugG,KAAM,WACNhkD,KAAM,+BAER,CACEq1B,MAAO5xE,EAAE,SACTugG,KAAM,YACNpC,MAAO,CACL,CACEvsB,MAAO5xE,EAAE,YACTu8C,KAAM,mCAER,CACEq1B,MAAO5xE,EAAE,aACTu8C,KAAM,0CAIZ,CACEq1B,MAAO5xE,EAAE,oBACTugG,KAAM,WACNhkD,KAAM,qCAER,CACEq1B,MAAO5xE,EAAE,iBACTugG,KAAM,WACNhkD,KAAM,oCAER,CACEq1B,MAAO5xE,EAAE,QACTugG,KAAM,WACNhkD,KAAM,0DAER,CACEq1B,MAAO5xE,EAAE,WACTugG,KAAM,aACNhkD,KAAM,uCACN/X,OAAQ,CACNuI,KAAM/sC,EAAE,OAAO26D,oBACfz7C,MAAO,YAGX,CACE0yD,MAAO5xE,EAAE,eACTugG,KAAM,UACNhkD,KAAM,0CAER,CACEq1B,MAAO5xE,EAAE,cACTugG,KAAM,WACNhkD,KAAM,2CCjBKikD,GA3BF,SAACjhF,GAAW,IAAD,EACtB,EAAgCu2B,eAAxB7yB,EAAR,EAAQA,OAAQ1I,EAAhB,EAAgBA,YACVwnD,EAAejoB,eACbzjB,EAAYhW,eAAZgW,QACR,EAA4Cp2B,eAApClD,EAAR,EAAQA,gBAAiB0B,EAAzB,EAAyBA,YAAauB,EAAtC,EAAsCA,EAEtC,OACE,cAAC,KAAD,cACEijB,OAAQA,EACR1I,YAAaA,EACbkmF,YAAa1jG,EAAgBwnD,KAC7Bm8C,MAAOl8C,KACPm8C,QAASliG,EACTsjE,aAAcA,EAAat+D,WAC3Bm9F,MAAO3rF,GAAOjV,GACdq2B,QAAS,CACPqvB,SAAQ,OAAErvB,QAAF,IAAEA,OAAF,EAAEA,EAASqvB,SACnBmW,OAAc,OAAPxlC,QAAO,IAAPA,OAAA,EAAAA,EAAS0vB,KAAT,iCAA+B1vB,EAAQ0vB,WAAvC,aAA+B,EAAaM,OAAO5L,SAAOj9C,EACjEqjG,YAAa,WACbC,cAAe,WACfC,UAAS,OAAC1qE,QAAD,IAACA,OAAD,EAACA,EAASqvB,YAEjBnmC,K,SC3BJyhF,G,kDACJ,WAAYzhF,GAAQ,IAAD,8BACjB,cAAMA,IACDxhB,MAAQ,CAAEkjG,UAAU,GAFR,E,sDAUnB,SAAkBhgF,GAAQ,IAAD,EACjBigF,EAAoC,mBAAfjgF,EAAMuI,KAC3B23E,EAAqC,0BAAflgF,EAAMsjC,KAC5B68C,EAAmBF,GAAsBC,EAIzCE,KAA8B,UAACjmD,OAAOs8B,QAAQ35E,aAAhB,aAAC,EAAsBsjG,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAMC,EAAS,6BAAQlmD,OAAOs8B,QAAQ35E,OAAvB,IAA8BsjG,4BAA4B,IAGzE,OAFAjmD,OAAOs8B,QAAQ6pB,aAAaD,EAAW,SACvClmD,OAAOq7B,SAAS+qB,SAIlB,MAAMvgF,I,oBAGR,WACE,IAAQggF,EAAa51D,KAAKttC,MAAlBkjG,SACAQ,EAAap2D,KAAK9rB,MAAlBkiF,SAER,OAAIR,EACKQ,EAGF,cAAC,WAAD,gBAAcp2D,KAAK9rB,W,uCAjC5B,WAEE,MAAO,CAAE0hF,UAAU,O,GARczwB,IAAMkxB,WA2C5BV,M,oBC9CTW,GAA2C,SAACpiF,GAChD,MAAwB5hB,oBAAS,GAAjC,mBAAO6sE,EAAP,KAAao3B,EAAb,KACMC,EAAe7iG,uBAAY,kBAAM4iG,GAAQ,KAAO,CAACA,IAGvD,OAFAE,aAAmBD,GAEfr3B,EAEA,qBAAKu3B,eAAgB,kBAAMH,GAAQ,IAAnC,SACE,cAAC,IAAD,gBAAoBriF,MAInB,MAGMixD,OAAMzoD,KAAK45E,I,yOCPpBK,GAAoBzgG,aAAO2wD,IAAP3wD,CAAH,wFAuER0gG,GAzDuB,SAAC,GAAiD,IAA/C/lF,EAA8C,EAA9CA,KAAMy2B,EAAwC,EAAxCA,cAAwC,IAAzBvmB,sBAAyB,MAAR,EAAQ,EAC7EpsB,EAAMC,eAAND,EACAkuC,EACNhyB,EADMgyB,aAAckE,EACpBl2B,EADoBk2B,aAActY,EAClC5d,EADkC4d,WAAYjB,EAC9C3c,EAD8C2c,IAAKI,EACnD/c,EADmD+c,kBAAmBiZ,EACtEh2B,EADsEg2B,kBAAmB1lB,EACzFtQ,EADyFsQ,SAAUoM,EACnG1c,EADmG0c,YAG/F8Z,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KAEpG0/F,EACFliG,EADmB44B,EACjB,iHACA,iFAEN,EAA+CqU,aAAWi1D,EAAgB,CAAEl1D,UAAW,iBAA/EG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,EAAoE1U,aAAWzc,EAAMkQ,GAAxE+1E,EAAb,EAAQtpE,IAAkCC,EAA1C,EAA0CA,sBAEpCspE,EAAel0D,EAAazoC,QAAb,+BAA+CyoC,EAAazoC,SAAY,QAE7F,EAA4BwjE,aAC1B,cAACzP,GAAA,EAAD,CACEvgC,kBAAmBA,EACnBiZ,kBAAmBA,EACnBrZ,IAAKA,EACL45B,UAAWzyD,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,SACpD+0B,SAAU0vC,EACV1vD,oBAAqBC,EAAc0vD,KAAK3vD,GACxCinB,mBAAoBzrB,EAAavQ,OACjCi6B,mBAAoBxlB,EAAazU,OACjC7E,sBAAuBA,EACvB1M,eAAgBA,KAXbk2E,EAAP,oBAeA,OACE,eAAC,IAAD,CAAMvuC,WAAW,SAASD,eAAe,gBAAzC,UACGzmB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAMntC,EAAjB44B,EAAmB,MAAiB,OAAzB,OACxCkB,IAAejB,EACd,cAAC,KAAD,CAAUp3B,MAAM,OAAOwyD,OAAO,SAE9B,eAAC+tC,GAAD,CAAmBjuC,WAAW,SAASz0C,QAASgjF,EAAhD,UACE,cAACrjF,GAAA,EAAD,CACEi1C,SAAS,OACT/0C,WAAY2a,EACZ/5B,MAAOoiG,EACPj/F,SAAU,EACVkc,KAAK,IACLE,QAASgjF,IAEX,cAAC,KAAD,CAAY3mD,QAAQ,OAAO0c,MAAM,KAAjC,SACE,cAAC,IAAD,CAAen5C,MAAM,aAAazd,MAAM,kBCvEvC8gG,GAAahhG,aAAOkhD,IAAPlhD,CAAH,+NAOZ,gBAAGu4B,EAAH,EAAGA,WAAH,SAAeic,MAAkB2M,OAAO5oB,EAAa,eAAiB,gBAE7E,qBAAGic,MAAkByE,aAAaC,M,+CCqBhC+nD,GAAkBjhG,aAAO2wD,IAAP3wD,CAAH,gFAOfkhG,GAAgD,SAAC,GAAuB,IAAD,EAApBvmF,EAAoB,EAApBA,KAAM9E,EAAc,EAAdA,QACrDpX,EAAMC,eAAND,EACA25B,EAAiBkP,cAAjBlP,aACR,EAGIpO,eAFFO,EADF,EACEA,iBACQM,EAFV,EAEED,KAAQC,eAIR8hB,EASEhyB,EATFgyB,aACAkE,EAQEl2B,EARFk2B,aACA1D,EAOExyB,EAPFwyB,YACA9U,EAME1d,EANF0d,WACAC,EAKE3d,EALF2d,SACAiV,EAIE5yB,EAJF4yB,aACAtyB,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACAyc,EACE1c,EADF0c,YAGIxX,EAAegxB,EAAa3sC,SAAW,GACvCi9F,EAAsBl9F,aAAWgX,GACjCmmF,EAA2Bn8F,eAC3Bo8F,KAAqB,UAACxnD,OAAOkgB,gBAAR,aAAC,EAAiB+B,YACvCwlC,EAA8B,IAAX1mF,EAEzB,EACEud,aAAiBxd,EAAMyd,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBC,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAGrF,EAA+C8S,aAC7CjtC,EAAE,gEACF,CAAEgtC,UAAW,iBAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIJ,aAAWjtC,EAAE,+CAAgD,CAAE29B,OAAQuQ,EAAavQ,SAAW,CACjGqP,UAAW,WAJA81D,EADb,EACE31D,UACS41D,EAFX,EAEE31D,QACgB41D,EAHlB,EAGE31D,eAKF,OACE,eAACm1D,GAAD,CAAiBpvC,cAAc,SAA/B,UACE,eAAC,IAAD,CAAMgH,GAAG,MAAMtG,eAAe,gBAAgBC,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMJ,OAAK,EAAX,UAAa3zD,EAAE,gBAAf,OACA,eAAC,IAAD,CAAM+zD,WAAW,aAAjB,UACGrlB,GAAeA,EAAYnV,IAAI,GAC9B,qCACE,cAACta,GAAA,EAAD,CAAS00C,OAAK,EAAC5zD,MA1BG,WAC5B,GAAI64B,EACF,OAAOr1B,aAAiBuoB,EAAkBoiB,EAAahrC,UAEzD,GAAI2/F,EAAkB,CACpB,IAAMI,EAAgC,IAAIxgG,KAAUisC,GAAarV,MAAMvN,GACvE,OAAOvoB,aAAiB0/F,EAA+B/0D,EAAahrC,UAEtE,OAAOK,aAAiBmrC,EAAaR,EAAahrC,UAkBlBggG,GAAyBhgG,SAAU,EAAGkc,KAAI,WAAM8uB,EAAavQ,UACnF,sBAAM2P,IAAKw1D,EAAX,SACE,cAAC,IAAD,CAAU5jF,MAAM,aAAazd,MAAM,OAAO67D,GAAG,MAAMlJ,GAAG,aAI1D,cAAC,KAAD,CAAU3yD,MAAM,OAAOwyD,OAAO,SAE/B+uC,GAA6BD,QAGjCj0D,GAAgBA,EAAa3V,GAAG,IAC/B,eAAC,IAAD,CAAMihC,GAAG,MAAMtG,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAMH,OAAK,EAAX,UAAa3zD,EAAE,uBAAf,OACA,cAAC,KAAD,CAAM2zD,OAAK,EAAX,mBAAgBjwD,aAAsBorC,EAAcZ,EAAahrC,SAAU,GAA3E,YAAiFgrC,EAAavQ,aAGjG5D,GACC,eAAC,IAAD,CAAMqgC,GAAG,MAAMtG,eAAe,gBAAgBC,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMJ,OAAK,EAAX,UAA8B3zD,EAAjBk6B,EAAmB,UAAe,aAA/C,OACCD,GAAmBD,EAClB,cAAC,IAAD,CAAM+5B,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMzX,UAAQ,EAACC,KAAMpmC,YAAe+jB,EAAiBL,EAAWD,EAAY,aAA5E,UACE,cAAC3a,GAAA,EAAD,CAAS00C,OAAK,EAAC5zD,MAAOo6B,EAAiBj3B,SAAU,EAAGgc,MAAM,YAC1D,cAAC,KAAD,CAAMy0C,OAAK,EAAC2J,GAAG,MAAMp+C,MAAM,UAAUg5C,cAAc,YAAnD,SACGl4D,EAAE,YAEL,cAAC,KAAD,CAAWs9D,GAAG,MAAMp+C,MAAM,iBAI9B,cAAC,KAAD,CAAUzd,MAAM,OAAOwyD,OAAO,YAInCr7B,GACC,eAAC,IAAD,CAAMwhC,GAAG,MAAMtG,eAAe,gBAAgBC,WAAW,SAAzD,UACG1mB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWwmB,OAAK,EAAlC,SACG3zD,EAAE,qBAEL,cAAC,IAAD,CAAM+zD,WAAW,SAAjB,SACG3nC,EACC,eAAC,KAAD,CAAMkxC,GAAG,MAAM3J,OAAK,EAApB,UACGvnC,EAAiB,IADpB,OAIA,cAAC,KAAD,CAAU3qB,MAAM,OAAOwyD,OAAO,cAKtC,cAAC,IAAD,CAAMmG,GAAG,MAAMtG,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcvX,KAAI,sBAAiBnK,EAAa3sC,SAAWwyD,MAAM,EAAOtE,OAAK,EAA7E,SACG3zD,EAAE,sBAGP,cAAC,IAAD,CAAMo6D,GAAG,MAAMtG,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcvX,KAAMnK,EAAa/L,YAAa4xB,MAAM,EAAOtE,OAAK,EAAhE,SACG3zD,EAAE,yBAGN0iG,GACC,cAAC,IAAD,CAAMtoC,GAAG,MAAMtG,eAAe,WAA9B,SACE,cAAC,KAAD,CACEvX,KAAI,UAAK5mC,KAAL,oBAAkCijB,EAAc+pE,EAA2BD,GAC/EzqC,MAAM,EACNtE,OAAK,EAHP,SAKG3zD,EAAE,qBAIRoX,GAAWwrF,GAAqBxhF,GAC/B,cAAC,IAAD,CAAM0yC,eAAe,WAArB,SACE,eAAC,IAAD,CACEnY,QAAQ,OACRt0B,EAAE,IACF4sC,OAAO,OACP30C,QAAS,kBAAMs8C,aAAcx6C,EAAcgxB,EAAazU,OAAQyU,EAAalvC,WAJ/E,UAME,cAAC,KAAD,CAAMgc,MAAM,UAAUg1C,SAAS,OAA/B,SACGl0D,EAAE,qBAEL,cAAC,KAAD,CAAcs9D,GAAG,iBAQdkT,OAAMzoD,KAAK06E,ICjLpBU,GAA0B5hG,aAAO2wD,IAAP3wD,CAAH,0HAyCd0wD,GAjCuB,SAAC,GAAuB,IAArB/1C,EAAoB,EAApBA,KAAM9E,EAAc,EAAdA,QACrCwhB,EAAgB1c,EAAhB0c,YACA54B,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAOg1D,EAAP,KAAmBC,EAAnB,KAEMwwC,EAAoBpjG,EAAE,wEACtBqjG,EAAkBrjG,EACtB,uGAGF,EAA+CitC,aAAWrU,EAAcyqE,EAAkBD,EAAmB,CAC3Gp2D,UAAW,WADLG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAC81D,GAAD,WACE,eAAC,IAAD,CAAMpvC,WAAW,SAAjB,UACGn7B,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCyU,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUmwB,GAAG,MAAM77D,MAAM,OAAOwyD,OAAO,OAAO/0C,MAAM,oBAGxD,cAAC,IAAD,CAAiBm0C,SAAUV,EAAYrzC,QAAS,kBAAMszC,GAAeD,IAArE,SACgB3yD,EAAb2yD,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgBz2C,KAAMA,EAAM9E,QAASA,Q,mBCzC3CksF,GANoD,SAAC/jF,GAClE,IAAMgkF,EAAe,yBAAqBv8F,KAAcI,KAAK3B,QAAxC,QAErB,OAAO,cAAC,KAAD,cAAgBswE,WAAYwtB,EAAiBvtB,aAAa,gCAAmCz2D,KCChG6a,GAAU74B,aAAOiiG,IAAPjiG,CAAH,wEACG,gBAAGu4B,EAAH,EAAGA,WAAY6oB,EAAf,EAAeA,WAAY5M,EAA3B,EAA2BA,MAA3B,OACZjc,EAAaic,EAAM2M,OAAO+gD,mBAAqB1tD,EAAM2M,OAAO0U,UAAUzU,MACvD,gBAAG5M,EAAH,EAAGA,MAAH,gBAAkBA,EAAMmhB,MAAMikC,KAA9B,YAAsCplD,EAAMmhB,MAAMikC,KAAlD,WAwDJuI,GA/CV,SAAC,GAAgG,IAA9FtxD,EAA6F,EAA7FA,aAAclE,EAA+E,EAA/EA,aAA+E,IAAjEpU,kBAAiE,aAA7ClB,mBAA6C,aAAxB+qE,iBAAwB,SAC3F3jG,EAAMC,eAAND,EACF4jG,EAAqC,SAAxBxxD,EAAazU,QAA6C,SAAxBuQ,EAAavQ,OAC5DglB,EAAaghD,EAAY,YAAc,aAyB7C,OACE,cAACvpE,GAAD,CAASN,WAAYA,EAAY6oB,WAAYA,EAA7C,SACE,eAAC,IAAD,CAAMoR,WAAW,SAASD,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMV,cAAc,SAApB,UACE,cAAC,IAAD,CAASl0C,MAAO4a,EAAa,eAAiB,OAAQu+B,MAAM,KAA5D,mBAxBGr4D,EAFL44B,EAEO,OAEPgrE,EAEO,SAGF,QAiBH,YAC4BxxD,EAAazU,UAEzC,cAAC,KAAD,CAAMze,MAAO4a,EAAa,eAAiB,aAA3C,SAhBFlB,EACK54B,EAAE,uBAEP4jG,EACK5jG,EAAE,yBAEJA,EAAE,iBAAkB,CAAE29B,OAAQuQ,EAAavQ,cAY7C/E,EACC,cAAC,GAAD,CAAyBn3B,MAAO,GAAIwyD,OAAQ,KAE5C,cAAC,KAAD,CAAgB4hB,aAAczjC,EAAc0jC,eAAgB5nC,EAAczsC,MAAO,GAAIwyD,OAAQ,W,wFChD1F4vC,GAAiB,SAACC,EAAsB3nF,EAAQy7C,GAC3D,MAAkDj6D,oBAAS,GAA3D,mBAAOomG,EAAP,KAA0BC,EAA1B,KACA,EAAqCztD,cAA7B05B,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,WACdxmC,EAAqBC,eAArBD,iBACAtpC,EAAMC,eAAND,EACFqiB,EAAW+H,eACThT,EAAY9W,eAAZ8W,QACF6sF,EAAmBzjF,YAAYrE,GAuCrC,MAAO,CAAE+nF,cArCallG,sBAAW,sBAAC,8BAAAd,EAAA,sEAE9B8lG,GAAqB,GAFS,SAGb16D,EAAiBw6D,EAAY,UAAW,CAACG,EAAiBx+F,QAASjB,KAAO2/F,UAAU95D,aAHvE,cAGxBlZ,EAHwB,gBAIRA,EAAG4xC,OAJK,OAIxBvxC,EAJwB,OAM9BnP,EAASwwB,aAAoB12B,EAAQ/E,IACjCoa,EAAQgT,QACVyrC,EACEjwE,EAAE,oBACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,0CAA2C,CAAE29B,OAAQi6B,OAG5DosC,GAAqB,KAGrBl0B,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBgkG,GAAqB,IAlBO,kDAqB9B9iF,QAAQD,MAAR,MACA6uD,EAAW9vE,EAAE,SAAUA,EAAE,uFAtBK,0DAwB/B,CACDoX,EACAiL,EACAyhF,EACAG,EACA9nF,EACAy7C,EACA53D,EACA8vE,EACAG,EACA3mC,IAGsBy6D,sBAIbK,GAAkB,SAACtc,GAC9B,MAAkDnqF,oBAAS,GAA3D,mBAAOomG,EAAP,KAA0BC,EAA1B,KACQhkG,EAAMC,eAAND,EACR,EAAqCu2C,cAA7B05B,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,WAChB3+B,EAAoBvwB,cAClB0oB,EAAqBC,eAArBD,iBACF+6D,EAAelkF,cAqBrB,MAAO,CAAE+jF,cAnBU,uCAAG,8BAAAhmG,EAAA,sEACHorC,EAAiB+6D,EAAc,UAAW,CAAClzD,EAAkB1rC,QAASjB,KAAO2/F,UAAU95D,aADpF,cACdlZ,EADc,OAEpB6yE,GAAqB,GAFD,SAGE7yE,EAAG4xC,OAHL,QAGdvxC,EAHc,QAIRgT,QACVyrC,EACEjwE,EAAE,oBACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,2CAA4C,CAAE29B,OAAQ,YAG7DmqD,IACAkc,GAAqB,KAErBl0B,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBgkG,GAAqB,IAfH,2CAAH,qDAmBKD,sBAGbO,GAA8B,WACzC,MAA8C3mG,oBAAS,GAAvD,mBAAO4mG,EAAP,KAAwBC,EAAxB,KACQptF,EAAY9W,eAAZ8W,QACFitF,EAAelkF,cACfgxB,EAAoBvwB,cAC1B,EAAwC8mE,eAAhCC,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,eAcrB,OAbA7pF,qBAAU,YACiB,uCAAG,4BAAAC,EAAA,+EAEOmmG,EAAal7D,UAAU/xB,EAAS+5B,EAAkB1rC,SAFzD,OAElB+jC,EAFkB,OAGxBg7D,EAAmBh7D,EAAiBrQ,GAAG,IAHf,gDAKxBqrE,GAAmB,GALK,yDAAH,qDASzBC,KACC,CAACrtF,EAASitF,EAAclzD,EAAmBw2C,IAEvC,CAAE4c,kBAAiBzc,mBC1Eb4c,GAzBuC,SAAC,GAAiC,IAA/BxoF,EAA8B,EAA9BA,KAA8B,IAAxBuQ,iBAAwB,SAC7EtQ,EAAuCD,EAAvCC,OAAQ+xB,EAA+BhyB,EAA/BgyB,aAAckE,EAAiBl2B,EAAjBk2B,aACtBpyC,EAAMC,eAAND,EACF2kG,EAAuB1kF,YAASiuB,EAAazoC,SAAW,IAC9D,EAA6Co+F,GAAec,EAAsBxoF,EAAQi2B,EAAazU,QAA/FumE,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACGt3E,EACC,cAAC,KAAD,CAAUhrB,MAAM,OAAOwyD,OAAO,SAE9B,cAAC,IAAD,CACExnC,UAAWs3E,EACXa,QAASb,EAAoB,cAAC,IAAD,CAAec,MAAI,EAAC3lF,MAAM,iBAAoB,KAC3Eq6C,SAAUwqC,EACVzkF,QAAS4kF,EACTziG,MAAM,OALR,SAOGzB,EAAE,eCnBP8kG,GAAavjG,aAAOgpE,KAAPhpE,CAAH,6CAuCDwjG,GAnCmD,SAAC,GAAgC,IAA9Bl8C,EAA6B,EAA7BA,YAAa4Q,EAAgB,EAAhBA,UACxEz5D,EAAMC,eAAND,EACA+1C,EAAUD,eAAVC,MAER,OACE,eAAC,KAAD,CACEiF,MAAOh7C,EAAE,oBAAqB,CAAE29B,OAAQkrB,IACxC4Q,UAAWA,EACXU,iBAAkBpkB,EAAM2M,OAAO0U,UAAU4tC,WAH3C,UAKE,cAAC,KAAD,CAAM9lF,MAAM,UAAU+4C,MAAI,EAA1B,SACGj4D,EAAE,gCAAiC,CAAE29B,OAAQkrB,MAEhD,cAAC,KAAD,CAAMuL,GAAG,OAAT,SAAiBp0D,EAAE,mDAA+C,CAAE29B,OAAQkrB,MAC5E,cAAC,KAAD,UACG7oD,EAAE,kFAA8E,CAC/E29B,OAAQkrB,MAGZ,eAAC,IAAD,CAAQuL,GAAG,OAAO/X,GAAG,IAAIC,UAAQ,EAACC,KAAK,QAAvC,UACGv8C,EAAE,OADL,IACc6oD,KAEd,cAACi8C,GAAD,CAAYvoD,KAAK,yBAAyBD,UAAQ,EAAlD,SACE,eAAC,IAAD,CAAQX,QAAQ,YAAYyY,GAAG,MAAM3yD,MAAM,OAA3C,UACGzB,EAAE,iBACH,cAAC,KAAD,CAAakf,MAAM,UAAUo+C,GAAG,aAGpC,cAAC,IAAD,CAAQ3hB,QAAQ,OAAOr8B,QAASm6C,EAAhC,SACGz5D,EAAE,sB,UCpCLilG,GAAe1jG,aAAO2vE,IAAP3vE,CAAH,8CAYH2jG,GAR2C,SAAC,GAA2B,IAAzBxnG,EAAwB,EAAxBA,SAAU4hB,EAAc,EAAdA,QACrE,OACE,cAAC2lF,GAAD,CAAc5sC,MAAM,KAAKllD,GAAG,MAAMkU,EAAE,WAAWs0B,QAAQ,WAAWr8B,QAASA,EAA3E,SACG5hB,K,oBCJDuG,GAAU,CACdumC,SAAU30B,MAGNsvF,GAAS,uCAAG,WAAOlB,EAAkBhhG,GAAzB,iCAAA/E,EAAA,6DAAiCgF,EAAjC,+BAA4C,GACtD6iB,EAAWu+B,eADD,SAEC2/C,EAAiBjhC,QAAQ,IAAIvgE,KAAUQ,GAAQE,MAAMR,KAAQS,IAAIF,IAAWrD,WAA5E,6BACZoE,IADY,IAEf8hB,cAJc,cAEVoL,EAFU,gBAMMA,EAAG4xC,OANT,cAMVvxC,EANU,yBAOTA,EAAQgT,QAPC,2CAAH,wDAUT4gE,GAAY,uCAAG,WAAOnB,EAAkBhhG,GAAzB,mBAAA/E,EAAA,6DACb6nB,EAAWu+B,eADE,SAEF2/C,EAAiBjhC,QAAQ,IAAIvgE,KAAUQ,GAAQE,MAAMyS,MAAuB/V,WAA5E,6BACZoE,IADY,IAEf8hB,cAJiB,cAEboL,EAFa,gBAMGA,EAAG4xC,OANN,cAMbvxC,EANa,yBAOZA,EAAQgT,QAPI,2CAAH,wDAkCH6gE,GAxBM,SAAClpF,GAAwC,IAAxBmpF,EAAuB,wDACrDjjF,EAAW+H,eACjB,EAAoB9pB,eAAZ8W,EAAR,EAAQA,QACFq4B,EAAqBlvB,cACrB0jF,EAAmBzjF,YAAYrE,GAE/BopF,EAAcvmG,sBAAW,uCAC7B,WAAOiE,EAAgBC,GAAvB,SAAAhF,EAAA,yDACiB,IAAXie,EADN,gCAEU0mD,aAAUpzB,EAAoB,EAAGxsC,GAF3C,kCAGaqiG,EAHb,iCAIUF,GAAanB,EAAkBhhG,GAJzC,gDAMUkiG,GAAUlB,EAAkBhhG,EAAQC,GAN9C,QAQEmf,EAAS2wB,aAAwB72B,EAAQ/E,IACzCiL,EAAS0wB,aAAkB52B,EAAQ/E,IATrC,4CAD6B,wDAY7B,CAACA,EAASiL,EAAUijF,EAAY71D,EAAoBw0D,EAAkB9nF,IAGxE,MAAO,CAAEqpF,QAASD,IC/CdE,GAAW,uCAAG,WAAOxB,EAAuBhhG,EAAgBC,GAA9C,qBAAAhF,EAAA,6DACZ6nB,EAAWu+B,eACXohD,EAAQp/D,sBAAWrjC,EAAQC,GAFf,SAID+gG,EAAiB9gC,SAASuiC,EAAM7lG,WAAY,CAC3DkmB,aALgB,cAIZoL,EAJY,gBAOIA,EAAG4xC,OAPP,cAOZvxC,EAPY,yBAQXA,EAAQgT,QARG,2CAAH,0DAWXmhE,GAAoB,uCAAG,WAAO1B,GAAP,mBAAA/lG,EAAA,6DACrB6nB,EAAWu+B,eADU,SAEV2/C,EAAiB2B,kBAAkB,CAAE7/E,aAF3B,cAErBoL,EAFqB,gBAGLA,EAAG4xC,OAHE,cAGrBvxC,EAHqB,yBAIpBA,EAAQgT,QAJY,2CAAH,sDAgCXqhE,GAzBQ,SAAC1pF,GAAqD,IAArCk6B,EAAoC,wDACpEh0B,EAAW+H,eACjB,EAAoB9pB,eAAZ8W,EAAR,EAAQA,QACFq4B,EAAqBlvB,cACrB0jF,EAAmBzjF,YAAYrE,GAE/B2pF,EAAgB9mG,sBAAW,uCAC/B,WAAOiE,EAAgBC,GAAvB,SAAAhF,EAAA,yDACiB,IAAXie,EADN,gCAEU8mD,aAAYxzB,EAAoB,EAAGxsC,GAF7C,kCAGaozC,EAHb,iCAIUsvD,GAAqB1B,GAJ/B,gDAMUwB,GAAYxB,EAAkBhhG,EAAQC,GANhD,QAQEmf,EAAS2wB,aAAwB72B,EAAQ/E,IACzCiL,EAAS0wB,aAAkB52B,EAAQ/E,IACnCiL,EAAS4wB,aAAwB92B,EAAQ/E,IAV3C,4CAD+B,wDAa/B,CAACA,EAASiL,EAAUg0B,EAAyB5G,EAAoBw0D,EAAkB9nF,IAGrF,MAAO,CAAE4pF,UAAWD,ICbhBhB,GAAavjG,aAAOgpE,KAAPhpE,CAAH,6CAIVykG,GAAqBzkG,aAAO2wD,IAAP3wD,CAAH,iDAIlB0kG,GAAmB1kG,aAAOk2D,KAAPl2D,CAAH,wIAyOP2kG,GAjO+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACAjqF,EAKI,EALJA,KACAw2B,EAII,EAJJA,oBACAR,EAGI,EAHJA,kBAGI,IAFJk0D,uBAEI,SADJ3sC,EACI,EADJA,UAEQt9C,EAAuFD,EAAvFC,OAAQ+xB,EAA+EhyB,EAA/EgyB,aAAcjV,EAAiE/c,EAAjE+c,kBAAmBJ,EAA8C3c,EAA9C2c,IAAKrM,EAAyCtQ,EAAzCsQ,SAAUsiB,EAA+B5yB,EAA/B4yB,aAAcsD,EAAiBl2B,EAAjBk2B,aACtEpyC,EAAMC,eAAND,EACA+1C,EAAUD,eAAVC,MACAyvD,EAAYH,GAAalpF,EAAQgqF,GAAjCX,QACAO,EAAcF,GAAe1pF,EAAQD,EAAKm6B,yBAA1C0vD,UACR,EAAqCxvD,cAA7B05B,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,WACtB,EAAkCnyE,oBAAS,GAA3C,mBAAO0oG,EAAP,KAAkBC,EAAlB,KACA,EAAsC3oG,mBAAS,IAA/C,mBAAO4oG,EAAP,KAAoBC,EAApB,KACA,EAAyD7oG,oBAAS,GAAlE,mBAAO8oG,EAAP,KAA6BC,EAA7B,KACA,EAA8B/oG,mBAAS,GAAvC,mBAAOgpG,EAAP,KAAgBC,EAAhB,KACA,EAAkDjpG,oBAAS,GAA3D,mBAAOkpG,EAAP,KAA0BC,EAA1B,KACMC,EAA4B,WAChC,OAAIX,EACK55E,EAASmmB,cAEX7D,EAAa3V,GAAG,IAAMuZ,EAAoBvZ,GAAG2V,GAAgBA,EAAe4D,GAE/Es0D,EAAyBhkG,aAAiB,IAAIP,KAAU8jG,GAAcr4D,EAAahrC,UACnF+jG,EAAqBb,EACvB55E,EAASmmB,cAAc0yC,GAAG2hB,GAC1Bx6E,EAASkmB,oBAAoB2yC,GAAG2hB,GAE9BE,EAAiB,IAAIzkG,KAAU8jG,GAAapjG,MAAM+uC,GAClDi1D,GAA2BD,EAAe7oE,SAAWx6B,aAAaqjG,EAAezjG,YAOjF2jG,GALoBjkD,aAAqB,CAC7CC,eAAiB8jD,EAAe7oE,QAAsC,EAA5B6oE,EAAezjG,WACzDo1B,MACAI,sBAEkC,GAAK/c,EAAK+c,kBACxCouE,GAAqBxjG,aAAaujG,GAAWA,GAAY,IAAQ,EAAI,EAAGA,GAAY,IAAQ,EAAI,GAEhGE,GAAep5D,EAAazoC,QAAb,+BAA+CyoC,EAAazoC,SAAY,QAE7FxH,qBAAU,WACJ6wC,EAAa3V,GAAG,KAAOitE,GACzBM,EAAyBM,EAAuB3E,KAAK71E,EAASmmB,eAAexZ,GAAG2V,MAEjF,CACDy3D,EACAz3D,EACAtiB,EACA0hB,EACAk4D,EACAM,EACAM,IAGF,IAWMO,GAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBV,IAA4BzjG,UAAU,KAAK40B,aAAasvE,GACjFE,EAAgBhkG,aAAsB+jG,EAAwBv5D,EAAahrC,SAAUgrC,EAAahrC,UACxGsjG,EAAekB,QAEflB,EAAe,IAEjBI,EAAWY,IAGPG,GAAkB,uCAAG,sBAAAzpG,EAAA,yDACzBooG,GAAa,GADY,UAGnBF,EAHmB,gCAKfL,EAAUQ,EAAar4D,EAAahrC,UALrB,OAMrB+sE,EAAa,GAAD,OACPjwE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnE29B,OAAQyU,EAAazU,UATJ,wCAcf6nE,EAAQe,EAAar4D,EAAahrC,UAdnB,QAerB+sE,EAAa,GAAD,OACPjwE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrD29B,OAAQuQ,EAAavQ,UAlBJ,QAsBvB2oE,GAAa,GACb7sC,IAvBuB,kDAyBvBqW,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBsmG,GAAa,GA1BU,0DAAH,qDA8BxB,OAAIO,EAEA,cAACrtC,GAAA,EAAD,CACEvgC,kBAAmBA,EACnBiZ,kBAAmBA,EACnBrZ,IAAKA,EACL45B,UAAWzyD,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,SACpD+0B,SAAU40C,GACV50D,oBAAqBlmB,EAASmmB,cAAc0vD,KAAK3vD,GACjDinB,mBAAoBzrB,EAAavQ,OACjCi6B,mBAAoBxlB,EAAazU,OACjC+7B,OAAQ,kBAAMotC,GAAqB,IACnCltC,aAAc2sC,IAMlB,eAAC,KAAD,CACE1jB,SAAS,QACT7nC,MAAyBh7C,EAAlBomG,EAAoB,UAAe,iBAC1C3sC,UAAWA,EACXU,iBAAkBpkB,EAAM2M,OAAO0U,UAAU4tC,WAJ3C,UAMGl2D,EAAa3V,GAAG,KAAOitE,GACtB,cAAC,KAAD,CAAMlnF,MAAM,YAAY+4C,MAAI,EAACmC,GAAG,OAAOz/B,MAAO,CAAEi5B,UAAW,UAAYM,SAAS,OAAhF,SACGl0D,EAAE,4CAA6C,CAC9CiD,OAAQS,aAAsBorC,EAAcZ,EAAahrC,SAAU,GACnEwiB,MAAOwoB,EAAavQ,WAI1B,eAAC,IAAD,CAAMo2B,WAAW,SAASD,eAAe,gBAAgBsG,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMnC,MAAI,EAAV,UAA8Bj4D,EAAlBomG,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMryC,WAAW,SAAS8uB,SAAS,OAAnC,UACE,cAAC,KAAD,CAAO3M,IAAG,yBAAoBhoC,EAAazoC,QAAjC,QAAgDhE,MAAO,GAAIwyD,OAAQ,GAAIh5B,IAAKiT,EAAavQ,SACnG,cAAC,KAAD,CAAM2/B,GAAG,MAAMrF,MAAI,EAAnB,SACG/pB,EAAavQ,eAIpB,cAAC,IAAD,CACE59B,MAAOwmG,EACP56C,YA/FyB,SAAC0kB,GAC9B,GAAIA,EAAO,CACT,IAAMu3B,EAAiB5kG,aAAiB,IAAIP,KAAU4tE,GAAQniC,EAAahrC,UACrE2kG,EAAax2E,KAAK04D,MAAM6d,EAAetkG,UAAUyjG,KAA6B7uE,aAAa,KAAKz0B,YACtGmjG,EAAWv1E,KAAKwrE,IAAIgL,EAAY,WAEhCjB,EAAW,GAEbJ,EAAen2B,IAwFX/V,cAAqC,IAAtBpoB,GAAA,WAA+Bi1D,GAA2B,EAA1D,QACfz/B,UAAW++B,GAAwBQ,EACnC/jG,SAAUgrC,EAAahrC,WAExBujG,GACC,cAAC,KAAD,CAAMvnF,MAAM,UAAUg1C,SAAS,OAAOv5B,MAAO,CAAEi5B,UAAW,SAAWQ,GAAG,MAAxE,SACGp0D,EAAE,wCAAyC,CAC1CiD,OAAQS,aAAsB,IAAIjB,KAAUqsC,GAAeZ,EAAahrC,SAAU,GAClFwiB,MAAOwoB,EAAavQ,WAIzBspE,GACC,cAAC,KAAD,CAAM/nF,MAAM,UAAUg1C,SAAS,OAAOv5B,MAAO,CAAEi5B,UAAW,SAAWQ,GAAG,MAAxE,SACGp0D,EAAE,gCAAiC,CAClC29B,OAAQuQ,EAAavQ,WAI3B,cAAC,KAAD,CAAM2/B,GAAG,OAAOp+C,MAAM,aAAag1C,SAAS,OAAOkG,GAAG,MAAtD,SACGp6D,EAAE,qBAAsB,CACvBwD,QAASE,aAAsBqjG,IAA6B74D,EAAahrC,cAG7E,cAAC,KAAD,CACE25F,IAAK,EACLvrE,IAAK,IACLvxB,MAAO4mG,EACPmB,eAAgBP,GAChB/9E,KAAK,QACLu+E,WAAU,UAAKpB,EAAL,KACVqB,KAAM,IAER,eAAC,IAAD,CAAMj0C,WAAW,SAASD,eAAe,gBAAgBM,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB90C,QAAS,kBAAMioF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBjoF,QAAS,kBAAMioF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBjoF,QAAS,kBAAMioF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBjoF,QAAS,kBAAMioF,GAAoB,MAArD,SAA4DvnG,EAAE,aAE9DomG,GACA,eAAC,IAAD,CAAMhyC,GAAG,OAAOL,WAAW,SAASD,eAAe,gBAAnD,UACE,eAAC,KAAD,CAAME,GAAG,MAAM90C,MAAM,aAArB,UACGlf,EAAE,+BADL,OAGA,eAACgmG,GAAD,CAAoBjyC,WAAW,SAASz0C,QAAS,kBAAMwnF,GAAqB,IAA5E,UACE,eAACb,GAAD,eAAoBoB,MACpB,cAAC,KAAD,CAAY1rD,QAAQ,OAAO0c,MAAM,KAAjC,SACE,cAAC,IAAD,CAAen5C,MAAM,aAAazd,MAAM,iBAKhD,cAAC,IAAD,CACEgrB,UAAW45E,EACXzB,QAASyB,EAAY,cAAC,IAAD,CAAexB,MAAI,EAAC3lF,MAAM,iBAAoB,KACnEI,QAASqoF,GACTpuC,UAAWgtC,GAA2C,IAA5B9nE,WAAW8nE,IAAsBE,GAAwBQ,EACnF7yC,GAAG,OALL,SAOep0D,EAAZqmG,EAAc,aAAkB,cAEjCD,GACA,cAAC,GAAD,CAAY9pD,UAAQ,EAACC,KAAM+qD,GAA3B,SACE,cAAC,IAAD,CAAQ7lG,MAAM,OAAO2yD,GAAG,MAAMzY,QAAQ,YAAtC,SACG37C,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,iBC1JvCsqE,GAhGkC,SAAC,GAO3C,IANL/rF,EAMI,EANJA,KACAw2B,EAKI,EALJA,oBACAC,EAII,EAJJA,cACAwzD,EAGI,EAHJA,UACA+B,EAEI,EAFJA,SAEI,IADJz7E,iBACI,SACIyhB,EAAwEhyB,EAAxEgyB,aAAcgE,EAA0Dh2B,EAA1Dg2B,kBAAmBpD,EAAuC5yB,EAAvC4yB,aAAchV,EAAyB5d,EAAzB4d,WAAYtN,EAAatQ,EAAbsQ,SAC3DxsB,EAAMC,eAAND,EACFmoG,EAAqB5kG,aAAiBovC,EAAezE,EAAahrC,UAClEklG,EAA2B7kG,aAC/BovC,EAAcza,aAAaga,GAC3BhE,EAAahrC,UAGf,EAAiC+lE,aAAS,cAAC,GAAD,CAAsBpgB,YAAa3a,EAAavQ,UAAnF0qE,EAAP,oBAEA,EAAyBp/B,aACvB,cAAC,GAAD,CACEk9B,UAAWA,EACXjqF,KAAMA,EACNw2B,oBAAqBA,EACrBR,kBAAmBA,KALhBo2D,EAAP,oBASA,EAA2Br/B,aACzB,cAAC,GAAD,CACEv2B,oBAAqBA,EACrByzD,UAAWA,EACXjqF,KAAMA,EACNg2B,kBAAmBA,EACnBk0D,iBAAe,KANZmC,EAAP,oBAUA,EAA+Ct7D,aAC7CjtC,EAAE,6EACF,CAAEgtC,UAAW,WAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBm7D,EAAoB15D,EAAa3V,GAAG,IAAM3M,EAASmmB,cAAcpZ,IAAIuV,GAmD3E,OAAO,cAAC,IAAD,CAAMskB,cAAc,SAApB,SAA8B3mC,EAAY,cAAC,KAAD,CAAUhrB,MAAM,OAAOwyD,OAAO,SAhDtEi0C,EACL,eAAC,IAAD,CAAMp0C,eAAe,gBAAgBC,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMX,cAAc,SAApB,SACE,qCACE,cAACn0C,GAAA,EAAD,CAASg5C,MAAI,EAAC/D,SAAS,OAAOhxD,SAAU,EAAGnD,MAAOooG,IAC3B,IAAtBj2D,GACC,cAAC,KAAD,CAAMgiB,SAAS,OAAOh1C,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACEi1C,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVnD,MAAOqoG,EACP/oF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,KAAD,CAAYu8B,QAAQ,YAAYr8B,QAASipF,EAAkBv0C,GAAG,MAA9D,SACE,cAAC,KAAD,CAAW90C,MAAM,UAAUzd,MAAM,WAElC+mG,EACC,sBAAMl7D,IAAKH,EAAX,SACE,cAAC,KAAD,CAAYwO,QAAQ,YAAY4d,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASr6C,MAAM,eAAezd,MAAM,OAAOwyD,OAAO,aAItD,cAAC,KAAD,CACEtY,QAAQ,YACRr8B,QAASozB,EAAoBvZ,GAAG,GAAKmvE,EAAiBD,EACtD9uC,SAAUz/B,EAHZ,SAKE,cAAC,IAAD,CAAS5a,MAAM,UAAUzd,MAAM,OAAOwyD,OAAO,cAIlD5mB,GAAkBD,KAGrB,cAAC,IAAD,CAAQmsB,SAAUz/B,EAAYxa,QAASozB,EAAoBvZ,GAAG,GAAKmvE,EAAiBD,EAApF,SACGroG,EAAE,cCjGLiE,GAAU,CACdumC,SAAU30B,MAGN4yF,GAAW,uCAAG,WAAOxE,GAAP,mBAAA/lG,EAAA,6DACZ6nB,EAAWu+B,eADC,SAED2/C,EAAiBjhC,QAAQ,IAAzB,6BAAmC/+D,IAAnC,IAA4C8hB,cAF3C,cAEZoL,EAFY,gBAGIA,EAAG4xC,OAHP,cAGZvxC,EAHY,yBAIXA,EAAQgT,QAJG,2CAAH,sDAOXkkE,GAAc,uCAAG,WAAOzE,GAAP,mBAAA/lG,EAAA,6DACf6nB,EAAWu+B,eADI,SAEJ2/C,EAAiBjhC,QAAjB,6BAA8B/+D,IAA9B,IAAuClE,MAAOyC,KAAUujB,cAFpD,cAEfoL,EAFe,gBAGCA,EAAG4xC,OAHJ,cAGfvxC,EAHe,yBAIdA,EAAQgT,QAJM,2CAAH,sDA4BLmkE,GArBQ,SAACxsF,GAAgC,IAAxBmpF,EAAuB,wDAC/CjjF,EAAW+H,eACjB,EAAoB9pB,eAAZ8W,EAAR,EAAQA,QACF6sF,EAAmBzjF,YAAYrE,GAC/BszB,EAAqBlvB,cAErBqoF,EAAgB5pG,sBAAW,sBAAC,sBAAAd,EAAA,yDACjB,IAAXie,EAD4B,gCAExBinD,aAAY3zB,EAAoB,GAFR,kCAGrB61D,EAHqB,iCAIxBoD,GAAezE,GAJS,gDAMxBwE,GAAYxE,GANY,QAQhC5hF,EAAS4wB,aAAwB92B,EAAQ/E,IACzCiL,EAAS0wB,aAAkB52B,EAAQ/E,IATH,4CAU/B,CAACA,EAASiL,EAAUijF,EAAY71D,EAAoBw0D,EAAkB9nF,IAEzE,MAAO,CAAE0sF,SAAUD,ICiGNE,GA/GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA52D,EAMI,EANJA,aACA62D,EAKI,EALJA,oBACA9sF,EAII,EAJJA,OACAgqF,EAGI,EAHJA,UAGI,IAFJ+C,sBAEI,SADJzvC,EACI,EADJA,UAEQz5D,EAAMC,eAAND,EACA+1C,EAAUD,eAAVC,MACR,EAAqCQ,cAA7B05B,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,WACd+4B,EAAaF,GAAexsF,EAAQgqF,GAApC0C,SACArD,EAAYH,GAAalpF,EAAQgqF,GAAjCX,QACR,EAAkC7nG,oBAAS,GAA3C,mBAAO0oG,EAAP,KAAkBC,EAAlB,KACA,EAA4C3oG,mBAASurG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+Cn8D,aAC7C,qCACE,cAAC,KAAD,CAAMmtB,GAAG,OAAT,SAAiBp6D,EAAE,mDACnB,cAAC,KAAD,UAAOA,EAAE,iDAEX,CAAEgtC,UAAW,aAAc8lB,cAAe,CAAC,GAAI,MALzC3lB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtBg8D,EAAoB,uCAAG,sBAAAnrG,EAAA,yDAC3BooG,GAAa,IAET6C,EAHuB,0CAKjB3D,EAAQwD,EAAa52D,EAAalvC,UALjB,OAMvB+sE,EAAa,GAAD,OACPjwE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAE29B,OAAQyU,EAAazU,UAE1F2oE,GAAa,GACb7sC,IAXuB,kDAavBqW,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBkhB,QAAQD,MAAR,MACAqlF,GAAa,GAfU,2DAoBjBuC,IApBiB,QAqBvB54B,EAAa,GAAD,OACPjwE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE29B,OAAQyU,EAAazU,UAEpF2oE,GAAa,GACb7sC,IA1BuB,mDA4BvBqW,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBkhB,QAAQD,MAAR,MACAqlF,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEtrD,MAAK,UAAK5I,EAAazU,OAAlB,YAA6C39B,EAAjBkpG,EAAmB,UAAe,YACnEzvC,UAAWA,EACXU,iBAAkBpkB,EAAM2M,OAAO0U,UAAU4tC,WAH3C,UAKGkE,GACC,eAAC,IAAD,CAAMp1C,eAAe,SAASC,WAAW,SAASqG,GAAG,OAArD,UACE,eAAC,IAAD,CACEQ,YAAauuC,EAAiB,EAAI,EAClC9wC,MAAM,KACN1c,QAAQ,SACRkf,YAAa,SAAC92B,GAAD,OAAWqlE,GAAmBrlE,IAJ7C,UAME,cAAC,IAAD,CAAgBsY,GAAG,SAAnB,SAA6Br8C,EAAE,cAC/B,cAAC,IAAD,CAAgBq8C,GAAG,SAAnB,SAA6Br8C,EAAE,gBAEjC,cAAC,IAAD,CAAMs9D,GAAG,OAAOhwB,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUjuB,MAAM,iBAEjBmuB,GAAkBD,KAIvB,eAAC,IAAD,CAAM0mB,eAAe,gBAAgBC,WAAW,SAASqG,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBp6D,EAAjBmpG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM/1C,cAAc,SAApB,UACE,eAAC,IAAD,WACG21C,EADH,IACsB32D,EAAazU,UAElCsrE,EAAsB,GACrB,cAAC,KAAD,CAAM/0C,SAAS,OAAOh1C,MAAM,aAA5B,oBAA8Crb,aAAaolG,GAA3D,gBAKN,cAAC,IAAD,CACE70C,GAAG,MACH90C,QAAS+pF,EACT58E,UAAW45E,EACXzB,QAASyB,EAAY,cAAC,IAAD,CAAexB,MAAI,EAAC3lF,MAAM,iBAAoB,KAJrE,SAMelf,EAAZqmG,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQ1qD,QAAQ,OAAOr8B,QAASm6C,EAAWoP,GAAG,MAA9C,SACG7oE,EAAE,sBCjDIspG,GAtEuC,SAAC,GAOhD,IANL/xD,EAMI,EANJA,SACAnF,EAKI,EALJA,aACAj2B,EAII,EAJJA,OACAgqF,EAGI,EAHJA,UACAltE,EAEI,EAFJA,kBAEI,IADJxM,iBACI,SACIzsB,EAAMC,eAAND,EACFupG,EAAsBhmG,aAAiBg0C,EAAUnF,EAAalvC,UAC9D6lG,EAAmBllG,aAAa0lG,EAAqB,EAAG,GAExDC,EAA4BjmG,aAAiBg0C,EAASrf,aAAae,GAAoBmZ,EAAalvC,UAEpG8lG,EAActlG,aAAsB6zC,EAAUnF,EAAalvC,UAC3DumG,EAAclyD,EAAS9zC,WAAa,EACpCylG,EAA4B,IAAX/sF,EAEvB,EAA2B8sD,aACzB,cAAC,GAAD,CACE8/B,iBAAkBA,EAClBC,YAAaA,EACb52D,aAAcA,EACd62D,oBAAqBO,EACrBrtF,OAAQA,EACRgqF,UAAWA,EACX+C,eAAgBA,KARbQ,EAAP,oBAYA,OACE,eAAC,IAAD,CAAM51C,eAAe,gBAAgBC,WAAW,SAASqG,GAAG,OAA5D,UACE,cAAC,IAAD,CAAMhH,cAAc,SAApB,SACG3mC,EACC,cAAC,KAAD,CAAUhrB,MAAM,OAAOwyD,OAAO,SAE9B,mCACGw1C,EACC,qCACE,cAACxqF,GAAA,EAAD,CAASg5C,MAAI,EAAC/D,SAAS,OAAOhxD,SAAU,EAAGnD,MAAOwpG,IACjDtwE,EAAoB,GACnB,cAACha,GAAA,EAAD,CACEk1C,QAAQ,SACRD,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVmc,OAAO,IACPtf,MAAOypG,EACPpqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAMg1C,SAAS,OAAOh1C,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQq6C,UAAWkwC,EAAanqF,QAASoqF,EAAzC,SACoB1pG,EAAjBkpG,EAAmB,UAAe,iBCtErCS,GAAapoG,aAAOk2D,KAAPl2D,CAAH,iDAqEDqoG,GA5DiC,SAAC,GAA6B,IAA3B1tF,EAA0B,EAA1BA,KAAMy2B,EAAoB,EAApBA,cAC/Cx2B,EAA2FD,EAA3FC,OAAQ+xB,EAAmFhyB,EAAnFgyB,aAAckE,EAAqEl2B,EAArEk2B,aAAc+D,EAAuDj6B,EAAvDi6B,QAAS/5B,EAA8CF,EAA9CE,aAAcoQ,EAAgCtQ,EAAhCsQ,SAAUyM,EAAsB/c,EAAtB+c,kBAEvEktE,EAAY/pF,IAAiB1f,KAAa2f,QACxCrc,EAAMC,eAAND,EACFmpC,GAAoB,OAAR3c,QAAQ,IAARA,OAAA,EAAAA,EAAU2c,WAAY,IAAI1mC,KAAU+pB,EAAS2c,WAAa3mC,KACtEkwC,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KACpG+0C,GAAmB,OAAR/qB,QAAQ,IAARA,OAAA,EAAAA,EAAUokB,eAAgB,IAAInuC,KAAU+pB,EAASokB,eAAiBpuC,KAC7EqnG,GAAiB1gE,EAAUhQ,GAAG,KAAOgtE,EACrC+B,EAAWv1D,EAAcxZ,GAAG,GAC5B1M,GAAaD,EAEnB,OACE,cAAC,IAAD,CAAM4mC,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGjd,GACC,qCACE,eAAC,IAAD,CAAKge,QAAQ,SAAb,UACE,cAACw1C,GAAD,CAAYzqF,MAAM,YAAYg5C,cAAc,YAAYD,MAAI,EAAC/D,SAAS,OAAtE,mBACM9hB,EAAazU,OADnB,OAGA,cAACgsE,GAAD,CAAYzqF,MAAM,aAAag5C,cAAc,YAAYD,MAAI,EAAC/D,SAAS,OAAvE,SACGl0D,EAAE,eAGP,cAAC,GAAD,CACEu3C,SAAUA,EACVnF,aAAcA,EACdj2B,OAAQA,EACR8c,kBAAmBA,EACnBktE,UAAWA,EACX15E,UAAWA,OAIjB,eAAC,IAAD,CAAK0nC,QAAQ,SAAb,UACE,eAACw1C,GAAD,CAAYzqF,MAAOgpF,EAAW,YAAc,aAAchwC,cAAc,YAAYD,MAAI,EAAC/D,SAAS,OAAlG,UACGg0C,EAAWh6D,EAAavQ,OAAS39B,EAAE,SAAU,OAEhD,cAAC2pG,GAAD,CAAYzqF,MAAOgpF,EAAW,aAAe,YAAahwC,cAAc,YAAYD,MAAI,EAAC/D,SAAS,OAAlG,SACGg0C,EAAWloG,EAAE,UAAL,UAAoBkuC,EAAavQ,aAG7CksE,EACC,cAAC,GAAD,CAAgB3tF,KAAMA,EAAMuQ,UAAWA,IAEvC,cAACq9E,GAAD,CACEr9E,UAAWA,EACXvQ,KAAMA,EACNw2B,oBAAqBA,EACrBC,cAAeA,EACfwzD,UAAWA,EACX+B,SAAUA,UCvBP6B,GArCyD,SAAC,GAAuB,IAArB7tF,EAAoB,EAApBA,KAAM9E,EAAc,EAAdA,QACvE+E,EAA6DD,EAA7DC,OAAQ+xB,EAAqDhyB,EAArDgyB,aAAckE,EAAuCl2B,EAAvCk2B,aAActY,EAAyB5d,EAAzB4d,WAAYtN,EAAatQ,EAAbsQ,SAChDxsB,EAAMC,eAAND,EACF2yC,GAAwB,OAARnmB,QAAQ,IAARA,OAAA,EAAAA,EAAUmmB,eAAgB,IAAIlwC,KAAU+pB,EAASmmB,eAAiBnwC,KAClFwnG,EAA0Br3D,EAAcxZ,GAAG,GAEjD,OACE,eAACopE,GAAD,CACEzoE,WAAYA,GAAyB,IAAX3d,EAC1B8tF,OAAQnwE,GAAc,cAAC,IAAD,CAAYowE,aAAa,eAAen9D,KAAM/sC,EAAE,cAFxE,UAIE,cAAC,GAAD,CACE2jG,UAAWqG,EACX53D,aAAcA,EACdlE,aAAcA,EACdpU,WAAYA,GAAyB,IAAX3d,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,EAAMy2B,cAAeA,IACnC,cAAC,IAAD,CAAMyhB,GAAG,OAAOhB,cAAc,SAA9B,SACGh8C,EACC,cAAC,GAAD,CAAa8E,KAAMA,EAAMy2B,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMynB,GAAG,OAAOlC,cAAc,YAAYhE,SAAS,OAAOh1C,MAAM,aAAa+4C,MAAI,EAAjF,SACGj4D,EAAE,mBAEL,cAACykD,GAAA,EAAD,YAKR,cAAC0lD,GAAD,CAAYjuF,KAAMA,EAAM9E,QAASA,QCXxBgzF,GAxB4C,SAAC,GAA2C,IAAD,IAAxC39E,iBAAwC,SAArBq7D,EAAqB,EAArBA,eACvE9nF,EAAMC,eAAND,EAER,EAA6CokG,GAAgBtc,GAArDoc,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACGt3E,EACC,cAAC,KAAD,CAAUhrB,MAAM,OAAOwyD,OAAO,SAE9B,cAAC,IAAD,CACExnC,UAAWs3E,EACXa,QAASb,EAAoB,cAAC,IAAD,CAAec,MAAI,EAAC3lF,MAAM,iBAAoB,KAC3Eq6C,SAAUwqC,EACVzkF,QAAS4kF,EACTziG,MAAM,OALR,SAOGzB,EAAE,eCIEqqG,GA5Be,SAACv9E,EAA2BH,GAAyD,IAAlCJ,EAAiC,uDAAX,OACrG,EAAgD5uB,mBAAS,MAAzD,mBAAO2sG,EAAP,KAAyBC,EAAzB,KACA,EAA8C5sG,oBAAS,GAAvD,mBAAO6sG,EAAP,KAAwBC,EAAxB,KACA,EAA4C9sG,mBAAS0zB,KAAK04D,MAAMx6D,KAAKkB,MAAQ,MAA7E,mBAAOi6E,EAAP,KAAuBC,EAAvB,KAsBA,OApBA1sG,qBAAU,WACR,IACM2sG,EADa99E,EAAoBP,EACGm+E,EACpCG,EAAwBl+E,EAAWwM,GAAG,IAAMyxE,EAAuB,EAKnEE,EAAgBluD,aAAY,WAFhC+tD,GAAkB,SAACI,GAAD,OAAiBA,EAAc,OAEH,KAShD,OARIF,GACFN,EAAoBK,GACpBH,GAAmB,KAEnBA,GAAmB,GACnB3tD,cAAcguD,IAGT,kBAAMhuD,cAAcguD,MAC1B,CAACh+E,EAAmBP,EAAqBg+E,EAAqBG,EAAgB/9E,IAE1E,CAAE69E,kBAAiBF,qB,UChBbU,GAPoD,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,iBAC5DtqG,EAAMC,eAAND,EACR,EAAiCspF,aAAeghB,GAAxC7mD,EAAR,EAAQA,KAAMomC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAErB,OAAO,cAAC,KAAD,CAAM51B,SAAS,OAAf,SAAuBl0D,EAAE,+BAAgC,CAAEirG,IAAKxnD,EAAMynD,KAAMrhB,EAAOshB,OAAQrhB,OC8DrFshB,GA3D2D,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnErrG,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QACR,EAGImU,eAHJ,IACEiB,SAAYM,EADd,EACcA,kBAAmBH,EADjC,EACiCA,WADjC,IAEER,KAAQG,EAFV,EAEUA,cAAeC,EAFzB,EAEyBA,oBAEnB++E,EAAeh/E,EAAgB,KAAO,IAC5C,EAA+C2gB,aAC7C,qCACE,cAAC,KAAD,CAAMgrB,MAAI,EAACmC,GAAG,MAAd,SACGp6D,EAAE,wBAAyB,CAAEq0D,IAAKi3C,MAErC,cAAC,KAAD,UACGtrG,EACC,sJAIN,CAAEgtC,UAAW,iBAXPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,EAA8Cg9D,GAC5CrpG,SAAS8rB,EAAmB,IAC5BH,EACAJ,GAHM+9E,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,gBAOpBe,EAAaz+E,IAAsB09E,GAAmB79E,EAAWwM,GAAG,GAGpEqyE,EAAkBp0F,GAAW0V,GAAqB09E,EAYxD,OACE,eAAC,IAAD,CACEz2C,WAAYs3C,EAAiB,aAAe,SAC5Cv3C,eAAe,gBACfV,cAAei4C,EAAiB,SAAW,MAH7C,UAKGh+D,GAAkBD,EACnB,eAAC,KAAD,CAAaE,IAAKH,EAAWwmB,OAAK,EAAlC,UACG43C,EAAa,IAAMD,EADtB,KAhBEC,EACKvrG,EAAE,iBAAiBspB,cAGnBtpB,EADLwrG,EACO,sBAEF,4CAaNA,GAAmB,cAAC,GAAD,CAAoBlB,iBAAkBA,QClBjDmB,GArC+B,SAAC,GAAyC,IAAvC9xC,EAAsC,EAAtCA,mBAAoB4sC,EAAkB,EAAlBA,YAC3DvmG,EAAMC,eAAND,EAIFsrG,EADF//E,eADFY,KAAQG,cAE2B,IAC/Bo/E,GAAajtE,WAAW8nE,IAAgB+E,EAAe,MAAM1nG,QAAQ,GAC3E,EAA+CqpC,aAC7C,qCACE,cAAC,KAAD,CAAMgrB,MAAI,EAACmC,GAAG,MAAd,SACGp6D,EAAE,wBAAyB,CAAEq0D,IAAKi3C,MAErC,cAAC,KAAD,UACGtrG,EACC,sJAIN,CAAEgtC,UAAW,cAXPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,OACE,qCACE,eAAC,IAAD,CAAM+mB,GAAG,OAAOL,WAAW,SAASD,eAAe,gBAAnD,UACGzmB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWwmB,OAAK,EAAlC,SACG3zD,EAAE,mBAEL,eAAC,KAAD,CAAMk0D,SAAS,OAAf,UACGqyC,EAAcmF,EAAY,IAD7B,IACmC/xC,QAGrC,cAAC,GAAD,QCAAsrC,GAAe1jG,aAAO2vE,IAAP3vE,CAAH,gDAIZykG,GAAqBzkG,aAAO2wD,IAAP3wD,CAAH,mDAIlB0kG,GAAmB1kG,aAAOk2D,KAAPl2D,CAAH,0IAQhBoqG,GAAc,CAClBnhE,SAAU,MAgQGohE,GA7PyC,SAAC,GAMlD,IALL1vF,EAKI,EALJA,KACA2vF,EAII,EAJJA,WACAz/E,EAGI,EAHJA,eAGI,IAFJg6E,uBAEI,SADJ3sC,EACI,EADJA,UAEMp3C,EAAW+H,eACT8jB,EAA0EhyB,EAA1EgyB,aAAckE,EAA4Dl2B,EAA5Dk2B,aAAcvZ,EAA8C3c,EAA9C2c,IAAKqZ,EAAyCh2B,EAAzCg2B,kBAAmBjZ,EAAsB/c,EAAtB+c,kBACpD7hB,EAAY9W,eAAZ8W,QACF+5B,EAAoBvwB,cAClB0oB,EAAqBC,eAArBD,iBACR,EAGI/d,eAHJ,IACEiB,SAAYM,EADd,EACcA,kBAAmBH,EADjC,EACiCA,WAC/Bf,EAFF,EAEEA,kBAEM5rB,EAAMC,eAAND,EACA+1C,EAAUD,eAAVC,MACR,EAAqCQ,cAA7B05B,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,WACtB,EAAkCnyE,oBAAS,GAA3C,mBAAO0oG,EAAP,KAAkBC,EAAlB,KACA,EAAsC3oG,mBAAS,IAA/C,mBAAO4oG,EAAP,KAAoBC,EAApB,KACA,EAA8B7oG,mBAAS,GAAvC,mBAAOgpG,EAAP,KAAgBC,EAAhB,KACA,EAAkDjpG,oBAAS,GAA3D,mBAAOkpG,EAAP,KAA0BC,EAA1B,KACQ0D,EAAoBH,GAAsBrpG,SAAS8rB,EAAmB,IAAKH,GAA3E69E,gBACFsB,EAAgBhyD,eAChBotD,EAAiB,IAAIzkG,KAAU8jG,GAAapjG,MAAM2oG,GAClD3E,EAA0B2E,EAAc3yE,GAAG,IAAMotE,EAAc1iG,aAAaqjG,EAAezjG,YAAc,GAEvG20B,GAAoBR,aAAoBjL,EAAYf,GAApDwM,gBAQFgvE,GANoBjkD,aAAqB,CAC7CC,eAAiB8jD,EAAe7oE,QAAsC,EAA5B6oE,EAAezjG,WACzDo1B,MACAI,oBACA7M,mBAEkC,GAAKlQ,EAAK+c,kBACxCouE,GAAqBxjG,aAAaujG,GAAWA,GAAY,IAAQ,EAAI,EAAGA,GAAY,IAAQ,EAAI,GAEhGE,GAAep5D,EAAazoC,QAAb,+BAA+CyoC,EAAazoC,SAAY,QAavF8hG,GAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBoE,EAAWvoG,UAAU,KAAK40B,aAAasvE,GAChEE,EAAgBhkG,aAAsB+jG,EAAwBv5D,EAAahrC,SAAUgrC,EAAahrC,UACxGsjG,EAAekB,QAEflB,EAAe,IAEjBI,EAAWY,IAGPuE,GAAgB,uCAAG,WAAOC,GAAP,2BAAA9tG,EAAA,yDACvBooG,GAAa,GACP2F,EAAuB3zE,aAAoB0zE,EAAsBpgF,GAEjEsgF,EAA8B,IAAIzpG,KAAU,MAC5C0pG,EAAkBx/E,EAAW0M,MAAM4yE,EAAqBxzE,oBACrC0zE,EAAgBzxC,IAAIwxC,GANtB,0CAUF5iE,EAAiB6H,EAAmB,mBAAe3zC,EAAWmuG,IAV5D,cAUbx6E,EAVa,iBAWGA,EAAG4xC,OAXN,SAWbvxC,EAXa,QAYPgT,SACVyrC,EACEjwE,EAAE,aACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,4DAGPsmG,GAAa,GACb7sC,IACAp3C,EAASgJ,aAAuB,CAAEjU,cArBjB,kDAwBnB04D,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBsmG,GAAa,GAzBM,2DA+BFh9D,EACf6H,EACA,WACA,CAAC86D,EAAqBxzE,kBAAkB54B,YACxC8rG,IAnCiB,eA+Bbx6E,EA/Ba,iBAqCGA,EAAG4xC,OArCN,SAqCbvxC,EArCa,QAsCPgT,SACVyrC,EACEjwE,EAAE,aACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,4DAGPsmG,GAAa,GACb7sC,IACAp3C,EAASgJ,aAAuB,CAAEjU,cA/CjB,mDAkDnB04D,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBsmG,GAAa,GAnDM,kEAAH,sDAwDhB8F,GAAa,uCAAG,WAAOJ,GAAP,iBAAA9tG,EAAA,6DACpBooG,GAAa,GADO,kBAKDh9D,EAAiB6H,EAAmB,UAAW,CAAC66D,EAAqBnsG,YAAa8rG,IALjF,cAKZx6E,EALY,gBAMIA,EAAG4xC,OANP,QAMZvxC,EANY,QAONgT,SACVyrC,EACEjwE,EAAE,WACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,8CAGPsmG,GAAa,GACb7sC,IACAp3C,EAASgJ,aAAuB,CAAEjU,cAhBlB,kDAmBlB04D,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBsmG,GAAa,GApBK,0DAAH,sDAwBbqB,GAAkB,uCAAG,4BAAAzpG,EAAA,sDACnB8tG,EAAuBhpG,aAAiB,IAAIP,KAAU8jG,GAAcr4D,EAAahrC,UACnFkjG,EAEF2F,GAAiBC,GAGjBI,GAAcJ,GAPS,2CAAH,qDAWxB,OAAInF,EAEA,cAACrtC,GAAA,EAAD,CACEvgC,kBAAmBA,EACnBiZ,kBAAmBA,EACnBrZ,IAAKA,EACL45B,UAAWzyD,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,SACpD+0B,SAAU40C,GACV50D,oBAAqBta,GAAgBiqE,KAAKwJ,GAC1ClyC,mBAAoBzrB,EAAavQ,OACjCi6B,mBAAoBxlB,EAAazU,OACjC+7B,OAAQ,kBAAMotC,GAAqB,IACnCltC,aAAc2sC,EACdn6E,eAAgBA,IAMpB,eAAC,KAAD,CACE4uB,MAAyBh7C,EAAlBomG,EAAoB,UAAe,iBAC1C3sC,UAAWA,EACXU,iBAAkBpkB,EAAM2M,OAAO0U,UAAU4tC,WAH3C,UAKE,eAAC,IAAD,CAAMjxC,WAAW,SAASD,eAAe,gBAAgBsG,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMnC,MAAI,EAAV,UAA8Bj4D,EAAlBomG,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMryC,WAAW,SAAS8uB,SAAS,OAAnC,UACE,cAAC,KAAD,CAAO3M,IAAG,yBAAoBhoC,EAAazoC,QAAjC,QAAgDhE,MAAO,GAAIwyD,OAAQ,GAAIh5B,IAAKiT,EAAavQ,SACnG,cAAC,KAAD,CAAM2/B,GAAG,MAAMrF,MAAI,EAAnB,SACG/pB,EAAavQ,eAIpB,cAAC,IAAD,CACE59B,MAAOwmG,EACP56C,YApJyB,SAAC0kB,GAC9B,GAAIA,EAAO,CACT,IAAMu3B,EAAiB,IAAInlG,KAAU4tE,GAAOn4C,aAAav1B,KAAQS,IAAI8qC,EAAahrC,WAC5E2kG,EAAax2E,KAAK04D,MAAM6d,EAAetkG,UAAUuoG,GAAY3zE,aAAa,KAAKz0B,YACrFmjG,EAAWiB,EAAa,IAAM,IAAMA,QAEpCjB,EAAW,GAEbJ,EAAen2B,IA6IX/V,cAAewxC,EAAc3yE,GAAG,IAAjB,WAA2BguE,GAA2B,EAAtD,QACfjkG,SAAUgrC,EAAahrC,WAEzB,cAAC,KAAD,CAAMkxD,GAAG,MAAMkJ,GAAG,OAAOp+C,MAAM,aAAag1C,SAAS,OAAOkG,GAAG,MAA/D,SACGp6D,EAAE,qBAAsB,CAAEwD,QAASE,aAAsBmoG,EAAY39D,EAAahrC,cAErF,cAAC,KAAD,CACE25F,IAAK,EACLvrE,IAAK,IACLvxB,MAAO4mG,EACPmB,eAAgBP,GAChB/9E,KAAK,QACLu+E,WAAU,UAAKpB,EAAL,KACVqB,KAAM,IAER,eAAC,IAAD,CAAMj0C,WAAW,SAASD,eAAe,gBAAgBM,GAAG,MAA5D,UACE,cAAC,GAAD,CAAciE,MAAM,KAAKllD,GAAG,MAAMkU,EAAE,WAAWs0B,QAAQ,WAAWr8B,QAAS,kBAAMioF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAclvC,MAAM,KAAKllD,GAAG,MAAMkU,EAAE,WAAWs0B,QAAQ,WAAWr8B,QAAS,kBAAMioF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAclvC,MAAM,KAAKllD,GAAG,MAAMkU,EAAE,WAAWs0B,QAAQ,WAAWr8B,QAAS,kBAAMioF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAclvC,MAAM,KAAKllD,GAAG,MAAMkU,EAAE,WAAWs0B,QAAQ,WAAWr8B,QAAS,kBAAMioF,GAAoB,MAArG,SACGvnG,EAAE,YAGNomG,GAAmBoE,GAClB,cAAC,GAAD,CAAY7wC,mBAAoBzrB,EAAavQ,OAAQ4oE,YAAaA,KAElEH,GACA,eAAC,IAAD,CAAMhyC,GAAG,OAAOL,WAAW,SAASD,eAAe,gBAAnD,UACE,eAAC,KAAD,CAAME,GAAG,MAAM90C,MAAM,aAArB,UACGlf,EAAE,+BADL,OAGA,eAAC,GAAD,CAAoB+zD,WAAW,SAASz0C,QAAS,kBAAMwnF,GAAqB,IAA5E,UACE,eAAC,GAAD,eAAoBO,MACpB,cAAC,KAAD,CAAY1rD,QAAQ,OAAO0c,MAAM,KAAjC,SACE,cAAC,IAAD,CAAen5C,MAAM,aAAazd,MAAM,iBAKhD,cAAC,IAAD,CACEgrB,UAAW45E,EACXzB,QAASyB,EAAY,cAAC,IAAD,CAAexB,MAAI,EAAC3lF,MAAM,iBAAoB,KACnEI,QAASqoF,GACTpuC,UAAWgtC,GAA2C,IAA5B9nE,WAAW8nE,GACrCnyC,GAAG,OALL,SAOep0D,EAAZqmG,EAAc,aAAkB,cAEjCD,GACA,cAAC,IAAD,CAAQhyC,GAAG,MAAM/X,GAAG,IAAIC,UAAQ,EAACC,KAAM+qD,GAAc3rD,QAAQ,YAA7D,SACG37C,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,eCzPrC0uE,GA1CyC,SAAC,GAAmD,IAAjDnwF,EAAgD,EAAhDA,KAAMw2B,EAA0C,EAA1CA,oBAAqBtmB,EAAqB,EAArBA,eACpF,EAGIb,eAFUoB,EADd,EACEH,SAAYG,WACZf,EAFF,EAEEA,kBAEMsiB,EAAiBhyB,EAAjBgyB,aACR,EAAiDtW,aAAoBjL,EAAYf,GAAzEwM,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB2zE,EAAgBhyD,eAChBwyD,EAAoBR,EAAc3yE,GAAG,GACvC51B,aAAiB60B,EAAgBF,aAAa4zE,GAAgB59D,EAAahrC,UAC3E,EAEJ,EAAiC+lE,aAAS,cAAC,GAAD,CAAsBpgB,YAAa3a,EAAavQ,UAAnF0qE,EAAP,oBACA,EAAyBp/B,aACvB,cAAC,GAAD,CAAiB4iC,WAAYn5D,EAAqBtmB,eAAgBA,EAAgBlQ,KAAMA,KADnFosF,EAAP,oBAGA,EAA2Br/B,aAAS,cAAC,GAAD,CAAiB4iC,WAAYzzE,EAAiBlc,KAAMA,EAAMkqF,iBAAe,KAAtGmC,EAAP,oBAEA,OACE,eAAC,IAAD,CAAMz0C,eAAe,gBAAgBC,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMX,cAAc,SAApB,UACE,cAACn0C,GAAA,EAAD,CAASi1C,SAAS,OAAO+D,MAAI,EAACl4D,MAAOo4B,EAAqBj1B,SAAU,IACpE,cAAC,KAAD,CAAMgxD,SAAS,OAAOh1C,MAAM,aAA5B,SACG4sF,EAAc3yE,GAAG,GAChB,cAACla,GAAA,EAAD,CAASlf,MAAOusG,EAAmBp4C,SAAS,OAAOh1C,MAAM,aAAahc,SAAU,EAAGmc,OAAO,IAAID,KAAK,SAEnG,cAAC,KAAD,CAAUg1C,GAAG,MAAMH,OAAQ,GAAIxyD,MAAO,UAI5C,eAAC,IAAD,WACE,cAAC,KAAD,CAAYk6C,QAAQ,YAAYr8B,QAASipF,EAAkBv0C,GAAG,MAA9D,SACE,cAAC,KAAD,CAAW90C,MAAM,UAAUzd,MAAM,WAEnC,cAAC,KAAD,CAAYk6C,QAAQ,YAAYr8B,QAASozB,EAAoBvZ,GAAG,GAAKmvE,EAAiBD,EAAtF,SACE,cAAC,IAAD,CAASnpF,MAAM,UAAUzd,MAAM,OAAOwyD,OAAO,kBCXxCs4C,GAzB6C,SAAC,GAMtD,IALLrwF,EAKI,EALJA,KACAw2B,EAII,EAJJA,oBACA85D,EAGI,EAHJA,uBACApgF,EAEI,EAFJA,eAEI,IADJK,iBACI,SACIyhB,EAAiBhyB,EAAjBgyB,aACAluC,EAAMC,eAAND,EACR,EAAiCipE,aAAS,cAAC,GAAD,CAAsBpgB,YAAa3a,EAAavQ,UAAnF0qE,EAAP,oBACA,EAAyBp/B,aACvB,cAAC,GAAD,CAAiB4iC,WAAYn5D,EAAqBx2B,KAAMA,EAAMkQ,eAAgBA,KADzEk8E,EAAP,oBAYA,OAAO,cAAC,IAAD,CAAMl1C,cAAc,SAApB,SAA8B3mC,EAAY,cAAC,KAAD,CAAUhrB,MAAM,OAAOwyD,OAAO,SAPtEu4C,EACL,cAAC,GAAD,CAAkBtwF,KAAMA,EAAMw2B,oBAAqBA,EAAqBtmB,eAAgBA,IAExF,cAAC,IAAD,CAAQ9M,QAASozB,EAAoBvZ,GAAG,GAAKmvE,EAAiBD,EAA9D,SAAuFroG,EAAE,cCxBzF2pG,GAAapoG,aAAOk2D,KAAPl2D,CAAH,mDAqDDkrG,GA5CV,SAAC,GAAiE,IAA/DvwF,EAA8D,EAA9DA,KAAMswF,EAAwD,EAAxDA,uBAAwB//E,EAAgC,EAAhCA,UAAWL,EAAqB,EAArBA,eACvC8hB,EAA2BhyB,EAA3BgyB,aAAc1hB,EAAatQ,EAAbsQ,SACdxsB,EAAMC,eAAND,EACF0yC,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KAE1G,EAA4C8hG,KAApCC,EAAR,EAAQA,gBAAiBzc,EAAzB,EAAyBA,eAEzB,OACE,cAAC,IAAD,CAAM10B,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACE,eAAC,IAAD,CAAKe,QAAQ,SAAb,UACE,eAAC,GAAD,CACEj1C,MAAOstF,EAAyB,YAAc,aAC9Ct0C,cAAc,YACdD,MAAI,EACJ/D,SAAS,OAJX,UAMGs4C,EAAyBt+D,EAAavQ,OAAS39B,EAAE,SAAU,OAE9D,cAAC,GAAD,CACEkf,MAAOstF,EAAyB,aAAe,YAC/Ct0C,cAAc,YACdD,MAAI,EACJ/D,SAAS,OAJX,SAMGs4C,EAAyBxsG,EAAE,wBAAL,UAAkCkuC,EAAavQ,aAGzE4mE,EACC,cAAC,GAAD,CACE93E,UAAWA,EACXvQ,KAAMA,EACNw2B,oBAAqBA,EACrB85D,uBAAwBA,EACxBpgF,eAAgBA,IAGlB,cAAC,GAAD,CAAqBK,UAAWA,EAAWq7D,eAAgBA,UCjBtD4kB,GA7ByD,SAAC,GAIlE,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,oBAEQ7sG,EAAMC,eAAND,EAER,EAA+CitC,aAC7C,qCACE,cAAChuB,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAO4sG,EAAezpG,SAAU,EAAG+0D,MAAI,EAAC74C,KAAK,UACtE,cAACH,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAO6sG,EAAsB1pG,SAAU,EAAG+0D,MAAI,EAAC54C,OAAO,OAC9Erf,EAAE,iCACH,cAAC,KAAD,UAAO6sG,OAET,CACE7/D,UAAW,eARPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAY5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWwmB,OAAK,EAAlC,SACE,cAAC10C,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAO4sG,UCSzBG,GAlCsB,WACnC,IAAQ9sG,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QACR,EAGImU,eAFFK,EADF,EACEA,kBADF,IAEEY,SAAYK,EAFd,EAEcA,qBAAsBF,EAFpC,EAEoCA,WAAYI,EAFhD,EAEgDA,mBAE1C++E,EAAgBhyD,eACtB,EAAiE9gB,aAC/D5hB,EACAyV,EACAF,EACAf,EACAkgF,EAAcroG,YALRy1B,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCszE,EAAiBhgF,GAAqD,IAA/B/rB,SAAS+rB,GAEhD8/E,EADqB,IAAIt9E,KAAKw9E,GACW3oG,iBAE/C,OACE,eAAC,IAAD,CAAM2vD,WAAW,SAASD,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMI,SAAS,OAAf,mBAA0Bl0D,EAAE,sBAA5B,OACCk5B,GACC,cAAC,GAAD,CACEyzE,cAAerzE,EACfszE,qBAAsBnzE,EACtBozE,oBAAqBA,QClBzBG,GAAiBzrG,aAAO0rG,IAAP1rG,CAAH,mDACJ,qBAAGkrB,UAA6B,IAAM,WAkEvCygF,GA1DiC,SAAC,GAA8B,IAA5BhxF,EAA2B,EAA3BA,KAAMixF,EAAqB,EAArBA,eAC/CntG,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QACR,EAIImU,eAJJ,IACEiB,SAAYG,EADd,EACcA,WAAuBygF,EADrC,EAC0B3gF,UAChBL,EAFV,EAEED,KAAQC,eACRR,EAHF,EAGEA,kBAGMwM,EAAoBR,aAAoBjL,EAAYf,GAApDwM,gBAEFo0E,EAAyB7/E,GAAcA,EAAWwM,GAAG,GACrD1M,GAAavQ,EAAKsQ,UAAY4gF,EAC9BnpD,EAA0B73B,GAAkBA,EAAiB,IAEnE,OAAI+gF,IAAmBX,EACd,KAIP,eAACjK,GAAD,CAAY9+E,UAAQ,EAApB,UACE,cAAC,GAAD,CACEkgF,UAAW6I,EACX5zE,aAAW,EACXwZ,aAAc59B,KAAOpN,KACrB8mC,aAAc15B,KAAOpN,OAEvB,eAAC4lG,GAAD,CAAgBvgF,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAQvQ,KAAMA,EAAMy2B,cAAeva,EAAiBhM,eAAgB63B,IACpE,cAAC,IAAD,CAAKmQ,GAAG,OAAR,SACE,cAACi5C,GAAD,MAEF,cAAC,IAAD,CAAKj5C,GAAG,MAAR,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAMA,GAAG,OAAOhB,cAAc,SAA9B,SACGh8C,EACC,cAACk2F,GAAD,CACEpxF,KAAMA,EACNswF,uBAAwBA,EACxB//E,UAAWA,EACXL,eAAgB63B,IAGlB,qCACE,cAAC,KAAD,CAAMmW,GAAG,OAAOlC,cAAc,YAAYhE,SAAS,OAAOh1C,MAAM,aAAa+4C,MAAI,EAAjF,SACGj4D,EAAE,mBAEL,cAACykD,GAAA,EAAD,YAKR,cAAC0lD,GAAD,CAAYjuF,KAAMA,EAAM9E,QAASA,Q,SCtEjCwqD,GAAYrgE,KAAOU,IAAV,yIAIX,qBAAG8zC,MAAkByE,aAAaC,MAyBvB8yD,GAnB8C,SAAC,GAA4B,IAA1BlpF,EAAyB,EAAzBA,SAAUmpF,EAAe,EAAfA,SAClEC,EAAe,SAAC94C,GAChBtwC,IAAaswC,GACf64C,EAAS74C,IAIb,OACE,eAACiN,GAAD,WACE,cAAC,KAAD,CAAYjmB,QAAQ,OAAO0c,MAAM,KAAKt8C,GAAG,oBAAoBuD,QAAS,kBAAMmuF,EAAa7zF,KAAS8zF,OAAlG,SACE,cAAC,IAAD,CAAcxuF,MAAOmF,IAAazK,KAAS8zF,KAAO,UAAY,mBAEhE,cAAC,KAAD,CAAY/xD,QAAQ,OAAO0c,MAAM,KAAKt8C,GAAG,qBAAqBuD,QAAS,kBAAMmuF,EAAa7zF,KAASiW,QAAnG,SACE,cAAC,KAAD,CAAc3Q,MAAOmF,IAAazK,KAASiW,MAAQ,UAAY,uBCzBjE89E,GAAgBpsG,KAAOU,IAAV,qIAKfw1D,MAKEm2C,GAAersG,KAAOU,IAAV,sSAWd,qBAAG8zC,MAAkByE,aAAaC,MAUhCrgB,GAAU74B,KAAOU,IAAV,8MAUT,qBAAG8zC,MAAkByE,aAAaC,MA0CvBozD,GArCQ,SAAC,GAAmF,IAAjFjqF,EAAgF,EAAhFA,WAAYkqF,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,wBAAyB1pF,EAA4B,EAA5BA,SAAU2pF,EAAkB,EAAlBA,YACtF,EAAyBC,eAAjB76E,EAAR,EAAQA,IAAK86E,EAAb,EAAaA,QACLluG,EAAMC,eAAND,EAEFmuG,EAAiB,cAAC,GAAD,CAAY9pF,SAAUA,EAAUmpF,SAAU,SAAC74C,GAAD,OAAoBq5C,EAAYr5C,MAE3Fy5C,EACJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAYxzC,YAAaszC,EAAU,EAAI,EAAG71C,MAAM,KAAK1c,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgBU,GAAIkuB,KAAM7d,GAAE,UAAKt5B,GAAjC,SACGpzB,EAAE,UAEL,cAAC,KAAD,CAAiBwqE,KAAMujC,EAAvB,SACE,cAAC,IAAD,CAAgBhyF,GAAG,wBAAwBsgC,GAAIkuB,KAAM7d,GAAE,UAAKt5B,EAAL,YAAvD,SACGpzB,EAAE,qBAOPquG,EACJ,eAACV,GAAD,WACE,cAAC,KAAD,CAAQ5yC,QAASn3C,EAAY20C,SAAU,kBAAMu1C,GAAelqF,IAAay0C,MAAM,OAC/E,eAAC,KAAD,eAAQr4D,EAAE,qBAId,OACE,eAAC4tG,GAAD,WACGO,EACAE,EACAD,MChEDE,GAAU/sG,KAAOU,IAAV,+GACS,qBAAG8zC,MAAkB2M,OAAO+gD,sBAsHnC8K,GAhHiC,SAAC,GAAqC,IAAnC90C,EAAkC,EAAlCA,UAAW+0C,EAAuB,EAAvBA,iBACpDxuG,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QACA2+B,EAAUD,eAAVC,MACR,EAAqCQ,cAA7Bu5B,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aACd9+B,EAAoBvwB,cAC1B,EAAkCjjB,oBAAS,GAA3C,mBAAO0oG,EAAP,KAAkBC,EAAlB,KACA,EAII/6E,eAHFS,EADF,EACEA,0BACAE,EAFF,EAEEA,wBACQG,EAHV,EAGEF,KAAQE,QAEFid,EAAqBC,eAArBD,iBACFwiE,EAAgBhyD,eAChB20D,EAAmBpiF,EAAU,IAC7BqiF,EAAsBnrG,aAAiB2oB,EAAyB,IAEhEyiF,EAA8B5uF,mBAAQ,WAC1C,OAAO,IAAItd,KAAUupB,GAA2BkM,aAAa4zE,KAC5D,CAACA,EAAe9/E,IAEb4iF,EAAyBD,EAA4Bp1E,IAAI,GACzDs1E,IAAuB7iF,GAA4BA,EAA0BuN,IAAI,GACjFu1E,EAAwBF,EAAyBrrG,aAAiBorG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuBtrG,aAAiByoB,EAA2B,IAAM,EAErG,EAA+CihB,aAAW,cAACuhE,EAAD,CAAkBn6C,IAAKhoC,IAAa,CAC5F2gB,UAAW,SACXgiE,eAAgB,CAAEC,MAAO,MAFnB9hE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBs6D,EAAkB,uCAAG,8BAAAzpG,EAAA,6DACzBooG,GAAa,GADY,kBAGNh9D,EAAiB6H,EAAmB,eAAW3zC,EAAW,CAAEgtC,SAAU,MAHhE,cAGjBrZ,EAHiB,gBAIDA,EAAG4xC,OAJF,QAIjBvxC,EAJiB,QAKXgT,SACVyrC,EACEjwE,EAAE,qBACF,cAAC06C,GAAA,EAAD,CAAwB0B,OAAQ5qB,EAAQmuE,gBAAxC,SACG3/F,EAAE,gDAGPsmG,GAAa,GACb7sC,KAbqB,kDAgBvBqW,EAAW9vE,EAAE,SAAUA,EAAE,uFACzBsmG,GAAa,GAjBU,0DAAH,qDAqBxB,OACE,eAAC,KAAD,CAAOtrD,MAAOh7C,EAAE,gBAAiBy5D,UAAWA,EAAWU,iBAAkBpkB,EAAM2M,OAAO0U,UAAU4tC,WAAhG,UACG33D,GAAkBD,EACnB,eAAC,IAAD,CAAM2mB,WAAW,aAAaD,eAAe,gBAA7C,UACE,cAAC,KAAD,UAAO9zD,EAAE,uBACT,eAAC,IAAD,CAAMozD,cAAc,SAApB,UACE,cAACn0C,GAAA,EAAD,CAASg5C,MAAI,EAACl4D,MAAOgvG,EAAqB7rG,SAAU,EAAGkc,KAAK,UAC5D,cAAC,KAAD,CAAM80C,SAAS,OAAOh1C,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACEi1C,SAAS,OACTh1C,MAAM,aACNnf,MAAO+uG,EACP5rG,SAAU,EACVkc,KAAK,OACLC,OAAO,cAKf,cAACivF,GAAD,IACA,eAAC,IAAD,CAAMv6C,WAAW,SAASD,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMI,SAAS,OAAOh1C,MAAM,aAA5B,SACGlf,EAAE,8BAEL,cAACif,GAAA,EAAD,CAASC,MAAM,aAAanf,MAAO2uG,EAAqBtvF,KAAK,aAE/D,eAAC,IAAD,CAAM20C,WAAW,SAASD,eAAe,gBAAgBsG,GAAG,OAA5D,UACE,cAAC,KAAD,CAAMlG,SAAS,OAAOh1C,MAAM,aAA5B,SACGlf,EAAE,YAEL,eAAC,KAAD,CAAMk0D,SAAS,OAAOh1C,MAAM,aAA5B,UACGuvF,EADH,UAIDr3F,EACC,cAAC,IAAD,CACEqV,UAAW45E,EACX9sC,UAAWu1C,IAA0BC,IAAwB1iF,EAC7Du4E,QAASyB,EAAY,cAAC,IAAD,CAAexB,MAAI,EAAC3lF,MAAM,iBAAoB,KACnEI,QAASqoF,EACTvtC,GAAG,OACHr+C,GAAG,wBANL,SAQe/b,EAAZqmG,EAAc,aAAkB,aAGnC,cAAC5hD,GAAA,EAAD,CAAqB2V,GAAG,SAE1B,eAAC,IAAD,CAAMtG,eAAe,SAASC,WAAW,SAAzC,UACE,cAAC,KAAD,CAAMG,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAa80C,GAAG,MAAjD,SACGh0D,EAAE,uBAEL,sBAAMstC,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUjuB,MAAM,wBC/GpBqjF,GAAahhG,aAAOkhD,IAAPlhD,CAAH,gGAGZ,qBAAGw0C,MAAkByE,aAAaC,MA+FvBy0D,GA1FI,WACjB,IAAQlvG,EAAMC,eAAND,EACR,EAGIurB,eAFFS,EADF,EACEA,0BACQK,EAFV,EAEEF,KAAQE,QAEJy/E,EAAgBhyD,eAEhB60D,EAA8B5uF,mBAAQ,WAC1C,OAAO,IAAItd,KAAUupB,GAA2BkM,aAAa4zE,KAC5D,CAACA,EAAe9/E,IAEb4iF,EAAyBD,EAA4Bp1E,IAAI,GACzDs1E,IAAuB7iF,GAA4BA,EAA0BuN,IAAI,GACjFu1E,EAAwBF,EAAyBrrG,aAAiBorG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuBtrG,aAAiByoB,EAA2B,IAAM,EAE/FwiF,EAAmB,SAAC,GAAD,IAAGn6C,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAM+F,GAAG,OAAT,SAAiBp6D,EAAE,8EACnB,cAAC,KAAD,CAAMo6D,GAAG,OAAT,SACGp6D,EACC,yJAGJ,cAAC,KAAD,CAAM26B,MAAO,CAAEw0E,WAAY,QAA3B,SACGnvG,EAAE,yEAA0E,CAAEq0D,IAAKA,EAAM,YAKhG,EAA+B4U,aAAS,cAAC,GAAD,CAAaulC,iBAAkBA,KAAhEY,EAAP,oBAEA,EAA+CniE,aAAW,cAACuhE,EAAD,CAAkBn6C,IAAKhoC,IAAa,CAC5F2gB,UAAW,aACX8lB,cAAe,CAAC,GAAI,MAFd3lB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMgmB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMW,WAAW,SAASqG,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMlG,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAa80C,GAAG,MAAjD,SACGh0D,EAAE,sBAEL,cAAC,IAAD,CAAKstC,IAAKH,EAAV,SACE,cAAC,IAAD,CAAUjuB,MAAM,sBAItB,eAAC,IAAD,CAAM60C,WAAW,SAASD,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMV,cAAc,SAASY,GAAG,OAAhC,UACE,cAAC,IAAD,UACG66C,EACC,cAAC5vF,GAAA,EAAD,CAASi1C,SAAS,OAAO+D,MAAI,EAACl4D,MAAOgvG,EAAqB7rG,SAAU,IAEpE,cAAC,KAAD,CAAU+wD,OAAQ,GAAIxyD,MAAO,GAAI24D,GAAG,UAGvCw0C,EACC,cAAC3vF,GAAA,EAAD,CACEi1C,SAAS,OACTh1C,MAAM,aACNnf,MAAO+uG,EACP5rG,SAAU,EACVkc,KAAK,OACLC,OAAO,MAGT,cAAC,KAAD,CAAU40C,OAAQ,GAAIxyD,MAAO,QAGjC,cAAC,IAAD,CACE83D,UAAWu1C,IAA0BC,IAAwB1iF,EAC7D/M,QAAS8vF,EACT/2C,MAAM,KACNt8C,GAAG,wBAJL,SAMG/b,EAAE,uBC3GXqvG,GAAa9tG,aAAOk2D,KAAPl2D,CAAH,oFAEZ,qBAAGw0C,MAAkByE,aAAak8B,MAKhCouB,GAAavjG,aAAOgpE,KAAPhpE,CAAH,kLAQZ,qBAAGw0C,MAAkByE,aAAaC,MAmBvB60D,GAdI,WACjB,IAAQtvG,EAAMC,eAAND,EACR,OACE,cAAC,GAAD,CAAYs8C,UAAQ,EAACC,KAAK,0DAA1B,SACE,eAAC,IAAD,CAAQgX,GAAI,CAAC,OAAQ,KAAM,KAAM,KAAM,QAAS5X,QAAQ,SAAxD,UACE,cAAC0zD,GAAD,CAAYnwF,MAAM,gBAAgB+4C,MAAI,EAAC/D,SAAS,OAAhD,SACGl0D,EAAE,UAEL,cAAC,IAAD,CAAUkf,MAAM,gBAAgBo+C,GAAI,CAAC,KAAM,KAAM,KAAM,EAAG,e,UC9B5DiyC,GAAWhuG,KAAOU,IAAV,uJAUDutG,GAAcjuG,aAAO2wD,IAAP3wD,CAAH,6IAIpBk2D,MAKW83C,MCNTE,GAAaluG,aAAOguG,GAAPhuG,CAAH,uJAIZ,qBAAGw0C,MAAkByE,aAAaC,MA8DvBi1D,GAxD2B,SAAC,GAAc,IAAZxzF,EAAW,EAAXA,KACnClc,EAAMC,eAAND,EACA2vG,EAAaC,eAAbD,SACAxzF,EAA0ED,EAA1EC,OAAQ+xB,EAAkEhyB,EAAlEgyB,aAAckE,EAAoDl2B,EAApDk2B,aAAc5lB,EAAsCtQ,EAAtCsQ,SAAUsN,EAA4B5d,EAA5B4d,WAAYlB,EAAgB1c,EAAhB0c,YAEpDjM,EACVpB,eADFiB,SAAYG,WAERkjF,EAAiBljF,GAAcA,EAAWwM,GAAG,GAE7CwgC,EAAqBzrB,EAAavQ,OAClCi6B,EAAqBxlB,EAAazU,OAGlCuqE,IADwB,OAAR17E,QAAQ,IAARA,OAAA,EAAAA,EAAUmmB,eAAgB,IAAIlwC,KAAU+pB,EAASmmB,eAAiBnwC,MACzD22B,GAAG,GAC5B0pE,EAA8B,IAAX1mF,EAEnB2zF,EAAgBl3E,EAAci3E,EAAiB3H,EAEjDltD,EAAK,UAAMh7C,EAAE,QAAR,YAAmB43D,GACxBuS,EAAQ,UAAMnqE,EAAE,SAAR,YAAoB25D,GAC1Bo2C,EAA0B,IAAX5zF,GAA4B,IAAXA,IAAiBwzF,EAUvD,OARI/2E,GACFoiB,EAAQh7C,EAAE,aACVmqE,EAAWnqE,EAAE,wBACJ6iG,IACT7nD,EAAQh7C,EAAE,eACVmqE,EAAQ,UAAMnqE,EAAE,QAAR,iBAAwBA,EAAE,SAASk6E,oBAAnC,UAIR,eAACu1B,GAAD,CAAYnjB,KAAK,OAAjB,UACG1zD,EACC,cAAC,GAAD,CAAyBo7B,GAAG,MAAMvyD,MAAO,GAAIwyD,OAAQ,KAErD,cAAC,KAAD,CAAgB4hB,aAAczjC,EAAc0jC,eAAgB5nC,EAAc8lB,GAAG,MAAMvyD,MAAO,GAAIwyD,OAAQ,KAExG,eAACu7C,GAAD,WACGM,GACC,cAAC,KAAD,CAAM57C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAO4a,EAAa,UAAY,YAAao+B,cAAc,YAAtF,SACGl4D,EAAE,YAGP,cAAC,KAAD,CAAMi4D,MAAO03C,EAAUh8C,MAAOg8C,EAA9B,SACG30D,IAEF+0D,GACC,cAAC,KAAD,CAAM77C,SAAS,OAAOh1C,MAAM,aAA5B,SACGirD,WCvDPslC,GAAaluG,aAAOguG,GAAPhuG,CAAH,iFAEZ,qBAAGw0C,MAAkByE,aAAaC,MAsFvBu1D,GAjFmC,SAAC,GAAuC,IAArC9zF,EAAoC,EAApCA,KAAM9E,EAA8B,EAA9BA,QAAS6T,EAAqB,EAArBA,eAC1DjrB,EAAMC,eAAND,EACA2vG,EAAaC,eAAbD,SACAxzF,EAAoED,EAApEC,OAAQi2B,EAA4Dl2B,EAA5Dk2B,aAAch2B,EAA8CF,EAA9CE,aAAcoQ,EAAgCtQ,EAAhCsQ,SAAUyM,EAAsB/c,EAAtB+c,kBAChD4pE,EAA8B,IAAX1mF,EAEnBo7B,GAAmB,OAAR/qB,QAAQ,IAARA,OAAA,EAAAA,EAAUokB,eAAgB,IAAInuC,KAAU+pB,EAASokB,eAAiBpuC,KAC7E+mG,EAAsBhmG,aAAiBg0C,EAAUnF,EAAalvC,UAC9DsmG,EAA4BjmG,aAAiBg0C,EAASrf,aAAae,GAAoBmZ,EAAalvC,UACpGumG,EAAcryF,GAAWmgC,EAASpe,GAAG,GACrC6vE,EAActlG,aAAsB6zC,EAAUnF,EAAalvC,UAC3D6lG,EAAmBllG,aAAa0lG,EAAqB,EAAG,GACxDpD,EAAY/pF,IAAiB1f,KAAa2f,QAE1C4zF,EAAYjwG,EAAE,iBAAkB,CAAEq6D,MAAOjoB,EAAazU,SAE5D,EAA2BsrC,aACzB,cAAC,GAAD,CACE8/B,iBAAkBA,EAClBC,YAAaA,EACb52D,aAAcA,EACd62D,oBAAqBO,EACrBrtF,OAAQA,EACRgqF,UAAWA,EACX+C,eAAgBrG,KARb6G,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYpd,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACGq8C,KAEDhlF,GAAkB7T,EAClB,cAAC,KAAD,CAAU3V,MAAM,OAAOwyD,OAAO,SAE9B,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKD,GAAG,MAAMC,OAAO,OAAO30C,QAASmqF,EAhBrB,SAACjxC,GAC3BA,EAAM84B,kBACNoY,UAcmFlsG,EAAzE,UACE,cAACyhB,GAAA,EAAD,CACEm1C,GAAG,MACH6D,MAAO03C,EACPz7C,SAAUy7C,EAAW,OAAS,OAC9BzwF,MAAOuqF,EAAc,UAAY,eACjCvmG,SAAUumG,EAAc,EAAI,EAC5B1pG,MAAO0pG,EAAcF,EAAsB,IAE5CE,EACC,mCACGxwE,EAAoB,GACnB,cAACha,GAAA,EAAD,CACEk1C,QAAQ,SACRD,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVmc,OAAO,IACPtf,MAAOypG,EACPpqF,KAAK,WAKX,cAAC,KAAD,CAAMg1C,GAAG,MAAMF,SAAS,OAAOh1C,MAAM,eAArC,gC,iECnFZgxF,GAAoB3uG,aAAO2wD,IAAP3wD,CAAH,oEAoER4uG,GAvDiB,SAAC,GAAqE,IAAnEj0F,EAAkE,EAAlEA,KAAMk0F,EAA4D,EAA5DA,SAAUz9D,EAAkD,EAAlDA,cAAkD,IAAnCvmB,sBAAmC,MAAlB,EAAkB,EAAZ7M,EAAY,mBAC3F2uB,EAAgGhyB,EAAhGgyB,aAAckE,EAAkFl2B,EAAlFk2B,aAActY,EAAoE5d,EAApE4d,WAAYb,EAAwD/c,EAAxD+c,kBAAmBiZ,EAAqCh2B,EAArCg2B,kBAAmB1lB,EAAkBtQ,EAAlBsQ,SAAUqM,EAAQ3c,EAAR2c,IACxF74B,EAAMC,eAAND,EAER,EAAoE24B,aAAWzc,EAAMkQ,GAAxE+1E,EAAb,EAAQtpE,IAAkCC,EAA1C,EAA0CA,sBAEpC4Z,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KAEpG4/F,EAAel0D,EAAazoC,QAAb,+BAA+CyoC,EAAazoC,SAAY,QAE7F,EAA4BwjE,aAC1B,cAACzP,GAAA,EAAD,CACEvgC,kBAAmBA,EACnBiZ,kBAAmBA,EACnBQ,oBAAqBC,EAAc0vD,KAAK3vD,GACxC7Z,IAAKA,EACL8gC,mBAAoBzrB,EAAavQ,OACjC80B,UAAWzyD,EAAE,eAAgB,CAAE29B,OAAQuQ,EAAavQ,SACpD+0B,SAAU0vC,EACVxqC,mBAAoBxlB,EAAazU,OACjC7E,sBAAuBA,EACvB1M,eAAgBA,KAXbk2E,EAAP,oBAeM+N,EAAe,SAAC73C,GACpBA,EAAM84B,kBACNgR,KAGF,OACE,cAAC4N,GAAD,2BAAmBn8C,WAAW,SAASD,eAAe,iBAAoBv0C,GAA1E,aACG4iF,GAA+BroE,EAC9B,qCACE,cAAC7a,GAAA,EAAD,CACEK,QAAS+wF,EACTn8C,SAAS,OACT/0C,WAAY2a,EACZ/5B,MAAO+5B,EAAa,EAAIqoE,EACxBj/F,SAAU,EACVkc,KAAK,OAEL0a,GAAcs2E,GACd,cAAC,IAAD,CAAQ9wF,QAAS+wF,EAAc10D,QAAQ,OAAOl6C,MAAM,OAAOwyD,OAAO,OAAOryD,QAAQ,MAAMy3F,WAAW,MAAlG,SACE,cAAC,IAAD,CAAen6E,MAAM,aAAazd,MAAM,cAK9C,cAAC,KAAD,CAAUA,MAAM,OAAOwyD,OAAO,aC3DhCw7C,GAAaluG,aAAOguG,GAAPhuG,CAAH,sFAEZ,qBAAGw0C,MAAkByE,aAAayU,MAuBvBqhD,GAlByB,SAAC,GAAc,IAAZp0F,EAAW,EAAXA,KACjClc,EAAMC,eAAND,EACA2vG,EAAaC,eAAbD,SACAnjF,EAAatQ,EAAbsQ,SACFmmB,GAAwB,OAARnmB,QAAQ,IAARA,OAAA,EAAAA,EAAUmmB,eAAgB,IAAIlwC,KAAU+pB,EAASmmB,eAAiBnwC,KAExF,OACE,cAAC,GAAD,CAAY8pF,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACG5zD,EAAE,SAEL,cAAC,GAAD,CAAKkc,KAAMA,EAAMy2B,cAAeA,EAAey9D,UAAWT,UClB5DF,GAAaluG,aAAOguG,GAAPhuG,CAAH,mDAwCDgvG,GApCyC,SAAC,GAAc,IAAZr0F,EAAW,EAAXA,KACjDlc,EAAMC,eAAND,EACAmc,EAAmDD,EAAnDC,OAAQ+xB,EAA2ChyB,EAA3CgyB,aAAcQ,EAA6BxyB,EAA7BwyB,YAAa9V,EAAgB1c,EAAhB0c,YACnC9M,EAAqBP,eAArBO,iBAEF+2E,EAA8B,IAAX1mF,EAEnBq0F,EAAqBzwF,mBAAQ,WACjC,GAAI6Y,EACF,OAAOr1B,aAAiBuoB,EAAkBoiB,EAAahrC,UAEzD,GAAI2/F,EAAkB,CACpB,IAAMI,EAAgC,IAAIxgG,KAAUisC,GAAarV,MAAMvN,GACvE,OAAOvoB,aAAiB0/F,EAA+B/0D,EAAahrC,UAEtE,OAAOK,aAAiBmrC,EAAaR,EAAahrC,YACjD,CAAC01B,EAAa9M,EAAkB+2E,EAAkBn0D,EAAaR,EAAahrC,WAE/E,OACE,cAAC,GAAD,CAAYopF,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACG5zD,EAAE,kBAEJ0uC,GAAeA,EAAYnV,IAAI,GAC9B,cAAC,IAAD,CAAM06B,OAAO,OAAOF,WAAW,SAA/B,SACE,cAAC90C,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAOywG,EAAoBttG,SAAU,EAAGkc,KAAI,WAAM8uB,EAAavQ,YAG1F,cAAC,KAAD,CAAUl8B,MAAM,OAAOwyD,OAAO,eCjClCw7C,GAAaluG,aAAOguG,GAAPhuG,CAAH,mDAqDDkvG,GAjD+B,SAAC,GAAc,IAAZv0F,EAAW,EAAXA,KACvCC,EAA0DD,EAA1DC,OAAQuyB,EAAkDxyB,EAAlDwyB,YAAa9U,EAAqC1d,EAArC0d,WAAYC,EAAyB3d,EAAzB2d,SAAUC,EAAe5d,EAAf4d,WAC3CH,EAAiBkP,cAAjBlP,aACA35B,EAAMC,eAAND,EAER,EACE05B,aAAiBxd,EAAMyd,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBC,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/EypE,EAAwB,IAAXznF,EAEbu0F,EAAe32E,EACnB,eAAC,IAAD,CAAMg6B,WAAW,SAAjB,UACE,eAAC,IAAD,CAAM+G,KAAK,MAAX,UACE,cAAC77C,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAOo6B,EAAiBj3B,SAAU,IAC3D,cAAC,KAAD,CAAMo6D,GAAG,MAAMpF,cAAc,YAA7B,SACGl4D,EAAE,eAGP,cAAC,IAAD,CAAM86D,KAAK,IAAX,SACE,cAAC,KAAD,CACExe,UAAQ,EACRC,KAAMpmC,YAAe+jB,EAAiBL,EAAWD,EAAY,aAC7Dta,QAAS,SAACkoD,GAAD,OAAOA,EAAE8pB,mBAHpB,SAKE,cAAC,KAAD,CAAWh0B,GAAG,eAKpB,cAAC,KAAD,gBAOIqzC,IADuBjiE,EAAYvV,GAAG,KAAOQ,IAAkBM,IAAoBD,KAC7C4pE,IAAe9pE,EAC3D,OACE,cAAC,GAAD,CAAYwyD,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACiD5zD,EAA9Ck6B,IAAmBH,EAA6B,UAAe,eAEjE42E,EAAc,cAAC,KAAD,CAAUlvG,MAAM,OAAOwyD,OAAO,SAAYy8C,QCnD3DjB,GAAaluG,aAAOguG,GAAPhuG,CAAH,6PAOZ,qBAAGw0C,MAAkByE,aAAayU,MAOhC2hD,GAAYrvG,aAAOsvG,IAAPtvG,CAAH,mEACA,qBAAGuvG,QAAyB,iBAAmB,eAkB/CP,GAd0C,SAAC,GAAgC,IAA9Bl9C,EAA6B,EAA7BA,SAAU09C,EAAmB,EAAnBA,aAC5D/wG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYssF,KAAK,OAAjB,UACGykB,GACC,cAAC,KAAD,CAAM7xF,MAAM,UAAU+4C,MAAI,EAA1B,SACcj4D,EAAXqzD,EAAa,OAAY,aAG9B,cAACu9C,GAAD,CAAW1xF,MAAM,UAAU4xF,QAASz9C,QCrC7B29C,GAAkBzvG,KAAOU,IAAV,yUAEN,qBAAG8zC,MAAkB2M,OAAO2tB,SAM9C,qBAAGt6B,MAAkByE,aAAaC,MAIxB,qBAAG7hB,YAAiC,QAAU,UAIxD,qBAAGmd,MAAkByE,aAAay2D,MAMzBC,GAAe3vG,KAAOU,IAAV,wEAKZkvG,GAAgB5vG,KAAOU,IAAV,4GC8FXmvG,GAzGoD,SAAC,GAO7D,IANLj1F,EAMI,EANJA,OACAC,EAKI,EALJA,aACAg2B,EAII,EAJJA,aACA5lB,EAGI,EAHJA,SACAvB,EAEI,EAFJA,eACAgO,EACI,EADJA,kBAEQj5B,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QAEFmgC,GAAmB,OAAR/qB,QAAQ,IAARA,OAAA,EAAAA,EAAUokB,eAAgB,IAAInuC,KAAU+pB,EAASokB,eAAiBpuC,KAC7E+mG,EAAsBhmG,aAAiBg0C,EAAUnF,EAAalvC,UAC9DsmG,EAA4BjmG,aAAiBg0C,EAASrf,aAAae,GAAoBmZ,EAAalvC,UACpGumG,EAAclyD,EAASpe,GAAG,GAC1B6vE,EAActlG,aAAsB6zC,EAAUnF,EAAalvC,UAC3D6lG,EAAmBllG,aAAa0lG,EAAqB,EAAG,GACxDL,EAA4B,IAAX/sF,EACjBgqF,EAAY/pF,IAAiB1f,KAAa2f,QAEhD,EAA2B4sD,aACzB,cAAC,GAAD,CACE8/B,iBAAkBA,EAClBC,YAAaA,EACb52D,aAAcA,EACd62D,oBAAqBO,EACrBrtF,OAAQA,EACRgqF,UAAWA,EACX+C,eAAgBA,KARbQ,EAAP,oBAYM2H,EACJ,qCACE,eAAC,KAAD,CAAMn9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,YAAYm9B,GAAG,OAAO6b,cAAc,YAArE,UACG9lB,EAAazU,OAAQ,OAExB,cAAC,KAAD,CAAMu2B,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACGl4D,EAAE,eAKT,OAAKoX,EAYA6T,EAYH,eAAC+lF,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMr2C,KAAK,IAAI8C,GAAG,OAAOxK,cAAc,SAASk+C,UAAU,aAA1D,SACE,mCACG7H,EACC,qCACE,cAACxqF,GAAA,EAAD,CAASsyF,WAAW,IAAIt5C,MAAI,EAAC/D,SAAS,OAAOhxD,SAAU,EAAGnD,MAAOwpG,IAChEtwE,EAAoB,GACnB,cAACha,GAAA,EAAD,CACEk1C,QAAQ,SACRD,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVmc,OAAO,IACPtf,MAAOypG,EACPpqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAMg1C,SAAS,OAAOh1C,MAAM,eAA5B,0BAOR,cAAC,IAAD,CAAQq6C,UAAWkwC,EAAanqF,QAASoqF,EAAzC,SACoB1pG,EAAjBkpG,EAAmB,UAAe,mBAzCvC,eAAC8H,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU1vG,MAAO,IAAKwyD,OAAO,OAAO6uB,UAAW,UAfnD,eAACkuB,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQ53C,UAAQ,EAAhB,SAAmCv5D,EAAjBkpG,EAAmB,UAAe,oBC9CxDsI,GAAoBjwG,KAAOU,IAAV,iDA+ORwvG,GAtO6C,SAAC,GAA8B,IAA5Bv1F,EAA2B,EAA3BA,KAAM+O,EAAqB,EAArBA,eAEjE9O,EASED,EATFC,OACA+xB,EAQEhyB,EARFgyB,aACAkE,EAOEl2B,EAPFk2B,aACAtD,EAME5yB,EANF4yB,aACAhV,EAKE5d,EALF4d,WACA1d,EAIEF,EAJFE,aACAoQ,EAGEtQ,EAHFsQ,SACA0lB,EAEEh2B,EAFFg2B,kBACAtZ,EACE1c,EADF0c,YAEM54B,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QAEFutF,EAAuB1kF,YAASiuB,EAAazoC,SAAW,IAC9D,EAAuFo+F,GACrFc,EACAxoF,EACAi2B,EAAazU,QAHQ+zE,EAAvB,EAAQxN,cAAqDyN,EAA7D,EAA0C5N,kBAM1C,EAA4CO,KAApCC,EAAR,EAAQA,gBAAiBzc,EAAzB,EAAyBA,eACzB,EACEsc,GAAgBtc,GADK8pB,EAAvB,EAAQ1N,cAAsD2N,EAA9D,EAA2C9N,kBAGrCG,EAAgBtrE,EAAcg5E,EAAqBF,EACnD3N,EAAoBnrE,EAAci5E,EAAyBF,EAE3DxL,EAAY/pF,IAAiB1f,KAAa2f,QAC1C8sB,GAAoB,OAAR3c,QAAQ,IAARA,OAAA,EAAAA,EAAU2c,WAAY,IAAI1mC,KAAU+pB,EAAS2c,WAAa3mC,KACtEmwC,GAAwB,OAARnmB,QAAQ,IAARA,OAAA,EAAAA,EAAUmmB,eAAgB,IAAIlwC,KAAU+pB,EAASmmB,eAAiBnwC,KAClFsvG,GAAyBl5E,GAAe+Z,EAAcxZ,GAAG,GAEzDuZ,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KAEpG2lG,EAAqB5kG,aAAiBovC,EAAezE,EAAahrC,UAClEklG,EAA2B7kG,aAC/BovC,EAAcza,aAAaga,GAC3BhE,EAAahrC,UAGf,EAGIqoB,eAFUoB,EADd,EACEH,SAAYG,WACZf,EAFF,EAEEA,kBAGF,EAAiDgM,aAAoBjL,EAAYf,GAAzEwM,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB45E,EAAkBplF,GAAcA,EAAWwM,GAAG,GAC9C64E,EAAoBp5E,GAAem5E,EACnCE,EAAwB1uG,aAAiB60B,EAAgBF,aAAaga,GAAoBhE,EAAahrC,UAEvG2mG,EAAgBjxE,GAAe2rE,GAAmBp7D,EAAUhQ,GAAG,KAAOgtE,EAE5E,EAAiCl9B,aAAS,cAAC,GAAD,CAAsBpgB,YAAa3a,EAAavQ,UAAnF0qE,EAAP,oBAEA,EAAyBp/B,aACvB,cAAC,GAAD,CACEk9B,UAAWA,EACXjqF,KAAMA,EACNw2B,oBAAqBA,EACrBR,kBAAmBA,KALhBo2D,EAAP,oBASA,EAA8Br/B,aAAS,cAAC,GAAD,CAAiB4iC,WAAYn5D,EAAqBx2B,KAAMA,KAAxFg2F,EAAP,oBAEA,EAA2BjpC,aACzB,cAAC,GAAD,CACEv2B,oBAAqBA,EACrByzD,UAAWA,EACXjqF,KAAMA,EACNg2B,kBAAmBA,EACnBk0D,iBAAe,KANZmC,GAAP,oBAUA,GAAgCt/B,aAAS,cAAC,GAAD,CAAiB4iC,WAAYzzE,EAAiBlc,KAAMA,EAAMkqF,iBAAe,KAA3G+L,GAAP,qBAEM3M,GAAU,WACV5sE,EACFs5E,IAEA5J,KAYJ,GAA+Cr7D,aAC7CjtC,EAAE,wEACF,CAAEgtC,UAAW,WAFPG,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtBm7D,GAAoB15D,EAAa3V,GAAG,IAAM3M,EAASmmB,cAAcpZ,IAAIuV,GAE3E,OAAK13B,EAeA6T,EAeD4+E,EAEA,eAACmH,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMh9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACGl4D,EAAE,mBAGP,cAACmxG,GAAD,UACE,cAAC,IAAD,CAAQ1vG,MAAM,OAAO83D,SAAUwqC,EAAmBzkF,QAAS4kF,EAAevoD,QAAQ,YAAlF,SACG37C,EAAE,iBAQT8xG,GAAyBE,EAEzB,eAAChB,GAAD,CAAiBp4E,YAAaA,EAA9B,UACE,eAACs4E,GAAD,WACE,eAAC,KAAD,CAAMh9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,YAAYm9B,GAAG,OAAO6b,cAAc,YAArE,UACGhqB,EAAavQ,OAAQ,OAExB,cAAC,KAAD,CAAMu2B,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACiBl4D,EAAd44B,EAAgB,uBAA4B,eAGjD,eAACu4E,GAAD,WACE,eAAC,IAAD,CAAMr2C,KAAK,IAAI8C,GAAG,OAAOxK,cAAc,SAASk+C,UAAU,aAA1D,UACE,cAACryF,GAAA,EAAD,CACEsyF,WAAW,IACXt5C,MAAI,EACJ/D,SAAS,OACThxD,SAAU,EACVnD,MAAO64B,EAAcT,EAAsBgwE,IAE7C,cAAClpF,GAAA,EAAD,CACEi1C,SAAS,OACTC,QAAQ,SACRj1C,MAAM,aACNhc,SAAU,EACVnD,MAAO64B,EAAcq5E,EAAwB7J,EAC7ChpF,KAAK,OACLC,OAAO,SAGX,eAACmyF,GAAD,WACE,cAAC,KAAD,CAAY71D,QAAQ,YAAYr8B,QA9FxB,WACZsZ,EACFu5E,KAEA5J,MA0F0Dv0C,GAAG,MAAvD,SACE,cAAC,KAAD,CAAW90C,MAAM,UAAUzd,MAAM,WAElC+mG,GACC,sBAAMl7D,IAAKH,GAAX,SACE,cAAC,KAAD,CAAYwO,QAAQ,YAAY4d,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASr6C,MAAM,eAAezd,MAAM,OAAOwyD,OAAO,aAItD,cAAC,KAAD,CACEtY,QAAQ,YACRr8B,QAASozB,EAAoBvZ,GAAG,GAAKqsE,GAAU6C,EAC/C9uC,SAAUz/B,EAHZ,SAKE,cAAC,IAAD,CAAS5a,MAAM,UAAUzd,MAAM,cAIpC4rC,IAAkBD,SAOzB,eAAC4jE,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAMh9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,YAAYm9B,GAAG,OAAO6b,cAAc,YAArE,UACGl4D,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMk0D,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACGhqB,EAAavQ,YAGlB,cAACwzE,GAAD,UACE,cAAC,IAAD,CACE1vG,MAAM,OACN6d,QAASozB,EAAoBvZ,GAAG,GAAKqsE,GAAU6C,EAC/C1sD,QAAQ,YACR4d,SAAUz/B,EAJZ,SAMG95B,EAAE,gBAxGP,eAACgxG,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMh9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACGl4D,EAAE,qBAGP,cAACmxG,GAAD,UACE,cAAC,KAAD,CAAU1vG,MAAO,IAAKwyD,OAAO,OAAO6uB,UAAW,UAtBnD,eAACkuB,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMh9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAam9B,GAAG,OAAO6b,cAAc,YAAtE,SACGl4D,EAAE,qBAGP,cAACmxG,GAAD,UACE,cAAC1sD,GAAA,EAAD,CAAqBhjD,MAAM,eCrBtB2wG,GAxG4D,SAAC,GAA2C,IAAzCnnF,EAAwC,EAAxCA,eAAgBgO,EAAwB,EAAxBA,kBACpFj5B,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QAER,EAIImU,eAJJ,IACEiB,SAAYK,EADd,EACcA,qBAAsBF,EADpC,EACoCA,WAClCf,EAFF,EAEEA,kBACQQ,EAHV,EAGED,KAAQC,eAEV,EAAiE4M,aAC/D5hB,EACAyV,EACAF,EACAf,EACAqN,GALMC,EAAR,EAAQA,gBAQFqwE,EARN,EAAyBjwE,kBASnBkwE,EATN,EAA4C/vE,iBAUtCgwE,EAAcvwE,EAEpB,EAA+C+T,aAC7CjtC,EAAE,gEACF,CAAEgtC,UAAW,iBAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBgkE,EACJ,cAAC,KAAD,CAAMn9C,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,YAAYm9B,GAAG,OAAO6b,cAAc,YAArE,SACGl4D,EAAE,wBAIP,OAAKoX,EAWA6T,EAYH,eAAC+lF,GAAD,CAAiBp4E,aAAW,EAA5B,UACE,cAACs4E,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMr2C,KAAK,IAAI8C,GAAG,OAAOxK,cAAc,SAASk+C,UAAU,aAA1D,SACE,mCACG7H,EACC,qCACE,cAACxqF,GAAA,EAAD,CAASsyF,WAAW,IAAIt5C,MAAI,EAAC/D,SAAS,OAAOhxD,SAAU,EAAGnD,MAAOwpG,IAChEtwE,EAAoB,GACnB,cAACha,GAAA,EAAD,CACEk1C,QAAQ,SACRD,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVmc,OAAO,IACPtf,MAAOypG,EACPpqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAMg1C,SAAS,OAAOh1C,MAAM,eAA5B,0BAOR,eAAC,IAAD,CAAM47C,KAAK,MAAM1H,cAAc,SAASk+C,UAAU,aAAav9C,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0Bs3C,gBAAc,IACxC,eAAC,IAAD,CAAMjxC,GAAG,MAAMtG,eAAe,gBAAgBC,WAAW,SAAzD,UACG1mB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWwmB,OAAK,EAAlC,SACG3zD,EAAE,qBAEL,cAAC,IAAD,CAAM+zD,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMuJ,GAAG,MAAM3J,OAAK,EAApB,UACGvnC,EAAiB,IADpB,qBAhDR,eAAC4kF,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU1vG,MAAO,IAAKwyD,OAAO,OAAO6uB,UAAW,UAdnD,eAACkuB,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,IAAD,sBCnBJkB,GAAkB15C,aAAH,yGASf25C,GAAoB35C,aAAH,yGASjB45C,GAAoBhxG,KAAOU,IAAV,iQACR,qBAAGoxD,SAEVq9B,aADI,2EAEA2hB,IAEJ3hB,aAJI,2EAKA4hB,OAGI,qBAAGv8D,MAAkB2M,OAAOO,YAMxC,qBAAGlN,MAAkByE,aAAawU,MAMhCgiD,GAAkBzvG,KAAOU,IAAV,uLAIjB,qBAAG8zC,MAAkByE,aAAaC,MAyBhC+3D,GAAcjxG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGw0C,MAAkByE,aAAawU,MAwMvByjD,GAlMiC,SAAC,GAA8D,IAAD,EAA3Dr7F,EAA2D,EAA3DA,QAAS8E,EAAkD,EAAlDA,KAAM+O,EAA4C,EAA5CA,eAAgBooC,EAA4B,EAA5BA,SAAUq/C,EAAkB,EAAlBA,YAExFv2F,EAUED,EAVFC,OACA+xB,EASEhyB,EATFgyB,aACAkE,EAQEl2B,EARFk2B,aACA1D,EAOExyB,EAPFwyB,YACA9U,EAME1d,EANF0d,WACAC,EAKE3d,EALF2d,SACAiV,EAIE5yB,EAJF4yB,aACAtyB,EAGEN,EAHFM,gBACAgQ,EAEEtQ,EAFFsQ,SACAoM,EACE1c,EADF0c,YAEM54B,EAAMC,eAAND,EACF0iG,EAAsBl9F,aAAWgX,GACjCmmF,EAA2Bn8F,eACzBmzB,EAAiBkP,cAAjBlP,aACAg5E,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KACd9C,GAAgB4C,GAAQC,IAAoB,IAAXz2F,EAEvC,EACEud,aAAiBxd,EAAMyd,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBC,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/EyoE,KAAqB,UAACxnD,OAAOkgB,gBAAR,aAAC,EAAiB+B,YACvCj8C,EAAegxB,EAAa3sC,SAAW,GAE7C,EAKI8lB,eAJFO,EADF,EACEA,iBACYa,EAFd,EAEEH,SAAYG,WACJP,EAHV,EAGED,KAAQC,eACRR,EAJF,EAIEA,kBAGI8mB,GAA8B,OAARlmB,QAAQ,IAARA,OAAA,EAAAA,EAAUkmB,qBAAsB,IAAIjwC,KAAU+pB,EAASkmB,qBAAuBlwC,KACpGmwC,GAAwB,OAARnmB,QAAQ,IAARA,OAAA,EAAAA,EAAUmmB,eAAgB,IAAIlwC,KAAU+pB,EAASmmB,eAAiBnwC,KAChF41B,EAAoBR,aAAoBjL,EAAYf,GAApDwM,gBACF06E,EAA0Bl6E,EAC5BR,EAAgBiqE,KAAK3vD,GACrBC,EAAc0vD,KAAK3vD,GAEjBuR,EAA0B73B,GAAkBA,EAAiB,IAC7Dy2E,EAA8B,IAAX1mF,EAazB,EAII8wB,aAAWjtC,EAAE,+CAAgD,CAAE29B,OAAQuQ,EAAavQ,SAAW,CACjGqP,UAAW,WAJA81D,EADb,EACE31D,UACS41D,EAFX,EAEE31D,QACgB41D,EAHlB,EAGE31D,eAKI+1D,EAAoBpjG,EAAE,wEACtBqjG,EAAkBrjG,EACtB,uGAGF,GAIIitC,aAAWrU,EAAcyqE,EAAkBD,EAAmB,CAChEp2D,UAAW,iBAJA+lE,GADb,GACE5lE,UACS6lE,GAFX,GAEE5lE,QACgB6lE,GAHlB,GAGE5lE,eAKI6lE,GAAcpkE,EAAa3V,GAAG,GAClC,eAAC,IAAD,CAAMihC,GAAG,MAAMtG,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAO9zD,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAU0D,aAAsBorC,EAAcZ,EAAahrC,SAAU,GAArE,YAA2EgrC,EAAavQ,aAExF,KAEEw1E,GACJl5E,GAAmBD,EACjB,eAAC,IAAD,CAAMogC,GAAG,MAAMtG,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAwB9zD,EAAjBk6B,EAAmB,UAAe,aAAzC,OACA,cAAC,IAAD,UACE,eAAC,KAAD,CAAMoiB,UAAQ,EAACC,KAAMpmC,YAAe+jB,EAAiBL,EAAWD,EAAY,aAA5E,UACE,cAAC3a,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAOo6B,EAAiBj3B,SAAU,EAAGgc,MAAM,YACpE,cAAC,KAAD,CAAMo+C,GAAG,MAAMp+C,MAAM,UAAUg5C,cAAc,YAA7C,SACGl4D,EAAE,YAEL,cAAC,KAAD,CAAWs9D,GAAG,MAAMp+C,MAAM,oBAKhC,cAAC,KAAD,CAAUzd,MAAM,OAAOwyD,OAAO,SAG5Bm/C,GACJ,eAAC,IAAD,CAAMt/C,eAAe,gBAAgBC,WAAW,SAASqG,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBp6D,EAAd44B,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CACE1c,KAAMA,EACNk0F,UAAQ,EACRz9D,cAAemgE,EACf1mF,eAAgBwM,EAAcqrB,EAA0B,OAKxDovD,GACJ,eAAC,IAAD,CAAMv/C,eAAe,gBAAgBC,WAAW,SAASqG,GAAG,MAA5D,UACE,eAAC,KAAD,CAAM8N,SAAU,CAAC,OAAQ,QAAzB,UAAmCloE,EAAE,gBAArC,OACA,eAAC,IAAD,CAAM+zD,WAAW,SAAjB,UACGrlB,GAAeA,EAAYnV,IAAI,GAC9B,qCACE,cAACta,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MA3EL,WAC5B,GAAI64B,EACF,OAAOr1B,aAAiBuoB,EAAkBoiB,EAAahrC,UAEzD,GAAI2/F,EAAkB,CACpB,IAAMI,EAAgC,IAAIxgG,KAAUisC,GAAarV,MAAMvN,GACvE,OAAOvoB,aAAiB0/F,EAA+B/0D,EAAahrC,UAEtE,OAAOK,aAAiBmrC,EAAaR,EAAahrC,UAmEVggG,GAAyBhgG,SAAU,EAAGkc,KAAI,WAAM8uB,EAAavQ,UAC7F,sBAAM2P,IAAKw1D,EAAX,SACE,cAAC,IAAD,CAAU5jF,MAAM,aAAazd,MAAM,OAAO67D,GAAG,aAIjD,cAAC,KAAD,CAAU77D,MAAM,OAAOwyD,OAAO,SAE/B+uC,GAA6BD,QAKpC,OACE,eAACwP,GAAD,CAAmBl/C,SAAUA,EAA7B,UACE,eAACm/C,GAAD,WACGU,IACCP,GAAQC,IAASQ,IACjBT,GAAQC,GAAQC,IAASQ,GAC1Bt5E,GAA4Bo5E,GAC7B,cAAC,IAAD,CAAM/4C,GAAG,MAAMtG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcvX,KAAI,sBAAiBnK,EAAa3sC,SAAWwyD,MAAM,EAAjE,SACGj4D,EAAE,sBAGP,cAAC,IAAD,CAAMo6D,GAAG,MAAMtG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcvX,KAAMnK,EAAa/L,YAAa4xB,MAAM,EAApD,SACGj4D,EAAE,yBAGN0iG,GACC,cAAC,IAAD,CAAMtoC,GAAG,MAAMtG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEvX,KAAI,UAAK5mC,KAAL,oBAAkCijB,EAAc+pE,EAA2BD,GAC/EzqC,MAAM,EAFR,SAIGj4D,EAAE,qBAIRoX,GAAWwrF,GAAqBxhF,GAC/B,cAAC,IAAD,CAAMg5C,GAAG,MAAMtG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACEnY,QAAQ,OACRt0B,EAAE,IACF4sC,OAAO,OACP30C,QAAS,kBAAMs8C,aAAcx6C,EAAcgxB,EAAazU,OAAQyU,EAAalvC,WAJ/E,UAME,cAAC,KAAD,CAAMgc,MAAM,UAAZ,SAAuBlf,EAAE,qBACzB,cAAC,KAAD,CAAcs9D,GAAG,aAItB1kC,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCq6E,IAAqBD,GACtB,sBAAM1lE,IAAKylE,GAAX,SACE,cAAC,IAAD,CAAUz1C,GAAG,MAAM77D,MAAM,OAAOwyD,OAAO,OAAO/0C,MAAM,oBAGxD,eAAC,GAAD,WACG6wF,GACC,cAAC,KAAD,CAAM37C,GAAG,MAAMgG,GAAG,OAAOl7C,MAAM,aAA/B,SACG0Z,EAAc54B,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,iBAAmDA,EAAE,SAASk6E,oBAA9D,WAGfh+D,EAAK0c,YACJ,cAAC06E,GAAD,6BAAiBp3F,GAAjB,IAAuB+O,eAAgBA,KAEvC,cAACsoF,GAAD,6BAAar3F,GAAb,IAAmB+O,eAAgBA,KAErC,cAACuoF,GAAD,CAAOt3F,KAAMA,EAAM+O,eAAgBA,WC9RrCwkF,GAAaluG,aAAOguG,GAAPhuG,CAAH,iFAEZ,qBAAGw0C,MAAkByE,aAAaC,MAKhCg5D,GAAkBlyG,KAAOU,IAAV,sDA8FNyxG,GA1F2C,SAAC,GAAuC,IAArCx3F,EAAoC,EAApCA,KAAM9E,EAA8B,EAA9BA,QAAS6T,EAAqB,EAArBA,eAClEjrB,EAAMC,eAAND,EACA2vG,EAAaC,eAAbD,SACA12E,EAAsB/c,EAAtB+c,kBAER,EAGI1N,eAHJ,IACEiB,SAAYK,EADd,EACcA,qBAAsBF,EADpC,EACoCA,WAAYI,EADhD,EACgDA,mBAC9CnB,EAFF,EAEEA,kBAEF,EAAiEoN,aAC/D5hB,EACAyV,EACAF,EACAf,EACAqN,GALMC,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCw2E,EAAYjwG,EAAE,sBACdupG,EAAsBjwE,EACtBmwE,EAAcvwE,EACdswE,EAA4B/vE,EAE5BszE,EAAiBhgF,GAAqD,IAA/B/rB,SAAS+rB,GAEhD8/E,EADqB,IAAIt9E,KAAKw9E,GACW3oG,iBAE/C,EAA+C6oC,aAC7C,qCACE,cAAChuB,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAOu5B,EAAmBp2B,SAAU,EAAG+0D,MAAI,EAAC74C,KAAK,UAC1E,cAACH,GAAA,EAAD,CAASi1C,SAAS,OAAOn0D,MAAO05B,EAAkBv2B,SAAU,EAAG+0D,MAAI,EAAC54C,OAAO,OAC1Erf,EAAE,iCACH,cAAC,KAAD,UAAO6sG,OAET,CAAE7/D,UAAW,WAPPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,OACE,cAAC,GAAD,CAAYi/C,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACGq8C,KAEDhlF,GAAkB7T,EAClB,cAAC,KAAD,CAAU3V,MAAM,OAAOwyD,OAAO,SAE9B,qCACG5mB,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK4mB,GAAG,MAAMC,OAAO,OAArB,UACE,cAACh1C,GAAA,EAAD,CACEm1C,GAAG,MACH6D,MAAO03C,EACPz7C,SAAUy7C,EAAW,OAAS,OAC9BzwF,MAAOuqF,EAAc,UAAY,eACjCvmG,SAAUumG,EAAc,EAAI,EAC5B1pG,MAAO0pG,EAAcF,EAAsB,IAE5CE,EACC,mCACGxwE,EAAoB,GACnB,cAACha,GAAA,EAAD,CACEk1C,QAAQ,SACRD,SAAS,OACTh1C,MAAM,aACNhc,SAAU,EACVmc,OAAO,IACPtf,MAAOypG,EACPpqF,KAAK,WAKX,cAAC,KAAD,CAAMg1C,GAAG,MAAMF,SAAS,OAAOh1C,MAAM,eAArC,sBAKHuqF,IAAgBkG,GACf,cAAC8D,GAAD,CAAiBnmE,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUjuB,MAAM,6BC5F5BuwF,GAAaluG,aAAOguG,GAAPhuG,CAAH,sFAEZ,qBAAGw0C,MAAkByE,aAAayU,MAmCvB0kD,GA9B6B,SAAC,GAAc,IAAZz3F,EAAW,EAAXA,KACrClc,EAAMC,eAAND,EACA2vG,EAAaC,eAAbD,SAER,EAIIpkF,eAHUoB,EADd,EACEH,SAAYG,WACJP,EAFV,EAEED,KAAQC,eACRR,EAHF,EAGEA,kBAGMwM,EAAoBR,aAAoBjL,EAAYf,GAApDwM,gBACF6rB,EAA0B73B,GAAkBA,EAAiB,IAEnE,OACE,cAAC,GAAD,CAAYkgE,KAAK,OAAjB,SACE,eAACkjB,GAAD,WACE,cAAC,KAAD,CAAMt7C,SAAS,OAAOh1C,MAAM,aAAa00C,UAAU,OAAnD,SACG5zD,EAAE,SAEL,cAAC,GAAD,CACEkc,KAAMA,EACNy2B,cAAeva,EACfhM,eAAgB63B,EAChBmsD,UAAWT,UCvBfiE,GAAYryG,KAAOU,IAAV,uGA2CA4xG,GArCyB,SAAC,GAAuC,IAArC33F,EAAoC,EAApCA,KAAM9E,EAA8B,EAA9BA,QAAS6T,EAAqB,EAArBA,eACxD,EAAqE2kF,eAA7D+C,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAAMiB,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAAMC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,SAAUC,EAAvD,EAAuDA,UACjDC,EAAiBL,GAAQC,GAAQC,EACvC,EAAgCr2G,oBAAS,GAAzC,mBAAO01D,EAAP,KAAiB+gD,EAAjB,KACMC,EAA0B/hB,aAAkBj/B,EAAU,KAM5D,OACE,qCACE,eAACugD,GAAD,CAAWtnB,KAAK,MAAMhtE,QANH,WACrB80F,GAAY,SAAC9gD,GAAD,OAAWA,MAKrB,UACE,cAAC,GAAD,CAAUp3C,KAAMA,IACfA,EAAK0c,YACJ,cAAC,GAAD,CAAkB1c,KAAMA,EAAM9E,QAASA,EAAS6T,eAAgBA,IAEhE,cAAC,GAAD,CAAc/O,KAAMA,EAAM9E,QAASA,EAAS6T,eAAgBA,IAE7D/O,EAAK0c,YAAc,cAAC,GAAD,CAAa1c,KAAMA,IAAW,cAAC,GAAD,CAASA,KAAMA,IAChEi4F,GAAkB,cAAC,GAAD,CAAiBj4F,KAAMA,IACzCg4F,GAAa,cAAC,GAAD,CAAYh4F,KAAMA,IAChC,cAACo4F,GAAD,CAAkBjhD,SAAUA,EAAU09C,aAAckD,GAAYC,OAEjEG,GACC,cAAC,GAAD,CACEj9F,QAASA,EACT8E,KAAMA,EACN+O,eAAgBA,EAChBooC,SAAUA,EACVq/C,YAAa,CAAEC,OAAMC,OAAMC,OAAMiB,OAAMC,OAAMC,eC5CjDO,GAAchzG,KAAOU,IAAV,sJACE,qBAAG8zC,MAAkBmhB,MAAMikC,QAExB,qBAAGplD,MAAkBolD,KAAKx4C,cAEjB,qBAAG5M,MAAkB2M,OAAO6W,YAIrDi7C,GAAoBjzG,KAAOU,IAAV,4IACJ,qBAAG8zC,MAAkBmhB,MAAMikC,QACxB,qBAAGplD,MAAkB2M,OAAOK,cAK5C0xD,GAAwBlzG,KAAOU,IAAV,0HAqCZyyG,GA9B+B,SAAC,GAAwC,IAAtC1pF,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,eAAgB7T,EAAc,EAAdA,QAC9DpX,EAAMC,eAAND,EACF20G,EAAiBh0G,iBAAuB,MAM9C,OACE,cAAC6zG,GAAD,UACE,eAACD,GAAD,CAAax4F,GAAG,cAAcuwE,KAAK,QAAQh/C,IAAKqnE,EAAhD,UACG3pF,EAAM9D,KAAI,SAAChL,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACN9E,QAASA,EACT6T,eAAgBA,GAHX/O,EAAK0c,YAAc,YAAc1c,EAAKC,WAM/C,cAACs4F,GAAD,UACE,eAAC,IAAD,CAAQ94D,QAAQ,OAAOr8B,QAjBX,WAClBq1F,EAAe5zG,QAAQ6zG,eAAe,CACpCC,SAAU,YAeN,UACG70G,EAAE,UACH,cAAC,IAAD,CAAekf,MAAM,uBCpB3B41F,GAAavzG,aAAO8wF,KAAP9wF,CAAH,2DAIVwzG,GAAexzG,KAAOU,IAAV,wTAUd,qBAAG8zC,MAAkByE,aAAaC,MAQhCu6D,GAAkBzzG,KAAOU,IAAV,iKAMjB,qBAAG8zC,MAAkByE,aAAaC,MAMhCw6D,GAAe1zG,KAAOU,IAAV,oEACZw1D,MAKAy9C,GAAiB3zG,aAAO2wD,IAAP3wD,CAAH,6DA2QL4zG,GAnQS,WACtB,IAAM1+B,EAAWtoB,eACTnuD,EAAMC,eAAND,EACAoX,EAAY9W,eAAZ8W,QACR,EAAyD2T,eAA1CqqF,EAAf,EAAQpqF,MAA8BC,EAAtC,EAAsCA,eACtC,EAAoChH,eAApC,mBAAOL,EAAP,KAAmBkqF,EAAnB,KACA,EAAgC3pF,eAAhC,mBAAOE,EAAP,KAAiB2pF,EAAjB,KACA,EAAwDrwG,mBAT1B,IAS9B,mBAAO03G,EAAP,KAA6BC,EAA7B,KACA,EAAwCtrB,eAAhCC,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,eACrB,EAAsC1sF,mBAAS,IAA/C,mBAAO2+B,EAAP,KAAoBs5D,EAApB,KACA,EAAoCj4F,mBAAS,OAA7C,mBAAO43G,EAAP,KAAmBC,EAAnB,KACMC,EAAoB90G,iBAAO,GACjC,EAKI4qB,eALJ,IACEiB,SAAYK,EADd,EACcA,qBAAsBF,EADpC,EACoCA,WAC1BP,EAFV,EAEED,KAAQC,eACRR,EAHF,EAGEA,kBACAE,EAJF,EAIEA,iBAEI4pF,EAAwB/oF,GAAcA,EAAWwM,GAAG,GACpD8qB,EAA0B73B,GAAkBA,EAAiB,IAE7DpB,EAAQjL,mBAAQ,WACpB,IAAM41F,EAAWP,EAAsBn5F,MAAK,SAACC,GAAD,OAA0B,IAAhBA,EAAKC,UAE3D,MAAM,CADa,6BAAQw5F,GAAR,IAAkB/8E,aAAa,KAClD,mBAA0Bw8E,MACzB,CAACA,IAGJ,EAAmCr1F,mBAAQ,kBAAM61F,KAAU5qF,GAAO,SAAC9O,GAAD,OAAUA,EAAK4d,gBAAa,CAAC9O,IAA/F,mBAAO6qF,EAAP,KAAsBC,EAAtB,KACMC,EAA0Bh2F,mBAC9B,kBACE81F,EAAczuF,QAAO,SAAClL,GACpB,OAAIA,EAAK0c,YACA88E,EAEFx5F,EAAKsQ,UAAY,IAAI/pB,KAAUyZ,EAAKsQ,SAASmmB,eAAeqjE,cAAc,QAErF,CAACH,EAAeH,IAEZO,EAAsBl2F,mBAC1B,kBACE+1F,EAAU1uF,QAAO,SAAClL,GAChB,OAAIA,EAAK0c,YACA88E,EAEFx5F,EAAKsQ,UAAY,IAAI/pB,KAAUyZ,EAAKsQ,SAASmmB,eAAeqjE,cAAc,QAErF,CAACF,EAAWJ,IAER3H,EAA0BgI,EAAwB/4E,OAAS,EAEjEub,eACAptB,eACAhB,eACAS,aAAkBxT,GAElBnZ,qBAAU,WACJosF,GACFirB,GAAwB,SAACY,GACvB,OAAIA,GAAyBT,EAAkB10G,QACtCm1G,EA9De,GAgEjBA,OAGV,CAAC7rB,IAEJ,IAqEI8rB,EArEEC,EAAoB3/B,EAAS3U,SAAS1xC,SAAS,WA4ErD,GALE+lF,EADEC,EACYxyF,EAAamyF,EAA0BF,EAEvCjyF,EAAaqyF,EAAsBH,EAG/Cx5E,EAAa,CACf,IAAM+5E,GAAiBr4B,aAAS1hD,EAAYhT,eAC5C6sF,EAAcA,EAAY/uF,QAAO,SAAClL,GAAD,OAC/B8hE,aAAS9hE,EAAKk2B,aAAazU,OAAOrU,eAAe8G,SAASimF,OAI9DF,EAzEkB,SAACG,GACjB,OAAQf,GACN,IAAK,MAEH,OAAOjyE,KACLgzE,GACA,SAACp6F,GAAD,OAA6BA,EAAK2c,IAAMF,aAAWzc,EAAM+nC,GAAyBprB,IAAM,IACxF,QAEJ,IAAK,SACH,OAAOyK,KACLgzE,GACA,SAACp6F,GACC,OAAKA,EAAKsQ,UAAatQ,EAAK+c,kBAGrB/c,EAAK0c,YACRI,aACE5hB,EACAyV,EACAF,EACAf,EACA1P,EAAK+c,mBACLQ,iBACFvd,EAAKsQ,SAASokB,cAAcztC,MAAM+Y,EAAK+c,mBAAmBx1B,WAVrD,IAYX,QAEJ,IAAK,cACH,OAAO6/B,KACLgzE,GACA,SAACp6F,GAA4B,IAAD,EACtBwyB,EAActQ,OAAOm4E,IACzB,GAAIr6F,EAAK0c,YACH9M,EAAiBojE,aACnBxgD,GAAehqC,uBACbF,KAAO/B,UAAUgC,KAAKqnB,EAAiBjsB,YACvCqc,EAAKgyB,aAAahrC,gBAGjB,GAAoB,IAAhBgZ,EAAKC,OAAc,CAAC,IAAD,EAC5B,IAAI,UAAAD,EAAKwyB,mBAAL,eAAkBwgD,aAAcpjE,EAAiBojE,WAAY,CAC/D,IAAM+T,EAAgCz+F,KAAO/B,UAAUgC,KAAKyX,EAAKwyB,YAAY7uC,YAAY8E,IACvFmnB,EAAiBjsB,YAEnB6uC,GAAehqC,uBAAYu+F,EAA+B/mF,EAAKgyB,aAAahrC,gBAEzE,UAAIgZ,EAAKwyB,mBAAT,aAAI,EAAkBwgD,cAC3BxgD,GAAehqC,uBAAYF,KAAO/B,UAAUgC,KAAKyX,EAAKwyB,YAAY7uC,YAAaqc,EAAKgyB,aAAahrC,WAEnG,OAAOk7B,OAAO8wD,SAASxgD,GAAeA,EAAc,IAEtD,QAEJ,QACE,OAAO4nE,GAkBCE,CAAUL,GAAajqE,MAAM,EAAGmpE,GAC9CI,EAAkB10G,QAAUo1G,EAAYn5E,OAExC,IAAMy5E,GACJ,cAAC3B,GAAD,UACGqB,EAAYjvF,KAAI,SAAChL,GAAD,OACfA,EAAK0c,YACH,cAAC,GAAD,CAA+B1c,KAAMA,EAAMixF,eAAgBvpF,GAAxC,aAEnB,cAAC,GAAD,CAA4B1H,KAAMA,EAAM9E,QAASA,GAAlC8E,EAAKC,aAMtBu6F,GAAc,cAAC,GAAD,CAAY1rF,MAAOmrF,EAAa/+F,QAASA,EAAS6T,eAAgBA,IAEtF,OACE,qCACE,cAAC6jE,GAAA,EAAD,UACE,eAAC,IAAD,CAAMh7B,eAAe,gBAAgBV,cAAe,CAAC,SAAU,KAAM,KAAM,OAA3E,UACE,eAAC,IAAD,CAAM0H,KAAK,IAAI1H,cAAc,SAASY,GAAI,CAAC,MAAO,GAAlD,UACE,cAAC,IAAD,CAAS3X,GAAG,KAAKgc,MAAM,MAAMn5C,MAAM,YAAYk7C,GAAG,OAAlD,SACGp6D,EAAE,iBAEL,cAAC,IAAD,CAASq4D,MAAM,KAAKn5C,MAAM,OAA1B,SACGlf,EAAE,qCAEL,cAAC,IAAD,CAASq4D,MAAM,KAAKn5C,MAAM,OAA1B,SACGlf,EAAE,4BAGP,eAAC,IAAD,CAAM86D,KAAK,IAAI7G,OAAO,cAAcH,eAAe,SAASC,WAAW,SAASK,GAAI,CAAC,OAAQ,KAAM,KAAnG,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YAIN,eAACoO,GAAA,EAAD,WACE,eAACuyC,GAAD,WACE,cAAC,GAAD,CACEnxF,WAAYA,EACZkqF,cAAeA,EACfC,wBAAyBA,EACzB1pF,SAAUA,EACV2pF,YAAaA,IAEf,eAACgH,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,CAAM/gD,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAag5C,cAAc,YAA5D,SACGl4D,EAAE,aAEL,cAACk1G,GAAD,UACE,cAACnkB,GAAA,EAAD,CACE9sF,QAAS,CACP,CACE2tE,MAAO5xE,EAAE,OACTD,MAAO,OAET,CACE6xE,MAAO5xE,EAAE,OACTD,MAAO,OAET,CACE6xE,MAAO5xE,EAAE,UACTD,MAAO,UAET,CACE6xE,MAAO5xE,EAAE,gBACTD,MAAO,gBAGXixF,eArJe,SAACQ,GAC9BgkB,EAAchkB,EAAOzxF,eAwJb,eAACk1G,GAAD,CAAct6E,MAAO,CAAE0+D,WAAY,IAAnC,UACE,cAAC,KAAD,CAAMnlC,SAAS,OAAO+D,MAAI,EAAC/4C,MAAM,aAAag5C,cAAc,YAA5D,SACGl4D,EAAE,YAEL,cAAC67F,GAAA,EAAD,CAAatjC,SAjKO,SAACC,GAC/Bo9B,EAAep9B,EAAMiP,OAAO1nE,QAgK8Bu4D,YAAY,0BAIjE89C,GACC,cAAC,KAAD,CAAMliD,SAAS,OAAOh1C,MAAM,UAAU2pD,GAAG,OAAzC,SACG7oE,EAAE,iFAGNoX,IAAY6T,GAAkBrH,GAC7B,cAAC,IAAD,CAAMkwC,eAAe,SAASsG,GAAG,MAAjC,SACE,cAACs3B,GAAA,EAAD,MAGHrtE,IAAazK,KAAS8zF,KAAO+I,GAAaC,GAC3C,qBAAKppE,IAAK28C,IACV,cAAC,KAAD,CACE92E,GAAG,OACHihD,GAAG,OACH8hB,IAAI,2CACJj7C,IAAI,uBACJx5B,MAAO,IACPwyD,OAAQ,e,qCC/UVlkD,GAAqByE,KAArBzE,OAWO4mG,GAL6B,CAC1C7iG,SAP2BU,KAAbV,SAQd/D,W,4BCDIshE,GAAa9vE,KAAOU,IAAV,yLAKM,qBAAG8zC,MAAkB2M,OAAOG,iBAK5C+zD,GAAer1G,KAAOU,IAAV,iPAKI,gBAAGgf,EAAH,EAAGA,MAAO80B,EAAV,EAAUA,MAAV,OAAuB90B,EAAQ80B,EAAM2M,OAAO2mB,QAAUtzB,EAAM2M,OAAOC,cACtD,qBAAG1hC,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAG80B,MAAkB2M,OAAOG,iBAG5Cg0D,GAAiBt1G,KAAOU,IAAV,6DAKdsuE,GAAQhvE,KAAO8uE,MAAV,gkBAKW,qBAAGt6B,MAAkB2M,OAAOG,iBACtB,qBAAG5hC,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAO80B,EAAV,EAAUA,MAAV,OAAuB90B,EAAQ80B,EAAM2M,OAAO2mB,QAAUtzB,EAAM2M,OAAOmW,WAMjE,qBAAG9iB,MAAkB2M,OAAOo0D,gBAe5B,qBAAG/gE,MAAkB2M,OAAOo0D,gBAI1B,SAASC,GAAT,GAUX,IATFh7F,EASC,EATDA,GACAhc,EAQC,EARDA,MACAw4D,EAOC,EAPDA,SAQQ/3D,EAAYH,cAAZG,QAEAR,EAAMC,eAAND,EAER,EAAmCysD,aAAO1sD,GAAlC0F,EAAR,EAAQA,QAASo4B,EAAjB,EAAiBA,QAASrU,EAA1B,EAA0BA,KAEpB8sE,EAAct3F,uBAClB,SAACw5D,GACC,IACMw+C,EADQx+C,EAAMiP,OAAO1nE,MACCH,QAAQ,OAAQ,IAC5C24D,EAASy+C,KAEX,CAACz+C,IAGGt3C,EAAQ7I,QAAQrY,EAAMi9B,OAAS,IAAMa,IAAYp4B,GAEvD,OACE,cAAC4rE,GAAD,CAAYt1D,GAAIA,EAAhB,SACE,cAAC66F,GAAD,CAAc31F,MAAOA,EAArB,SACE,cAAC41F,GAAD,UACE,eAAC,KAAD,CAAY30G,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,eACRyF,GAAWjF,GACV,eAAC,KAAD,CAAM87C,UAAQ,EAACqX,OAAK,EAACpX,KAAMpmC,YAAc,OAACqT,QAAD,IAACA,IAAQ/jB,EAAS,UAAWjF,GAAtE,cACIR,EAAE,mBADN,UAKJ,cAACuwE,GAAD,CACEiC,UAAU,0BACVp8D,KAAK,OACLs6D,aAAa,MACbC,YAAY,MACZsmC,eAAe,MACfnmC,WAAW,QACXxY,YAAat4D,EAAE,8BACfihB,MAAOA,EACPm3C,QAAQ,wBACRG,SAAU+9B,EACVv2F,MAAOA,a,8ECnHRq6B,GAAU74B,KAAOU,IAAV,wEAKPi1G,GAAe31G,KAAOU,IAAV,yDAGrB,qBAAGk1G,UAECzmB,aADK,iIAOL,QAGK0mB,GAAY71G,aAAOk2D,KAAPl2D,CAAH,8CACX,gBAAGw0C,EAAH,EAAGA,MAAOshE,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACdthE,EAAM2M,OAAO2mB,QACA,IAAbguC,EACAthE,EAAM2M,OAAO40D,QACA,IAAbD,EACAthE,EAAM2M,OAAO3V,KACbgJ,EAAM2M,OAAOta,WAGRmvE,GAAuBh2G,KAAOi2G,OAAV,qcAGX,qBAAGzhE,MAAkB2M,OAAOC,cAQvC,qBAAG5M,MAAkB2M,OAAO3V,QAOf,qBAAGgJ,MAAkB2M,OAAOO,YAG5B,qBAAGlN,MAAkB2M,OAAOO,YAKvCw0D,GAAgBl2G,aAAOk2D,MAAM0Z,MAAM,CAAEijB,UAAU,GAA/B7yF,CAAH,gDAIpBm2G,GAAyBn2G,KAAOU,IAAV,gUACN,gBAAG8zC,EAAH,EAAGA,MAAH,gBAAkBA,EAAM2M,OAAO2mB,QAA/B,SAQX,qBAAGtzB,MAAkB2M,OAAO2mB,WASjCsuC,GAAsCp2G,KAAOU,IAAV,mNACnB,gBAAG8zC,EAAH,EAAGA,MAAH,gBAAkBA,EAAM2M,OAAO2mB,QAA/B,SAUf,SAASuuC,GAAT,GAA0D,IAA7B32F,EAA4B,EAA5BA,MAClC,OACE,eAACy2F,GAAD,WACE,cAACC,GAAD,UACE,cAAC,IAAD,CAAWl2G,MAAM,WAEnB,4BAAIwf,OAKH,I,GAAM42F,GAAwBt2G,aAAOyT,KAAPzT,CAAH,yHACZ,gBAAGw0C,EAAH,EAAGA,MAAH,gBAAkBA,EAAM2M,OAAO40D,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3CxjE,EAA0C,EAA1CA,YAC7C,OACE,cAAC8iE,GAAD,CAAWljD,SAAS,OAAOmjD,SAAUpiE,aAAgBX,GAArD,SACGA,EAAeA,EAAYzK,SAAS/wB,KAAY,SAAjC,UAA+Cw7B,EAAY1wC,QAAQ,GAAnE,KAA4E,MCKlG,IAAMm0G,GAA2Bx2G,aAAOyT,KAAPzT,CAAH,iJAGX,qBAAGw0C,MAAkBmhB,MAAMpnC,WACxB,qBAAGimB,MAAkB2M,OAAOK,cAC5B,qBAAGhN,MAAkB2M,OAAOC,cAGnC,SAASq1D,GAAT,GAYX,IAAD,QAXDlpG,EAWC,EAXDA,MACAmpG,EAUC,EAVDA,UACAttE,EASC,EATDA,gBACAutE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwCx6G,oBAAkB,GAA1D,mBAAOy6G,EAAP,KAAqBC,EAArB,KACMhrD,EAA0BttC,mBAC9B,kBAAM6qB,aAA+B97B,EAAO67B,KAC5C,CAACA,EAAiB77B,IAEpB,EAAiDiR,mBAAQ,kBAAMk0B,aAA2BnlC,KAAQ,CAACA,IAA3FylC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBmjE,EAAWpiE,aAAgBV,GAEjC,OACE,qCACE,eAACwjE,GAAD,WACE,eAACz2G,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC,KAAD,CAAMwyD,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACTv5B,MAAO,CACLm5B,eAAgB,SAChBC,WAAY,SACZI,QAAS,OACTP,UAAW,QACX0kD,YAAa,QAPjB,UAUGpjE,aAAqBpmC,EAAOspG,GAC7B,cAACb,GAAD,CAAsBj4F,QAAS,kBAAM+4F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAe32G,MAAM,iBAK3B,eAACH,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,SACGplD,EAAM0wD,YAAc+4C,KAAUC,YAAc,mBAAqB,iBAEpE,cAAC1rE,GAAA,EAAD,CACEC,KAAK,uGACLuwB,GAAG,WAGP,eAACh8D,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,SACGplD,EAAM0wD,YAAc+4C,KAAUC,YAA9B,oBACGnrD,EAAwBnsD,KAAM4wB,eADjC,aACG,EAAuCwjB,cAAc,UADxD,QAC8D,IAD9D,oBAEG+X,EAAwBnsD,KAAMywB,cAFjC,aAEG,EAAsC2jB,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAM4e,SAAS,OAAOmlC,WAAW,MAAjC,SACGvqF,EAAM0wD,YAAc+4C,KAAUC,YAC3B1pG,EAAMymC,aAAar9B,SAASylB,OAC5B7uB,EAAM4lC,YAAYx8B,SAASylB,eAIrC,eAACr8B,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,0BACA,cAACpnB,GAAA,EAAD,CAAgBC,KAAK,4EAA4EuwB,GAAG,WAEtG,cAACw6C,GAAD,CAAsBxjE,YAAaC,OAErC,eAACjzC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,oCACA,cAACpnB,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMqtB,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,sCACA,cAAC,KAAD,uDAGJkD,GAAG,WAGP,cAAC,KAAD,CAAMpJ,SAAS,OAAf,SACGhgB,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxmC,EAAM4lC,YAAYx8B,SAASylB,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACEge,QAAS07D,EAAW,EAAI,SAAW,UACnC/3F,QAAS24F,EACT1+C,SAAU4+C,EACV/jD,GAAG,OACHr4C,GAAG,uBACHta,MAAM,OANR,SAQG41G,EAAW,EAAI,cAAgB,iBAGjCa,EAAmB,cAACN,GAAD,CAAmB32F,MAAOi3F,IAAuB,W,uBCxH9D,SAASO,GAAT,GAYX,IAAD,IAXD3pG,EAWC,EAXDA,MACA67B,EAUC,EAVDA,gBACA5Y,EASC,EATDA,UACA2mF,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMtrD,EAA0BttC,mBAC9B,kBAAM6qB,aAA+B97B,EAAO67B,KAC5C,CAAC77B,EAAO67B,IAEF4J,EAA0Bx0B,mBAAQ,kBAAMk0B,aAA2BnlC,KAAQ,CAACA,IAA5EylC,sBACFqkE,EAAsB3jE,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAYryC,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgW,SAAUpJ,EAAM4lC,YAAYx8B,SAAUuiB,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAAC68E,GAAD,CACEvjD,SAAS,OACTh1C,MAAOw5F,GAAqB5pG,EAAM0wD,YAAc+4C,KAAUM,aAAe,UAAY,OAFvF,SAIG/pG,EAAM4lC,YAAYY,cAAc,QAGrC,cAACh0C,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMgyD,SAAS,OAAOoJ,GAAG,OAAzB,SACGxuD,EAAM4lC,YAAYx8B,SAASylB,cAIlC,cAACr8B,GAAA,EAAD,UACE,cAAC,IAAD,CAAeG,MAAM,OAAO67D,GAAG,UAEjC,eAACh8D,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgW,SAAUpJ,EAAMymC,aAAar9B,SAAUuiB,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAAC68E,GAAD,CACEvjD,SAAS,OACTh1C,MACE05F,EAAsB,EAClB,UACAF,GAAqB5pG,EAAM0wD,YAAc+4C,KAAUC,YACnD,UACA,OAPR,SAUG1pG,EAAMymC,aAAaD,cAAc,QAGtC,cAACh0C,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMgyD,SAAS,OAAOoJ,GAAG,OAAzB,SACGxuD,EAAMymC,aAAar9B,SAASylB,cAIlC+6E,EACC,cAACb,GAAD,CAAuBl2G,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAACZ,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,IAAD,CAAW0yD,GAAG,QACd,cAAC,KAAD,CAAMiE,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQ34C,QAASq5F,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAYh3G,QAAQ,aAAaO,IAAI,KAAKy4B,MAAO,CAAE/4B,QAAS,gBAA5D,SACGkN,EAAM0wD,YAAc+4C,KAAUC,YAC7B,eAAC,KAAD,CAAM7kD,OAAK,EAACz0C,MAAM,aAAa00C,UAAU,OAAOj5B,MAAO,CAAEl5B,MAAO,QAAhE,4DAEE,wCACG4rD,EAAwBnsD,KAAM4wB,eADjC,aACG,EAAuCwjB,cAAc,GADxD,IAC6DxmC,EAAMymC,aAAar9B,SAASylB,UAExF,sCAGH,eAAC,KAAD,CAAMg2B,OAAK,EAACz0C,MAAM,aAAa00C,UAAU,OAAOj5B,MAAO,CAAEl5B,MAAO,QAAhE,uDAEE,wCACG4rD,EAAwBnsD,KAAMywB,cADjC,aACG,EAAsC2jB,cAAc,GADvD,IAC4DxmC,EAAM4lC,YAAYx8B,SAASylB,UAEtF,wCAIQ,OAAd5L,EACC,cAAC,KAAD,CAAYpwB,QAAQ,aAAaO,IAAI,KAAKy4B,MAAO,CAAE/4B,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAMsd,MAAM,aAAZ,oCACyB,mBAAG87B,MAAOjpB,EAAV,SAAsByqB,aAAazqB,UAG5D,QCxEV,IA4Ee+mF,GA5EgE,SAAC,GAYzE,IAAD,oBAXJhqG,EAWI,EAXJA,MACAiqG,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAhuE,EAQI,EARJA,gBACAstE,EAOI,EAPJA,UACAx+C,EAMI,EANJA,UACAqE,EAKI,EALJA,gBACA/rC,EAII,EAJJA,UACAmmF,EAGI,EAHJA,iBACAn6C,EAEI,EAFJA,cACA3hB,EACI,EADJA,OAEMs8D,EAAoB34F,mBACxB,kBAAM3H,QAAQtJ,GAASiqG,IApCsBz5C,EAoC2By5C,GApC1C15C,EAoCmCvwD,GAlC1D0wD,YAAcF,EAAOE,YAC3B9iC,aAAe2iC,EAAO3qB,YAAYx8B,SAAUonD,EAAO5qB,YAAYx8B,YAC/DmnD,EAAO3qB,YAAY+qB,QAAQH,EAAO5qB,eAClChY,aAAe2iC,EAAO9pB,aAAar9B,SAAUonD,EAAO/pB,aAAar9B,YACjEmnD,EAAO9pB,aAAakqB,QAAQH,EAAO/pB,gBANxC,IAAkC8pB,EAAeC,IAqC7C,CAACy5C,EAAejqG,IAGV9O,EAAMC,eAAND,EAEF4hF,EAAc5iF,uBAAY,WAC9B,OAAO8P,EACL,cAAC2pG,GAAD,CACE3pG,MAAOA,EACP67B,gBAAiBA,EACjB5Y,UAAWA,EACX2mF,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAAChuE,EAAiBguE,EAAiB5mF,EAAW2mF,EAAmB5pG,IAE9D+yE,EAAc7iF,uBAAY,WAC9B,OAAO8P,EACL,cAACkpG,GAAD,CACEC,UAAWA,EACXnpG,MAAOA,EACPqpG,gBAAiBO,EACjBR,iBAAkBA,EAClBvtE,gBAAiBA,IAEjB,OACH,CAACA,EAAiBstE,EAAWS,EAAmBR,EAAkBppG,IAG/DmuD,EAAcj9D,EAAE,uDAAwD,CAC5E8hF,QAAO,iBAAEhzE,QAAF,IAAEA,GAAF,UAAEA,EAAO4lC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDysC,QAAO,iBAAEjzE,QAAF,IAAEA,GAAF,UAAEA,EAAO4lC,mBAAT,iBAAE,EAAoBx8B,gBAAtB,aAAE,EAA8BylB,cAAhC,QAA0C,GACjDqkD,QAAO,iBAAElzE,QAAF,IAAEA,GAAF,UAAEA,EAAOymC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClD2sC,QAAO,iBAAEnzE,QAAF,IAAEA,GAAF,UAAEA,EAAOymC,oBAAT,iBAAE,EAAqBr9B,gBAAvB,aAAE,EAA+BylB,cAAjC,QAA2C,KAG9Cq7E,EAAsBh6G,uBAC1B,kBACEk5G,EACE,cAAC,KAAD,CAAyBz+C,UAAWA,EAAWkE,QAASu6C,IAExD,cAAC,KAAD,CAA0Bz6C,WAAYmkB,EAAapkB,cAAeqkB,MAEtE,CAACpoB,EAAWooB,EAAaD,EAAas2B,IAGxC,OACE,cAACr6C,GAAA,EAAD,CACE7iB,MAAOh7C,EAAE,gBACTy5D,UAAWA,EACXqE,gBAAiBA,EACjBC,cAAeA,EACfptC,KAAMyrB,EACN4hB,QAASg7C,EACT/7C,YAAaA,EACbE,cAAa,OAAEruD,QAAF,IAAEA,OAAF,EAAEA,EAAOymC,aAAar9B,Y,UCvFzC,SAAS+gG,GAAa3oF,GACpB,OAAa,OAANA,QAAoB9yB,IAAN8yB,EAWR4oF,OAJf,SAA0Bn5G,GACxB,OAxBF,SACEA,EACAo5G,GAEA,MAAwBx7G,mBAA+Bw7G,GAAYA,EAASp5G,GAASA,OAAQvC,GAA7F,mBAAO47G,EAAP,KAAaC,EAAb,KAQA,OAPAp7G,qBAAU,WACRo7G,GAAQ,SAAC/lD,GAEP,OAD2B6lD,GAAWA,EAASp5G,GACzBA,EACfuzD,OAER,CAAC6lD,EAAUp5G,IACPq5G,EAYAE,CAAQv5G,EAAOk5G,K,SC1BTlxF,mBAAK,YAAiD,IAA5BjZ,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMw4D,SAAS,OAAO7lE,MAAM,OAAOqyD,eAAe,WAAWC,WAAW,SAAxE,SACGjlD,EAAMqlC,MAAM+X,KAAKhlC,KAAI,SAACxB,EAAOmE,EAAGqiC,GAC/B,IAAMqtD,EAAsB1vF,IAAMqiC,EAAKlvB,OAAS,EAC1C9kB,EAAWkV,aAAe1H,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMquC,WAAW,MAAjB,SACE,cAAC,KAAD,CAAMG,SAAS,OAAOoJ,GAAG,WAAWtJ,GAAG,WAAvC,SACG97C,EAASylB,YAGZ47E,GAAc,cAAC,IAAD,CAAkB93G,MAAM,WAN3BooB,WCDzB,SAAS2vF,GAAT,GAA8F,IAAD,QAArE1qG,EAAqE,EAArEA,MAAO67B,EAA8D,EAA9DA,gBAC7B,EAAiDsJ,aAA2BnlC,GAApEylC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzB0Y,EAAY99C,EAAM0wD,YAAc+4C,KAAUC,YAC1CnrD,EAA0BziB,aAA+B97B,EAAO67B,GAEtE,OACE,eAAC,KAAD,CAAYhQ,MAAO,CAAE/4B,QAAS,UAA9B,UACE,eAACN,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAOh1C,MAAM,aAA5B,SACG0tC,EAAY,mBAAqB,iBAEpC,cAAC9f,GAAA,EAAD,CACEC,KAAK,uGACLuwB,GAAG,WAGP,cAACh8D,GAAA,EAAD,UACE,cAAC,KAAD,CAAM4yD,SAAS,OAAf,SACGtH,EAAS,8BACHS,EAAwBnsD,KAAM4wB,eAD3B,aACH,EAAuCwjB,cAAc,GADlD,YACwDxmC,EAAMymC,aAAar9B,SAASylB,eADpF,QAEN,IAFM,8BAGH0vB,EAAwBnsD,KAAMywB,cAH3B,aAGH,EAAsC2jB,cAAc,GAHjD,YAGuDxmC,EAAM4lC,YAAYx8B,SAASylB,eAHlF,QAG8F,WAI9G,eAACr8B,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAOh1C,MAAM,aAA5B,0BAGA,cAAC4tB,GAAA,EAAD,CACEC,KAAK,iFACLuwB,GAAG,WAGP,cAACw6C,GAAD,CAAsBxjE,YAAaC,OAGrC,eAACjzC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM4yD,SAAS,OAAOh1C,MAAM,aAA5B,oCAGA,cAAC4tB,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMqtB,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,sCACA,cAAC,KAAD,uDAGJkD,GAAG,WAGP,cAAC,KAAD,CAAMpJ,SAAS,OAAf,SACGhgB,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxmC,EAAM4lC,YAAYx8B,SAASylB,QAAW,YAW/F,SAAS87E,GAAT,GAAmE,IAApC3qG,EAAmC,EAAnCA,MACpC,EAA0BwU,eAAnBqnB,EAAP,oBAEM+uE,EAAYthG,QAAQtJ,GAASA,EAAMqlC,MAAM+X,KAAKlvB,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY96B,IAAI,MAAhB,SACG4M,GACC,qCACE,cAAC0qG,GAAD,CAAc1qG,MAAOA,EAAO67B,gBAAiBA,IAC5C+uE,GACC,mCACE,eAACp4G,GAAA,EAAD,CAAYq5B,MAAO,CAAE/4B,QAAS,UAA9B,UACE,uBAAM+4B,MAAO,CAAEw5B,QAAS,OAAQJ,WAAY,UAA5C,UACE,cAAC,KAAD,CAAMG,SAAS,OAAOh1C,MAAM,aAA5B,mBAGA,cAAC4tB,GAAA,EAAD,CACEC,KAAK,0EACLuwB,GAAG,WAGP,cAAC,GAAD,CAAWxuD,MAAOA,c,oBCjG5B6qG,GAAwBp4G,KAAOU,IAAV,0PACX,qBAAGuoE,KAAmB,OAAS,KAMzB,qBAAGz0B,MAAkB2M,OAAOk5B,oBAEnC,qBAAGpR,KAAmB,iBAAmB,uBAIzC,SAASovC,GAAT,GAAoF,IAAD,EAA5C9qG,EAA4C,EAA5CA,MAAUi8D,EAAkC,mBAC1F8uC,EAAYX,GAAcpqG,GAEhC,OACE,cAAC6qG,GAAD,CAAuBnvC,KAAMpyD,QAAQtJ,GAArC,SACE,cAAC2qG,GAAD,6BAAyB1uC,GAAzB,IAA+Bj8D,MAAK,iBAAEA,QAAF,IAAEA,IAAS+qG,SAAX,aAAwBr8G,OCZnD,SAASs8G,GAAT,GAAgF,IAAD,UAAzDrkE,EAAyD,EAAzDA,MAAO2iE,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAG3iE,QAAH,IAAGA,OAAH,EAAGA,EAAOH,cAAc,GAAxB,OAA6BG,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOJ,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFk1B,EAAOpyD,SAAa,OAALq9B,QAAK,IAALA,OAAA,EAAAA,EAAOukE,gBAAP,OAAuBvkE,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOwkE,gBAC7CroC,EAAQwmC,EAAY,iBACnB3iE,QADmB,IACnBA,GADmB,UACnBA,EAAOwkE,qBADY,aACnB,EAAsBt8E,OADH,uBACiB8X,QADjB,IACiBA,GADjB,UACiBA,EAAOukE,oBADxB,aACiB,EAAqBr8E,QADtC,iBAEnB8X,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOukE,oBAFY,aAEnB,EAAqBr8E,OAFF,uBAEgB8X,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOwkE,qBAFvB,aAEgB,EAAsBt8E,QAEhE,OACE,cAAC,KAAD,CAAMhD,MAAO,CAAEm5B,eAAgB,SAAUC,WAAY,SAAUI,QAAS,QAAxE,SACGqW,EACC,4CACGuvC,QADH,IACGA,IAAkB,IADrB,IAC2BnoC,EACzB,cAAC2lC,GAAD,CAAsBj4F,QAAS,kBAAM+4F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAe32G,MAAM,cAIzB,M,0BCFOy4G,GAjBkC,SAAC,GAAqC,IAAnC1lG,EAAkC,EAAlCA,OAAQilD,EAA0B,EAA1BA,UAAW0gD,EAAe,EAAfA,SACrE,OACE,cAAC,KAAD,CACEn/D,MAAM,eACNye,UAAW,WACLA,GACFA,IAEF0gD,KAEFx/E,MAAO,CAAEutC,SAAU,SARrB,SAUE,cAACiU,GAAA,EAAD,CAAa3nE,OAAQA,EAAQ4nE,qBAAsB3iB,O,wBCjBnD2gD,GAAW74G,aAAOQ,KAAPR,CAAH,8CAIR84G,GAAS94G,KAAOU,IAAV,2PAGU,gBAAG8zC,EAAH,EAAGA,MAAO8zB,EAAV,EAAUA,UAAV,SAAqBtQ,SAC5BxjB,EAAM2M,OAAO+gD,mBAAqB55B,EAAY9zB,EAAM2M,OAAOta,QAAU2N,EAAM2M,OAAOmW,WAU3FyhD,GAAY/4G,KAAOU,IAAV,sGAMTs4G,GAAYh5G,KAAOU,IAAV,0KAKT,gBAAG8zC,EAAH,EAAGA,MAAOykE,EAAV,EAAUA,cAAV,SAAyBjhD,SACZxjB,EAAM2M,OAAO+gD,mBAAqB+W,EAAgBzkE,EAAM2M,OAAOta,QAAU2N,EAAM2M,OAAOmW,WAEnG,gBAAG9iB,EAAH,EAAGA,MAAOykE,EAAV,EAAUA,cAAV,SAAyBjhD,SAEnBxjB,EAAM2M,OAAO+gD,mBACb+W,EACAzkE,EAAM2M,OAAOmW,QACb9iB,EAAM2M,OAAO+gD,sBAqBV,SAASgX,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDnhD,gBAAmD,SAA9BwR,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAYppE,QAAQ,UAAaopE,GAAjC,aACE,eAACqvC,GAAD,WACGM,EAAMxzF,KAAI,SAAC8gF,EAAMn+E,GAChB,OAEE,cADA,CACCywF,GAAD,WACE,cAACD,GAAD,CAAQxwC,UAAWm+B,EAAMzuC,SAAUA,IAAcmhD,EAAM7wF,EAAI,IAAY,IAANA,EAAjE,SACGm+E,EAAO,SAAMn+E,EAAI,IAEpB,cAAC0wF,GAAD,CAAWC,cAAexS,EAAMzuC,SAAUA,MAJ5B1vC,MAQpB,cAACwwF,GAAD,CAAQ9gD,SAAUA,IAAamhD,EAAMA,EAAM19E,OAAS,GAApD,SAAyD09E,EAAM19E,OAAS,U,IChEpE29E,G,iDA6BZ,SAASC,GACP9rG,GAGa,IAFb67B,EAEY,uDAFchyB,IAC1BkiG,EACY,uCACZ,EAAsCx6G,cAA9B+W,EAAR,EAAQA,QAAS5W,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsCksD,aAAOouD,GAA5BC,EAAjB,EAAQr1G,QACFssB,EAAuC,OAA3B8oF,EAAkCzjG,EAAU0jG,EACxDt1F,EAAWq0D,eAEjB,OAAO95D,mBAAQ,WACb,IAAKjR,IAAUijB,IAAcxxB,IAAY6W,IAAY5W,IAAYglB,EAAU,MAAO,GAElF,IAAMsgB,EAA4BpuB,YAAkBlX,EAASD,EAAS6W,GACtE,IAAK0uB,EACH,MAAO,GAGT,IAAMi1E,EAAc,GAsBpB,OApBAA,EAAYpnF,KACVqnF,KAAOC,mBAAmBnsG,EAAO,CAC/BosG,eAAe,EACfvwE,gBAAiB,IAAIj0B,KAAQC,KAAKC,OAAO+zB,GAAkB5xB,KAC3DgZ,YACAvM,SAAUA,EAAS/hB,cAInBqL,EAAM0wD,YAAc+4C,KAAUC,aAChCuC,EAAYpnF,KACVqnF,KAAOC,mBAAmBnsG,EAAO,CAC/BosG,eAAe,EACfvwE,gBAAiB,IAAIj0B,KAAQC,KAAKC,OAAO+zB,GAAkB5xB,KAC3DgZ,YACAvM,SAAUA,EAAS/hB,cAKlBs3G,EAAY7zF,KAAI,SAACi0F,GAAD,MAAiB,CAAEA,aAAYr1E,iBACrD,CAAC1uB,EAASuzB,EAAiBnqC,EAASglB,EAAUjlB,EAASwxB,EAAWjjB,K,SAvE3D6rG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCLAS,G,8BAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,2CCI7BE,GAfS,WACtB,IAAQv7G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMo6D,GAAG,OAAT,oBAAmBp6D,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJFw7G,GANO,WACpB,IAAQx7G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BHy7G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjD17G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAOg+G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAM9nD,eAAe,gBAArB,UACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,IAAD,CACEvqC,KAAK,YACLpT,KAAK,WACL2kD,QAAS4gD,EACTpjD,SAAU,kBAAMqjD,GAAgBD,IAChCtjD,MAAM,OAER,cAAC,KAAD,CAAMiF,GAAG,OAAO3iC,MAAO,CAAEwtC,WAAY,QAArC,SACGnoE,EAAE,qBAIP,cAAC,IAAD,CAAQu5D,UAAWoiD,EAAar8F,QAASo8F,EAAzC,SACG17G,EAAE,oBClBPq6F,GAAuB94F,aAAO+4F,KAAP/4F,CAAH,oDAIpBs6G,GAAmBt6G,aAAOu6G,KAAPv6G,CAAH,2FAgEPw6G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAcviD,EAAgB,EAAhBA,UACjEz5D,EAAMC,eAAND,EACA+1C,EAAUD,eAAVC,MArBR93C,qBAAU,WACR,IAAMg+G,EAAsB,SAACz0C,GAG3B,OAFAA,EAAE8pB,kBACF9pB,EAAE00C,kBACK,GAOT,OAJAzjC,SAAS0jC,iBAAiB,yBAAyB38G,SAAQ,SAAC48G,GAC1DA,EAAGtjC,iBAAiB,QAASmjC,GAAqB,MAG7C,WACLxjC,SAAS0jC,iBAAiB,yBAAyB38G,SAAQ,SAAC48G,GAC1DA,EAAGrjC,oBAAoB,QAASkjC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBC,GAAwBxoG,SAASrO,QAAU,CAC1Ck4B,OAAQ2+E,GAAwBxoG,SAAS6pB,OACzC4+E,UAAW,cAAC,GAAD,MAHK,eAKjBD,GAAwBvsG,OAAOtK,QAAU,CACxCk4B,OAAQ2+E,GAAwBvsG,OAAO4tB,OACvC4+E,UAAW,cAAC,GAAD,MAPK,GAWgBP,EAAav2G,SAEjD,OACE,eAAC40F,GAAD,CAAsBxX,SAAS,QAA/B,UACE,cAAC,KAAD,CAAalgC,WAAY5M,EAAM2M,OAAO0U,UAAU4tC,WAAhD,SACE,cAAC,IAAD,CAAS39E,EAAE,YAAX,SAAwBrnB,EAAE,8BAA+B,CAAE29B,OAAQ0+E,EAAa1+E,aAElF,eAAC,KAAD,CAAWtW,EAAE,OAAb,UACE,cAACw0F,GAAD,CAAkBlgE,QAAQ,UAAUye,GAAG,OAAvC,SACE,cAAC,IAAD,UAAMiiD,EAAaE,cAErB,cAAC,GAAD,CAAiBb,oBAAqBjiD,WC7BxC+iD,GAAQj7G,aAAOk2D,KAAPl2D,CAAH,wFAGA,qBAAGw0C,MAAkB2M,OAAO24C,aAGxB,SAASohB,GAAT,GAAiD,IAAD,sBAAhC/kC,EAAgC,EAAhCA,QACvBglC,EAAkBzuD,eAEhBjuD,EAAMC,eAAND,EAGR,EAAoD,CAClD89B,YAAW,OAAC4+E,QAAD,IAACA,OAAD,EAACA,EAAiBzqF,iBAC7B6L,YAAW,OAAC4+E,QAAD,IAACA,OAAD,EAACA,EAAiBxqF,mBAFxByqF,EAAP,KAA4BC,EAA5B,KAIMC,EAA2B98F,mBAC/B,8CAAM,CAAC48F,EAAqBC,UAA5B,aAAM,EAA6Cx1F,QAAO,SAACmgB,GAAD,OAAmBA,aAAargC,eAA1F,QAAoG,KACpG,CAACy1G,EAAqBC,IAIlB3kG,EAAgB6O,cAChBg2F,EACJD,GACAA,EAAgBz1F,QAAO,SAAC1B,GACtB,QAASA,EAAMjgB,WAAWwS,MAGtBb,EAAY/W,cAAZ+W,QAGR,EAAuByL,eAAhBk6F,EAAP,oBAGA,EAA0Bz5F,eAAnBqnB,EAAP,oBAGA,EAAoD4gB,eAA5C75B,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYG,EAAtC,EAAsCA,UACtC,EAA4Fq6B,eAApFc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc5O,EAAjD,EAAiDA,WAAwB++D,EAAzE,EAA6D3wD,WAE7D,EL/Da,SACbC,EACAC,EACA36B,GAEA,MAA6BvxB,cAArBG,EAAR,EAAQA,QAAS4W,EAAjB,EAAiBA,QACTkyB,EAAqBC,eAArBD,iBACF2zE,EAAe37F,cACf9d,EAAU86C,aAAkB,OAAClnC,QAAD,IAACA,SAAW5Z,EAAW8uD,GAEnD5X,EAAc30B,mBAAQ,kBAAM8rC,aAAej6B,EAAY06B,KAAgB,CAACA,EAAe16B,IACvFlB,EAAiBuZ,eAEvB,OAAOlqB,mBAAQ,WACb,IAAKk9F,IAAiBz8G,IAAY8rD,IAAkBC,EAAgB,OAAO8uD,GAE3E,IAAM6B,EAAoBxoE,GAAelxC,IAAYA,EAAQqmC,SAAS6K,GAEtE,OAAI4X,IAAkBn0C,MAASukB,aAAenb,KAAK/gB,GAAU+rD,GACpD,CACL+uD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqBxoE,EAArB,sBACI,4BAAAx2C,EAAA,+EAE4BorC,EAAiB2zE,EAAc,eAAWz/G,EAAW,CAC3EuC,MAAM,KAAD,OAAO20C,EAAYz9B,IAAIpX,SAAS,OAH3C,OAEUw9G,EAFV,OAKI3sF,EAAe2sF,EAAW,CAAExsF,QAAQ,QAAD,OAAU6jB,EAAYY,cAAc,GAApC,kBALvC,gDAOIp0B,QAAQD,MAAM,oBAAd,MAPJ,8DAUAzjB,EACN6uD,WAAY6wD,OAAoB1/G,EAAY,4BAG5Ck/B,aAAenb,KAAK/gB,GAAU8rD,IAAkBC,IAAmBp0C,KAC9D,CACLmjG,SAAUF,GAASkC,OACnBF,QACEF,GAAqBxoE,EAArB,sBACI,4BAAAx2C,EAAA,+EAE4BorC,EAAiB2zE,EAAc,WAAY,CAAC,KAAD,OAC5DvoE,EAAYz9B,IAAIpX,SAAS,OAHpC,OAEUw9G,EAFV,OAKI3sF,EAAe2sF,EAAW,CAAExsF,QAAQ,UAAD,OAAY6jB,EAAYY,cAAc,GAAtC,kBALvC,gDAOIp0B,QAAQD,MAAM,qBAAd,MAPJ,8DAUAzjB,EACN6uD,WAAY6wD,OAAoB1/G,EAAY,6BAGzC69G,KACN,CAAC4B,EAAcz8G,EAAS8rD,EAAeC,EAAgB7X,EAAalxC,EAASktB,EAAgB4Y,IKU5Fi0E,CAAgBt/D,EAAW/8C,KAAMywB,OAAQssB,EAAW/8C,KAAM4wB,QAASF,GAHrE0pF,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGEpxD,WAEIqxD,EAAoBpC,IAAaF,GAASC,eAC1CvsG,EAAQ4uG,OAAWlgH,EAAY0vD,EAE/BkxB,GAAgBs/B,GAAQ,oBAEvBx8G,KAAMywB,MAAQk7B,GAFS,eAGvB3rD,KAAM4wB,OAAS+6B,GAHQ,wBAMvB3rD,KAAMywB,MAAQD,IAAqBxwB,KAAMywB,MAAQk7B,EAAnC,OAAkD/9C,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4lC,aANhD,eAOvBxzC,KAAM4wB,OAASJ,IAAqBxwB,KAAM4wB,OAAS+6B,EAApC,OAAmD/9C,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOymC,cAPlD,GAU9B,GAAgFiW,eAAxEE,GAAR,GAAQA,eAAgBD,GAAxB,GAAwBA,oBAAqBE,GAA7C,GAA6CA,YAAaC,GAA1D,GAA0DA,kBACpDy0B,IAAW28B,EACXj+B,GAAwBrtD,IAAqBxwB,KAAMywB,MAAQzwB,KAAM4wB,OAAS5wB,KAAMywB,MAEhFgsF,GAAkB3+G,uBACtB,SAACe,GACC4rD,GAAYzqD,KAAMywB,MAAO5xB,KAE3B,CAAC4rD,KAEGiyD,GAAmB5+G,uBACvB,SAACe,GACC4rD,GAAYzqD,KAAM4wB,OAAQ/xB,KAE5B,CAAC4rD,KAIH,GAAoFhuD,mBAKjF,CACDkgH,oBAAgBrgH,EAChBugE,eAAe,EACfm6C,sBAAkB16G,EAClB4+C,YAAQ5+C,IATV,8BAASqgH,GAAT,GAASA,eAAgB3F,GAAzB,GAAyBA,iBAAkBn6C,GAA3C,GAA2CA,cAAe3hB,GAA1D,GAA0DA,OAAU0hE,GAApE,MAYMt9B,IAAgB,oBACnB9uD,EAAmBE,GADA,eAEnBmtD,GAAiB2+B,EAAQ,oBACtBt/B,GAAc1sD,UADQ,aACtB,EAAiCkxD,iBADX,QACwB,GADxB,oBAEtBxE,GAAcW,WAFQ,aAEtB,EAA+BzpC,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrlC,QAAH,IAAGA,OAAH,EAAGA,EAAOqlC,MACf4pE,GAA8B3lG,QAClC6lC,EAAW/8C,KAAMywB,QAAUssB,EAAW/8C,KAAM4wB,UAA5C,UAAuDssD,GAAc1sD,UAArE,aAAuD,EAAiCgrD,YAAY/lE,KAAKC,OAAO,MAE5GonG,IAAW7pE,GAGjB,GAAoCzJ,aAA4B57B,EAAO67B,GAAvE,qBAAO/Z,GAAP,MAAiBqtF,GAAjB,MAGA,GAAkDtgH,oBAAkB,GAApE,qBAAOugH,GAAP,MAA0BC,GAA1B,MAGAlgH,qBAAU,WACJ2yB,KAAaoY,KAAcc,SAC7Bq0E,IAAqB,KAEtB,CAACvtF,GAAUstF,KAEd,IAAME,GAA6C3hC,aAAetvB,EAAiBjsD,KAAMywB,QACnF0sF,GAAmBjmG,QAAQgmG,KAAc,UAAIhgC,GAAcl9E,KAAMywB,cAAxB,aAAI,EAA4B8tC,QAAQ2+C,MAGvF,GNzEK,SACLtvG,GAG+F,IAF/F67B,EAE8F,uDAFpEhyB,IAC1BkiG,EAC8F,uCAC9F,EAAsCx6G,cAA9B+W,EAAR,EAAQA,QAAS5W,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QACpBwlB,EAAWF,eAEXy4F,EAAY1D,GAAqB9rG,EAAO67B,EAAiBkwE,GAEzDnqF,EAAiBuZ,eAEN6wE,EAAqBruD,aAAOouD,GAArCp1G,QACFssB,EAAuC,OAA3B8oF,EAAkCzjG,EAAU0jG,EAE9D,OAAO/6F,mBAAQ,WACb,OAAKjR,GAAUvO,GAAY6W,GAAY5W,EAGlCuxB,EAOE,CACLh0B,MAAO48G,GAAkB4D,MACzBniB,SAAS,WAAD,4BAAE,8CAAAl+F,EAAA,sEAC0CkxC,QAAQC,IACxDivE,EAAUp3F,KAAI,SAACmC,GAAU,IAAD,EACtB,EAGIA,EAFF8xF,WAAc5yE,EADhB,EACgBA,WAAYg5C,EAD5B,EAC4BA,KAAMxhF,EADlC,EACkCA,MAChC+lC,EACEzc,EADFyc,SAEI7hC,GAAWlE,GAAS0xD,aAAO1xD,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAA+lC,EAASsE,aAAY7B,GAArB,oBAAoCg5C,GAApC,QAA0Ct9E,KAC9CwmC,MAAK,SAAC+zE,GACL,MAAO,CACLn1F,OACAm1F,kBAGHl0E,OAAM,SAACm0E,GAAc,IAAD,EAGnB,OAFAv9F,QAAQD,MAAM,wDAAyDoI,IAEhE,EAAAyc,EAAS44E,YAAWn2E,GAApB,oBAAmCg5C,GAAnC,QAAyCt9E,KAC7CwmC,MAAK,SAACvgB,GAEL,OADAhJ,QAAQD,MAAM,uDAAwDoI,EAAMo1F,EAAUv0F,GAC/E,CAAEb,OAAMpI,MAAO,IAAI7gB,MAAM,mEAEjCkqC,OAAM,SAACq0E,GAAe,IAAD,EACpBz9F,QAAQD,MAAM,mBAAoBoI,EAAMs1F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAUz/G,YAA9B,aAAoB,EAAgBy+D,UAAWghD,EAAUhhD,QAC1E9pC,EAAY,8DAChB+qF,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAEv1F,OAAMpI,MAAO,IAAI7gB,MAAMyzB,cA/BpC,UACFgrF,EADE,OAsCFC,EAAuBD,EAAe5iG,MAC1C,SAACmgG,EAAI7d,EAAI7yD,GAAT,MACE,gBAAiB0wE,IAAO7d,IAAO7yD,EAAK1O,OAAS,GAAK,gBAAiB0O,EAAK6yD,EAAK,OAxCzE,sBA4CAwgB,EAAaF,EAAez3F,QAAO,SAACiC,GAAD,MAA8B,UAAWA,MACnE2T,OAAS,GA7ClB,sBA6C2B+hF,EAAWA,EAAW/hF,OAAS,GAAG/b,MA7C7D,aA8CA,IAAI7gB,MAAM,8EA9CV,gBAuDJ0+G,EALFz1F,KACEyc,EAnDI,EAmDJA,SAnDI,IAoDJq1E,WAAc5yE,EApDV,EAoDUA,WAAYg5C,EApDtB,EAoDsBA,KAAMxhF,EApD5B,EAoD4BA,MAElCy+G,EACEM,EADFN,YAtDM,kBAyDD14E,EAASyC,GAAT,MAAAzC,EAAQ,YAAgBy7C,GAAhB,sBACb/2C,SAAUn0B,YAAmBmoG,GAC7Bz4F,YACIhmB,IAAU0xD,aAAO1xD,GAAS,CAAEA,QAAO0E,KAAM2S,GAAY,CAAE3S,KAAM2S,OAEhEqzB,MAAK,SAACzH,GACL,IAAMg8E,EAAclwG,EAAM4lC,YAAYx8B,SAASylB,OACzCshF,EAAenwG,EAAMymC,aAAar9B,SAASylB,OAC3C+W,EAAc5lC,EAAM4lC,YAAYY,cAAc,GAC9CC,EAAezmC,EAAMymC,aAAaD,cAAc,GAEhDnuB,EAAI,eAAWutB,EAAX,YAA0BsqE,EAA1B,gBAA6CzpE,EAA7C,YAA6D0pE,GACjEC,EACJntF,IAAc3a,EACV+P,EADJ,UAEOA,EAFP,eAGM0zF,GAA0B3kG,YAAU2kG,GAChCr+D,aAAaq+D,GACbA,GAOZ,OAJAnqF,EAAesS,EAAU,CACvBnS,QAASquF,IAGJl8E,EAASrS,QAEjB2Z,OAAM,SAACrpB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOsjC,MACH,IAAInkD,MAAM,0BAGhB8gB,QAAQD,MAAR,cAA6BA,EAAOsnB,EAAYg5C,EAAMxhF,GAChD,IAAIK,MAAJ,uBAA0B6gB,EAAM08C,eA3FpC,4CAAF,kDAAC,GA+FT18C,MAAO,MAvGwB,OAA3B45F,EACK,CAAE98G,MAAO48G,GAAkB37D,QAASo9C,SAAU,KAAMn7E,MAAO,qBAE7D,CAAEljB,MAAO48G,GAAkB57D,QAASq9C,SAAU,KAAMn7E,MAAO,MAN3D,CAAEljB,MAAO48G,GAAkB37D,QAASo9C,SAAU,KAAMn7E,MAAO,0BA4GnE,CAACnS,EAAOvO,EAAS6W,EAAS5W,EAASuxB,EAAW8oF,EAAwByD,EAAW5tF,EAAgB3K,IMpDvCo5F,CAAgBrwG,EAAO67B,EAAiB5Y,GAAnFqtF,GAAlB,GAAQhjB,SAA+BijB,GAAvC,GAAgCp+F,MAExBszB,GAA0BN,aAA2BnlC,GAArDylC,sBAER,GAAwBpxB,eAAjB29C,GAAP,qBAEMw+C,GAAatgH,uBAAY,WACzBu1C,KClKO,SAAsCA,GACnD,OAAKA,EAAsB1K,SAAS1wB,OAU/Bo7B,EAAsB1K,SAAS3wB,MAE3BkiC,OAAOg8C,QAAP,mDACuCl+E,IAA0BtV,QACpE,GAFG,sEALC,YAJNw3C,OAAOgtB,OAAP,mDAC8CjvD,IAAqCvV,QAC/E,GAFJ,kED8J4B27G,CAA6BhrE,KAGtD6qE,KAGLtB,GAAa,CAAE//C,eAAe,EAAM8/C,kBAAgB3F,sBAAkB16G,EAAW4+C,YAAQ5+C,IACzF4hH,KACG30E,MAAK,SAAC9Z,GACLmtF,GAAa,CAAE//C,eAAe,EAAO8/C,kBAAgB3F,sBAAkB16G,EAAW4+C,OAAQzrB,OAE3F2Z,OAAM,SAACrpB,GACN68F,GAAa,CACX//C,eAAe,EACf8/C,kBACA3F,iBAAkBj3F,EAAM08C,QACxBvhB,YAAQ5+C,UAGb,CAAC+2C,GAAuB6qE,GAAcvB,KAGzC,GAAwClgH,oBAAkB,GAA1D,qBAAOy6G,GAAP,MAAqBC,GAArB,MAGMO,GAAsB3jE,aAAgBV,IAItCirE,IACHxC,IACApsF,KAAaoY,KAAce,cAC1BnZ,KAAaoY,KAAcc,SAC1Bo0E,IAAqBttF,KAAaoY,KAAcY,aACjDgvE,GAAsB,IAAMmE,GAE1B0C,GAAuBzgH,uBAAY,WACvC8+G,GAAa,CAAED,kBAAgB9/C,iBAAem6C,oBAAkB97D,YAE5DA,IACFuP,GAAYzqD,KAAMywB,MAAO,MAE1B,CAACosC,GAAepS,GAAausD,GAAkB2F,GAAgBzhE,KAE5DsjE,GAAsB1gH,uBAAY,WACtC8+G,GAAa,CAAED,eAAgB/uG,EAAOopG,oBAAkB97D,UAAQ2hB,qBAC/D,CAACA,GAAem6C,GAAkBppG,EAAOstC,KAG5C,GAAsDz+C,mBAAS,MAA/D,qBAAOgiH,GAAP,MAA4BC,GAA5B,MACA,GAAoC32C,aAAS,cAAC,GAAD,CAAkB+yC,aAAc2D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAC9D,GAC7B,IAAM+D,EAAiBzgH,OAAO0gH,QAAQrJ,IAAmB16F,MAAK,SAACgkG,GAC7D,IAAMC,EAAmBD,EAAmB,GAC5C,OAAOjE,EAAav2G,UAAYy6G,EAAiBz6G,WAEnD,OAAO2S,QAAQ2nG,IAGjB9hH,qBAAU,WACJ0hH,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBnhH,uBACxB,SAACstD,GACC6xD,IAAqB,GACrB1yD,GAAoBvqD,KAAMywB,MAAO26B,GACjC,IAAM8zD,EAAkBN,GAAsBxzD,GAE5CszD,GADEQ,EACqB9zD,EAEA,QAG3B,CAACb,KAGG40D,GAAiBrhH,uBAAY,WAC7Bo/G,IACFzyD,GAAYzqD,KAAMywB,MAAOysF,GAAex7B,aAEzC,CAACw7B,GAAgBzyD,KAEd20D,GAAqBthH,uBACzB,SAACutD,GACCd,GAAoBvqD,KAAM4wB,OAAQy6B,GAClC,IAAM6zD,EAAkBN,GAAsBvzD,GAE5CqzD,GADEQ,EACqB7zD,EAEA,QAI3B,CAACd,KAGG80D,GAAoBj/C,aAA2B,OAACrjB,QAAD,IAACA,OAAD,EAACA,EAAYtsB,MAAb,OAAoBssB,QAApB,IAAoBA,OAApB,EAAoBA,EAAYnsB,QAErF,GAA2Cm3C,aACzC,cAAC,GAAD,CAAyBz0D,OAAQsoG,EAA0B3C,SAAU,kBAAMziC,EAAQ/jD,KAAK,cADnF6sF,GAAP,qBAIAviH,qBAAU,WACJ6+G,EAAyB9/E,OAAS,GACpCwjF,OAGD,CAAC1D,EAAyB9/E,SAE7B,OAAgCisC,aAC9B,cAAC,GAAD,CACEn6D,MAAOA,EACPiqG,cAAe8E,GACflF,gBAAiB+G,GACjB3hD,cAAeA,GACf3hB,OAAQA,GACRrqB,UAAWA,EACX4Y,gBAAiBA,EACjBstE,UAAWqH,GACXpH,iBAAkBA,GAClBp6C,gBAAiB2hD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBAkBA,OACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAWzlE,MAAOh7C,EAAE,YAAamqE,SAAUnqE,EAAE,gCAC7C,eAAC,GAAD,CAAS+b,GAAG,YAAZ,UACE,eAAC,KAAD,CAAY7Z,IAAI,KAAhB,UACE,cAACuvE,GAAA,EAAD,CACEG,MAAOlgD,IAAqBxwB,KAAM4wB,SAAW4rF,GAAY5uG,EAAQ9O,EAAE,oBAAsBA,EAAE,QAC3FD,MAAOygF,GAAiBt/E,KAAMywB,OAC9BggD,eAAgB0sC,GAChBnmG,SAAU+lC,EAAW/8C,KAAMywB,OAC3Bg6B,YAAagyD,GACbjsC,MAAO2uC,GACPxuC,iBAAkBsuC,GAClBnuC,cAAe/zB,EAAW/8C,KAAM4wB,QAChC/V,GAAG,wBAEL,cAAC,KAAD,CAAYpa,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAASo7G,EAAe,gBAAkB,SAAUpiF,MAAO,CAAE/4B,QAAS,UAA/E,UACE,cAACs1G,GAAD,CAAcC,WAAS,EAAvB,SACE,cAAC,IAAD,CACE11G,MAAM,OACN6d,QAAS,WACP6+F,IAAqB,GACrBzyD,MAEFxsC,MAAO++B,EAAW/8C,KAAMywB,QAAUssB,EAAW/8C,KAAM4wB,QAAU,UAAY,WAG9D,OAAdC,IAAuB2rF,GAAYX,EAClC,cAAC,IAAD,CAAQphE,QAAQ,OAAO5/B,GAAG,uBAAuBuD,QAAS,kBAAMssC,GAAkB,KAAlF,SACG5rD,EAAE,6BAEH,UAGR,cAACyxE,GAAA,EAAD,CACE1xE,MAAOygF,GAAiBt/E,KAAM4wB,QAC9B65B,YAAaiyD,GACbhsC,MAAOlgD,IAAqBxwB,KAAMywB,QAAU+rF,GAAY5uG,EAAQ9O,EAAE,kBAAoBA,EAAE,MACxF2xE,eAAe,EACfz5D,SAAU+lC,EAAW/8C,KAAM4wB,QAC3B+/C,iBAAkByuC,GAClBtuC,cAAe/zB,EAAW/8C,KAAMywB,OAChC5V,GAAG,yBAGJghG,GAA8B,OAAdhrF,IAAuB2rF,EACtC,qCACE,eAAC,KAAD,CAAS/7G,QAAQ,gBAAgBg5B,MAAO,CAAE/4B,QAAS,UAAnD,UACE,cAACs1G,GAAD,CAAcC,WAAW,EAAzB,SACE,cAAC,IAAD,CAAe11G,MAAM,WAEvB,cAAC,IAAD,CAAQk6C,QAAQ,OAAO5/B,GAAG,0BAA0BuD,QAAS,kBAAMssC,GAAkB,OAArF,SACG5rD,EAAE,sBAGP,cAAC+2G,GAAD,CAAmBh7F,GAAG,YAAYhc,MAAOgyB,EAAWwmC,SAAU3M,QAE9D,KAEH8xD,EAAW,KACV,eAAC,KAAD,CAAYx7G,IAAI,MAAMy4B,MAAO,CAAE/4B,QAAS,UAAxC,UACGwW,QAAQtJ,IACP,eAACxN,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC86G,GAAD,UAAQx8G,EAAE,WACV,cAAC85G,GAAD,CACErkE,MAAK,OAAE3mC,QAAF,IAAEA,OAAF,EAAEA,EAAOsmC,eACdgjE,aAAcA,GACdC,gBAAiBA,QAItB1tE,IAAoBhyB,KACnB,eAACrX,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC86G,GAAD,UAAQx8G,EAAE,wBACV,eAAC,KAAD,CAAMi4D,MAAI,EAAC/4C,MAAM,UAAjB,UACGyrB,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAKypB,GAAG,OAAR,UACGmsD,GACC,cAAC,IAAD,CAAQ9+G,MAAM,OAAO83D,UAAQ,EAACa,GAAG,MAAjC,SACGp6D,EAAE,uBAEFoX,EAEDsmG,EACF,cAAC,IAAD,CAAQj8G,MAAM,OAAO83D,SAAUnhD,QAAQqlG,GAAiBn+F,QAASk+F,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUpjF,MAAO,CAAEi5B,UAAW,UAA9B,UACE,cAAC,KAAD,CAAM10C,MAAM,aAAak7C,GAAG,MAA5B,SACGp6D,EAAE,4CAEJ8gE,IACC,cAAC,KAAD,CAAM5hD,MAAM,aAAak7C,GAAG,MAA5B,SACGp6D,EAAE,uCAIPw/G,GACF,eAACl+G,GAAA,EAAD,WACE,cAAC,IAAD,CACEq6C,QAAS/qB,KAAaoY,KAAcY,SAAW,UAAY,UAC3DtqB,QAAS2+F,GACT1kD,SAAU3oC,KAAaoY,KAAce,cAAgBm0E,GACrDz8G,MAAM,MAJR,SAMGmvB,KAAaoY,KAAcc,QAC1B,eAAC,KAAD,CAAS5nC,IAAI,MAAMP,QAAQ,SAA3B,UACG3B,EAAE,YADL,IACkB,cAACupE,GAAA,EAAD,CAAcuB,OAAO,aAErCozC,IAAqBttF,KAAaoY,KAAcY,SAClD5pC,EAAE,WAEFA,EAAE,iBAAkB,CAAEq6D,MAAK,oBAAEpc,EAAW/8C,KAAMywB,cAAnB,aAAE,EAAyBgM,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACEge,QAAS0kC,IAAWu4B,GAAsB,EAAI,SAAW,UACzDt5F,QAAS,WACHy9F,EACFuC,MAEAxB,GAAa,CACXD,eAAgB/uG,EAChBivD,eAAe,EACfm6C,sBAAkB16G,EAClB4+C,YAAQ5+C,IAEVijH,OAGJh/G,MAAM,MACNsa,GAAG,cACHw9C,UACG8mB,IAAWzvD,KAAaoY,KAAcY,UAAagvE,GAAsB,IAAMmE,EAlBpF,SAsBM/8G,EADH44G,GAAsB,IAAMmE,EACvB,oBACFnE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACEj9D,QAAS0kC,IAAWu4B,GAAsB,IAAMyG,GAAoB,SAAW,UAC/E//F,QAAS,WACHy9F,EACFuC,MAEAxB,GAAa,CACXD,eAAgB/uG,EAChBivD,eAAe,EACfm6C,sBAAkB16G,EAClB4+C,YAAQ5+C,IAEVijH,OAGJ1kG,GAAG,cACHta,MAAM,OACN83D,UAAW8mB,IAAYu4B,GAAsB,IAAMmE,KAAmBsC,GAjBxE,SAmBGrC,IACEpE,GAAsB,IAAMmE,EAA5B,wBAGG/8G,EADA44G,GAAsB,EACpB,cACA,WAxFV,cAACn0D,GAAA,EAAD,CAAqBhjD,MAAM,SA2F5B+9G,IACC,cAAC1qG,GAAA,EAAD,CAAQ6lB,MAAO,CAAEmoD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAe43B,MAAO,CAAC9pF,KAAaoY,KAAcY,cAGrDmzE,GAAgB7E,GAAmB,cAACN,GAAD,CAAmB32F,MAAOi3F,KAAuB,cAIzFqI,GAGA,cAACzkC,GAAA,EAAD,CAA2B79B,WAAY,CAACA,EAAWtsB,MAAOssB,EAAWnsB,UAFrE,cAAC8nF,GAAD,CAA6B9qG,MAAOA,O,cEzerC,SAAS4xG,KACd,OAAO,cAAC,KAAD,CAAUh0D,GAAG,UAGtB,IAAMi0D,GAAqB,oDACpB,SAASC,GAAqCrhG,GACnD,IAKMngB,EADFmgB,EAHFngB,MACEqqB,OAAUm1D,YAGYx/E,MAAMuhH,IAChC,cAAIvhH,QAAJ,IAAIA,OAAJ,EAAIA,EAAO49B,QACF,cAAC,KAAD,CAAU0vB,GAAE,eAAUttD,EAAM,GAAhB,YAAsBA,EAAM,MAG1C,cAACu/E,GAAA,QAAD,gBAAkBp/D,IAGpB,SAASshG,GAA0BthG,GACxC,MAIIA,EAHFngB,MACEqqB,OAAUm1D,EAFd,EAEcA,YAAaC,EAF3B,EAE2BA,YAG3B,OAAID,EAAYt1D,gBAAkBu1D,EAAYv1D,cACrC,cAAC,KAAD,CAAUojC,GAAE,eAAUkyB,KAExB,cAACD,GAAA,QAAD,gBAAkBp/D,IC7B3B,IAAMohG,GAAqB,4CAcZG,OAZf,YAI6C,IAF/BtsG,EAE8B,EAH1CpV,MACEqqB,OAAUjV,OAGZ,IAAKmsG,GAAmB1jF,KAAKzoB,GAC3B,OAAO,cAAC,KAAD,CAAUk4C,GAAG,UAEtB,MAA+Bl4C,EAAOzP,MAAM,KAA5C,mBAAOw1B,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUkyB,GAAE,kBAAanyB,EAAb,YAA0BC,MCXxC,SAASumF,GAAT,GAAoE,IAAlCtqC,EAAiC,EAAjCA,SACvC,OAAO,cAAC,KAAD,CAAU/pB,GAAE,6BAAO+pB,GAAP,IAAiB3U,SAAU,YAIzC,SAASk/C,GAAezhG,GAC7B,IACEk3D,EAKEl3D,EALFk3D,SACYvoB,EAIV3uC,EAJFk3D,SAAYvoB,OAEA3B,EAEVhtC,EAHFngB,MACEqqB,OAAU8iC,eAId,OACE,cAAC,KAAD,CACEG,GAAE,6BACG+pB,GADH,IAEA3U,SAAU,QACV5T,OACEA,GAAUA,EAAOlxB,OAAS,EAA1B,UACOkxB,EADP,2BACgC3B,GADhC,0BAEuBA,O,qCCjB3B00D,GAAW1/G,KAAO2/G,IAAV,uIAQRC,GAAe,WACnBC,aAAS,CACPC,QAAQ,EACRC,cAAe,IACfC,cAAe,GACfC,QAAS,GACTC,OAAQ,IACRC,OAAQ,CACNpxF,EAAG,GACHqxF,EAAG,OAyCMC,GAhC2C,SAAC,GAAyB,IAAvBnoD,EAAsB,EAAtBA,UAAWjK,EAAW,EAAXA,KAC9DxvD,EAAMC,eAAND,EAQR/B,qBAAU,WACRg9D,iBAAMkmD,GAAc,OACnB,IAMH,OACE,cAAC,KAAD,CAAOnmE,MAAOh7C,EAAE,oBAAqBy5D,UAAWA,EAAhD,SACE,eAAC,IAAD,CAAMrG,cAAc,SAASW,WAAW,SAASD,eAAe,SAAhE,UACE,cAAC,IAAD,CAAMwT,SAAS,OAAOvT,WAAW,SAASD,eAAe,SAAzD,SANGtE,EAAKtoC,KAAI,SAAC6+B,GAAD,OAAS,cAACk7D,GAAD,CAAuB/qC,IAAG,uBAAkBnwB,EAAIM,OAAO4I,KAAxClJ,EAAIhqC,SASxC,cAAC,KAAD,CAAM63C,UAAU,SAASqE,MAAI,EAAC/4C,MAAM,YAAYg1C,SAAS,OAAOkG,GAAG,OAAnE,SACG5K,EAAKxyB,OAAS,EAAIh9B,EAAE,kCAAoCA,EAAE,4BAE7D,cAAC,IAAD,CAAQsf,QAtBM,WAClBm6C,IACAie,KAAQ/jD,KAAK,kBAoBT,SAA+B3zB,EAAE,qB,oEC9C5B6hH,GAAqB,CAChCC,UAAU,EACVC,SAAU,MAGCC,GAAc,uCAAG,WAC5B5qG,EACA6qG,EACApiE,GAH4B,eAAA3hD,EAAA,yDAKtBgkH,EAAqBrjG,gBAEvBghC,EAPwB,0CASUqiE,EAAmBC,aAAa/qG,EAASyoC,GATnD,2DAYf,CACLiiE,UAAU,EACVC,SAAU,CAAEK,QAASH,EAAapiE,YAAW5Z,OAAQ,OAdjC,gEAkBxB/kB,QAAQD,MAAR,4CAlBwB,kBAmBjB4gG,IAnBiB,iCAuBrBA,IAvBqB,0DAAH,0DA0BdQ,GAAa,uCAAG,WAC3BjrG,EACA6qG,EACA38B,GAH2B,2BAAApnF,EAAA,yDAKrBgkH,EAAqBrjG,kBAErByjG,EAAuBh9B,EAAWl+D,QAAO,SAACkY,GAAD,OAAWA,EAAMT,YACvC7B,OAAS,GARP,sCASFslF,EATE,GASlBC,EATkB,cAUCnrC,aAA4BhgE,EAASmrG,EAAa1iE,WAVnD,UAUnBwC,EAVmB,OAWnBmgE,EAAiBngE,EAAYj7B,QAAO,SAACo7B,GAAD,OAAYA,EAAOhe,aACvDi+E,EAAsBpgE,EAAY3b,QAAQ87E,EAAe,KAErC,GAdD,0CAehBX,IAfgB,mCAkBWK,EAAmBQ,aACnDtrG,EACAmrG,EAAa1iE,UACb4iE,EAAoB5iH,YArBC,6DAwBd,CACLiiH,UAAU,EACVC,SAAU,CACRK,QAASH,EACTpiE,UAAW0iE,EAAa1iE,UACxB5Z,OAAQw8E,EAAoB5iH,cA7BX,kEAkCvBqhB,QAAQD,MAAR,2CAlCuB,kBAmChB4gG,IAnCgB,iCAsCpBA,IAtCoB,2DAAH,0DAyCbc,GAAc,uCAAG,WAC5BvrG,EACA6qG,EACApiE,GAH4B,eAAA3hD,EAAA,6DAKtBgkH,EAAqBrjG,eALC,kBAQEqjG,EAAmBU,qBAAqBxrG,GAR1C,4DAWY8qG,EAAmBW,aAAazrG,GAX5C,4DAab,CACL0qG,UAAU,EACVC,SAAU,CAAEK,QAASH,EAAapiE,YAAW5Z,OAAQ,OAfnC,iEAmBtB/kB,QAAQD,MAAR,4CAnBsB,kBAoBf4gG,IApBe,iEAwB1B3gG,QAAQD,MAAR,wCAA+C7J,GAA/C,MAxB0B,kBAyBnByqG,IAzBmB,iCA2BrBA,IA3BqB,iEAAH,0DCYZiB,GAtFgB,WAK7B,IAAQ1rG,EAAY9W,eAAZ8W,QACFiL,EAAW+H,eACXs3B,EAAmBslC,eACnB+7B,EAAsBrhE,GAAoB1gD,SAAS0gD,GACzD,EAAoC/jD,mBAAsB,MAA1D,mBAAO2nF,EAAP,KAAmB09B,EAAnB,KA0EA,OAxEA/kH,qBAAU,WACRokB,EAASkuC,kBACR,CAACluC,IAEJpkB,qBAAU,WACR+kH,EAAc,QACb,CAAC5rG,IAEJnZ,qBAAU,WA8BJmZ,GAAW2rG,IAAwBz9B,GA7BtB,uCAAG,oDAAApnF,EAAA,6DACZ+kH,EAA4Bp8G,eAC5BkiB,EAAQ,CACZ,CACES,KAAM,oBACN/jB,QAASw9G,EACTx5F,OAAQ,IAEV,CACED,KAAM,oBACN/jB,QAASw9G,EACTx5F,OAAQ,KAXM,SAeyBM,aAAYjL,GAAwBiK,GAf7D,OAoBlB,IApBkB,kDAeVm6F,EAfU,2BAeIC,EAfJ,KAgBZC,EAAuBF,EAAWz/G,WAClC4/G,EAAuBF,EAAW1/G,WAElC6/G,EAAkB,GACfz5F,EAAIu5F,EAAsBv5F,GAAKw5F,EAAsBx5F,IAC5Dy5F,EAAgB3vF,KAAhB,UAAwB9J,IArBR,iBAuBcsnC,aAAoB/5C,OAAS5Z,OAAWA,EAAW,CACjF+lH,WAAYD,IAxBI,QAuBZE,EAvBY,OA0BlBR,EAAcQ,EAAkBn+E,QA1Bd,4CAAH,oDA8Bfo+E,KAED,CAACV,EAAqBz9B,EAAYluE,IA+B9B,CAAEssG,eA7Bc1kH,sBAAW,sBAAC,oCAAAd,EAAA,yDAC5BonF,GAAoC,IAAtBA,EAAWtoD,OADG,yCAExB6kF,IAFwB,gBAKlB9yD,KAAKslB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,WAAnBA,EAAIuJ,cAAtCvzC,EALyB,EAKzBA,GALyB,cAMbupE,EANa,GAM1B6B,EAN0B,cAOP66B,GAAe5qG,EAAS2E,EAAIorE,EAAUtnC,WAP/B,cAO3B8jE,EAP2B,yBAQ1BA,GAR0B,2CAShC,CAACvsG,EAASkuE,IAoBYs+B,cAlBH5kH,sBAAW,sBAAC,gCAAAd,EAAA,yDAC3BonF,GAAoC,IAAtBA,EAAWtoD,OADE,yCAEvB6kF,IAFuB,gBAKjB9yD,KAAKslB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,UAAnBA,EAAIuJ,cAAtCvzC,EALwB,EAKxBA,GALwB,SAMPsmG,GAAcjrG,EAAS2E,EAAIupE,GANpB,cAM1Bu+B,EAN0B,yBAOzBA,GAPyB,2CAQ/B,CAACzsG,EAASkuE,IAU2Bw+B,eARjB9kH,sBAAW,sBAAC,kCAAAd,EAAA,+DAClB6wD,KAAKslB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,WAAnBA,EAAIuJ,cAAtCvzC,EADyB,EACzBA,GACF8jC,EAAYylC,GAAcA,EAAWtoD,OAAS,GAAKsoD,EAAW,GAAGzlC,UAFtC,SAIP8iE,GAAevrG,EAAS2E,EAAI8jC,GAJrB,cAI3B8jE,EAJ2B,yBAK1BA,GAL0B,2CAMhC,CAACvsG,EAASkuE,MCdAy+B,GA7DuD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACjEC,EAAoBtjH,kBAAO,GACjC,EAA0ChD,mBAAgB,IAA1D,mBAAOumH,EAAP,KAAsBC,EAAtB,KACA,EAA6Bl7C,aAAS,cAAC,GAAD,CAAkBzZ,KAAM00D,KAAvDE,EAAP,oBACQhtG,EAAY9W,eAAZ8W,QACA0qD,EAAa3T,eAAb2T,SACR,EAA0DghD,KAAlDgB,EAAR,EAAQA,eAAgBJ,EAAxB,EAAwBA,eAAgBE,EAAxC,EAAwCA,cAoDxC,OAjDA3lH,qBAAU,WA6BJmZ,GA5BkB,uCAAG,0CAAAlZ,EAAA,6DACjB8lC,EAAmB,GAEnBqgF,EAAe,CACnBC,OAAQ90D,KAAK6kB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,WAAnBA,EAAIuJ,cACvCi1D,MAAO/0D,KAAK6kB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,UAAnBA,EAAIuJ,cACtCk1D,OAAQh1D,KAAK6kB,QAAQp4D,MAAK,SAAC8pC,GAAD,MAA4B,WAAnBA,EAAIuJ,eANlB,SASuBw0D,IATvB,uBASLW,EATK,EASf3C,SATe,SAUuB4B,IAVvB,uBAULgB,EAVK,EAUf5C,SAVe,UAWsB8B,IAXtB,iBAWLe,EAXK,EAWf7C,SAEJ2C,GACFzgF,EAAUrQ,KAAK0wF,EAAaG,QAG1BE,GACF1gF,EAAUrQ,KAAK0wF,EAAaC,QAG1BK,GACF3gF,EAAUrQ,KAAK0wF,EAAaE,OAG9BJ,EAAiBngF,GAzBM,4CAAH,oDA6BpB4gF,KAED,CAACxtG,EAAS0sG,EAAgBJ,EAAgBE,IAG7C3lH,qBAAU,WACR,IAAM4mH,EAAuBb,EAAiBpmE,MAAK,SAAC64B,GAAD,OAAc3U,EAAS1xC,SAASqmD,MAE/EytC,EAAclnF,OAAS,IAAM6nF,IAAyBZ,EAAkBljH,UAC1EqjH,IACAH,EAAkBljH,SAAU,KAE7B,CAAC+gE,EAAUkiD,EAAkBC,EAAmBG,EAAoBF,IAGvEjmH,qBAAU,WACRgmH,EAAkBljH,SAAU,IAC3B,CAACqW,EAAS6sG,IAEN,MC/CHa,GAAOC,gBAAK,kBAAM,mCAClBC,GAAQD,gBAAK,kBAAM,mCACnBE,GAAcF,gBAAK,kBAAM,kCACzBG,GAAUH,gBAAK,kBAAM,mCACrBI,GAAOJ,gBAAK,kBAAM,mCAClBK,GAAWL,gBAAK,kBAAM,mCACtBM,GAAeN,gBAAK,kBAAM,mCAC1BO,GAAQP,gBAAK,kBAAM,mCACnBQ,GAAOR,gBAAK,kBAAM,mCAClBS,GAAUT,gBAAK,kBAAM,kCACrBU,GAAqBV,gBAAK,kBAAM,mCAChCW,GAAcX,gBAAK,kBAAM,yDACzBY,GAAyBZ,gBAAK,kBAAM,mCACpCa,GAASb,gBAAK,kBAAM,mCACpBc,GAAWd,gBAAK,kBAAM,yDACtBe,GAAiBf,gBAAK,kBAAM,yDAC5BpmC,GAAeomC,gBAAK,kBAAM,4CAC1BgB,GAAYhB,gBAAK,kBAAM,mCACvBiB,GAAajB,gBAAK,kBAAM,mCACxBkB,GAAkBlB,gBAAK,kBAAM,mCAC7BmB,GAAOnB,gBAAK,kBAAM,yDAGxBtiH,KAAUwS,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGlB,IAAMwtE,GAAgB,WAMpB,OALAlmC,cACAujD,KACAxqB,eACAx8B,eAGE,eAAC,KAAD,CAAQ0+B,QAASA,KAAjB,UACE,cAAC,KAAD,IACA,cAACyuC,GAAD,IACA,cAAC,GAAD,CAAwBnC,iBAAkB,CAAC,mBAC3C,cAAC,GAAD,UACE,cAAC,GAAD,CAAwBviB,SAAU,cAAC1Z,GAAA,EAAD,IAAlC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO77B,KAAK,QAAQk6D,OAAK,EAAzB,SACE,cAACtB,GAAD,MAEF,cAAC,KAAD,CAAOsB,OAAK,EAACl6D,KAAK,iBAAlB,SACE,cAAC+4D,GAAD,MAEF,cAAC,KAAD,CAAO/4D,KAAK,SAAZ,SACE,cAAC84D,GAAD,MAEF,cAAC,KAAD,CAAO94D,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACE,cAACg5D,GAAD,MAEF,cAAC,KAAD,CAAOh5D,KAAK,OAAZ,SACE,cAACi5D,GAAD,MAEF,cAAC,KAAD,CAAOj5D,KAAK,gBAAZ,SACE,cAACm5D,GAAD,MAEF,cAAC,KAAD,CAAOe,OAAK,EAACl6D,KAAK,SAAlB,SACE,cAACo5D,GAAD,MAEF,cAAC,KAAD,CAAOp5D,KAAK,aAAZ,SACE,cAACq5D,GAAD,MAEF,cAAC,KAAD,CAAOr5D,KAAK,WAAZ,SACE,cAACs5D,GAAD,MAEF,cAAC,KAAD,CAAOt5D,KAAK,eAAZ,SACE,cAACu5D,GAAD,MAEF,cAAC,KAAD,CAAOW,OAAK,EAACl6D,KAAK,cAAlB,SACE,cAACw5D,GAAD,MAEF,cAAC,KAAD,CAAOx5D,KAAK,0BAAZ,SACE,cAACy5D,GAAD,MAEF,cAAC,KAAD,CAAOS,OAAK,EAACl6D,KAAK,UAAlB,SACE,cAAC05D,GAAD,MAEF,cAAC,KAAD,CAAOQ,OAAK,EAACl6D,KAAK,0BAAlB,SACE,cAAC45D,GAAD,MAEF,cAAC,KAAD,CAAO55D,KAAK,uBAAZ,SACE,cAAC25D,GAAD,MAGF,eAAC,KAAD,CAAO35D,KAAK,IAAZ,UACA,cAAC,KAAD,CAAUQ,GAAG,2DACX,cAACw5D,GAAD,OAMF,cAAC,KAAD,CAAOE,OAAK,EAACC,QAAM,EAACn6D,KAAK,QAAQqwD,UAAWE,KAC5C,cAAC,KAAD,CAAO2J,OAAK,EAACC,QAAM,EAACn6D,KAAK,wBAAwBqwD,UAAWyE,KAC5D,cAAC,KAAD,CAAOoF,OAAK,EAACC,QAAM,EAACn6D,KAAK,QAAQqwD,UAAWwE,KAC5C,cAAC,KAAD,CAAOqF,OAAK,EAACC,QAAM,EAACn6D,KAAK,QAAQqwD,UAAWyJ,KAC5C,cAAC,KAAD,CAAOI,OAAK,EAACC,QAAM,EAACn6D,KAAK,aAAaqwD,UAAWwJ,KACjD,cAAC,KAAD,CAAOK,OAAK,EAACC,QAAM,EAACn6D,KAAK,UAAUqwD,UAAWmE,KAC9C,cAAC,KAAD,CAAO0F,OAAK,EAACl6D,KAAK,OAAOqwD,UAAW59B,KACpC,cAAC,KAAD,CAAOynC,OAAK,EAACl6D,KAAK,oBAAoBqwD,UAAWqE,KACjD,cAAC,KAAD,CAAOwF,OAAK,EAACl6D,KAAK,iCAAiCqwD,UAAWsE,KAC9D,cAAC,KAAD,CAAOuF,OAAK,EAACl6D,KAAK,UAAUqwD,UAAW59B,KACvC,cAAC,KAAD,CAAOynC,OAAK,EAACl6D,KAAK,uBAAuBqwD,UAAWqE,KACpD,cAAC,KAAD,CAAOwF,OAAK,EAACl6D,KAAK,oCAAoCqwD,UAAWsE,KACjE,cAAC,KAAD,CAAOuF,OAAK,EAACC,QAAM,EAACn6D,KAAK,kBAAkBqwD,UAAWuE,KACtD,cAAC,KAAD,CAAOsF,OAAK,EAACC,QAAM,EAACn6D,KAAK,oCAAoCqwD,UAAW0J,KAGxE,cAAC,KAAD,CAAO/5D,KAAK,QAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,iBAEf,cAAC,KAAD,CAAOR,KAAK,WAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,aAEf,cAAC,KAAD,CAAOR,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,aAEf,cAAC,KAAD,CAAOR,KAAK,OAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,oBAKf,cAAC,KAAD,CAAO6vD,UAAW6I,YAIxB,cAAC,GAAD,CAAWkB,WAAY,IACvB,cAAC,KAAD,IACA,cAACzrB,GAAA,EAAD,QAKSrqB,OAAMzoD,KAAK46D,I,8BC9JpB4jC,GAAuB,SAAChnG,GAC5B,MAAiByD,eAAVC,EAAP,oBACA,OAAO,cAAC,KAAD,cAAe8yB,MAAO9yB,EAASujG,KAAOC,MAAWlnG,KAuB3CmnG,GApBa,SAAC,GAAkB,IAAhBhpH,EAAe,EAAfA,SAC7B,OACE,cAAC,KAAD,CAAmB6nE,WAAYA,KAA/B,SACE,cAAC,IAAD,CAAU/vC,MAAOA,KAAjB,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,KAAD,UACE,cAACq5B,GAAA,EAAD,UACE,cAAC,KAAD,UAAgBnxD,mBCjBlC,SAASipH,KACP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAKN,SAASC,GAAT,GAA2D,IAAtClpH,EAAqC,EAArCA,SACX0Z,EAAY/W,cAAZ+W,QAER,OADyB2I,mBAAQ,kBAAM3H,QAAQhB,IAAmD,IAAxCsC,IAAkBgtB,QAAQtvB,MAAkB,CAACA,IAE9F,kDAEF,mCAAG1Z,IAGZmpH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,UACE,eAAC,GAAD,WACE,cAACD,GAAD,IACA,cAAC,GAAD,WAINluC,SAASuuC,eAAe,W","file":"static/js/main.da864f30.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new Token(\n    MAINNET,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.cake.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { Nft } from 'config/constants/nfts/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 219,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: serializedTokens.axs,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: serializedTokens.doge,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: serializedTokens.tpt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: serializedTokens.sushi,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: serializedTokens.twt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: serializedTokens.bnb,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n\n  return (\n    <Button>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/nfts/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/nfts/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Nft } from './types'\nimport { IPFS_GATEWAY } from '../../index'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    identifier: 'baller',\n    id: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    identifier: 'lucky',\n    id: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    identifier: 'lottie',\n    id: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    identifier: 'claire',\n    id: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    identifier: 'syrup-soak',\n    id: 16,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    identifier: 'easter-champion-storm',\n    id: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    identifier: 'easter-caker',\n    id: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    identifier: 'easter-flipper',\n    id: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    identifier: 'easter-storm',\n    id: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    identifier: 'bullish',\n    id: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    identifier: 'hiccup',\n    id: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    identifier: 'sleepy',\n    id: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    identifier: 'sunny',\n    id: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    identifier: 'churro',\n    id: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    identifier: 'dollop',\n    id: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    identifier: 'twinkle',\n    id: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    identifier: 'swapsies',\n    id: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    identifier: 'drizzle',\n    id: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    identifier: 'blueberries',\n    id: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    identifier: 'circular',\n    id: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    identifier: 'sparkle',\n    id: 4,\n  },\n]\n\nexport default Nfts\n","import pancakeBunnies from './pancakeBunnies'\nimport { CollectionKey, Nfts } from './types'\n\nconst nfts: Nfts = {\n  [CollectionKey.PANCAKE]: pancakeBunnies,\n}\n\nexport default nfts\nexport { default as collections } from './collections'\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: serializedTokens.syrup,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n \n]\n\nexport default farms\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n}\n\nexport default collections\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://www.vizslaswap.com/images/logo.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('VizslaSwap')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('VizslaSwap')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('VizslaSwap')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('VizslaSwap')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('VizslaSwap')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('VizslaSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('VizslaSwap')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('VizslaSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('VizslaSwap')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('VizslaSwap')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('VizslaSwap')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('VizslaSwap')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('VizslaSwap')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('VizslaSwap Info & Analytics')}`,\n        description: 'View statistics for VizslaSwap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('VizslaSwap Info & Analytics')}`,\n        description: 'View statistics for VizslaSwap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Pools')} | ${t('VizslaSwap Info & Analytics')}`,\n        description: 'View statistics for VizslaSwap exchanges.',\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Address, Images } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n}\n\ntype Collection = {\n  name: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type Nft = {\n  id?: number | string\n  name: string\n  description: string\n  images: NftImages\n  video?: {\n    webm: string\n    mp4: string\n  }\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  attributes?: any\n}\n\nexport type Nfts = {\n  [key in CollectionKey]: Nft[]\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import nfts from 'config/constants/nfts'\nimport { IPFS_GATEWAY } from 'config'\nimport collections from 'config/constants/nfts/collections'\nimport { Nft, CollectionKey } from 'config/constants/nfts/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getBunnyNftAddress = (collectionKey: CollectionKey = CollectionKey.PANCAKE) => {\n  return getAddress(collections[collectionKey].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  return nfts.pancake.find((nft) => {\n    return uriData.image.includes(nft.identifier)\n  })\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        <SubNav />\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = mainnetTokens.busd\nconst { wbnb: WBNB } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WBNB)) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WBNB)\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WBNB)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\n  return bnbBusdPrice\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport collections from 'config/constants/nfts/collections'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\n      const { address: addressObj } = collections[nftSourceType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/6.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: 'https://www.vizslaswap.com/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://www.vizslaswap.com/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://www.vizslaswap.com/liquidity',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: 'https://www.vizslaswap.com/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: 'https://www.vizslaswap.com/pools',\n  },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: '/info/token/0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: 'https://www.vizslaswap.com/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: 'https://www.vizslaswap.com/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('CAKE bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@pancakeswap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to <b title={recipient}>{truncateHash(recipient)}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/nfts/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.id} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { id } = Nfts.pancake.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, id, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { id } = Nfts.pancake.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, id, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { id } = Nfts.pancake.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, id, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/nfts/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.pancake.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.pancake.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.pancake.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/home\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n            {/* Info pages */}\n            <Route path=\"/\">\n            <Redirect to=\"/info/token/0xadaae082237cb1772c9e079db95c117e6dd0c5af\" />\n              <Info />\n            </Route>\n    \n\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}